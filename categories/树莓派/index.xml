<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>树莓派 on Jacob's Thoughts</title><link>https://weixiang.github.io/categories/%E6%A0%91%E8%8E%93%E6%B4%BE/</link><description>Recent content in 树莓派 on Jacob's Thoughts</description><generator>Hugo -- 0.131.0</generator><language>zh</language><copyright>©2017-2024 Jacob&amp;rsquo;s Thoughts</copyright><lastBuildDate>Fri, 13 Aug 2021 00:00:00 +0800</lastBuildDate><atom:link href="https://weixiang.github.io/categories/%E6%A0%91%E8%8E%93%E6%B4%BE/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 Android 手机制作树莓派镜像 SD 卡</title><link>https://weixiang.github.io/posts/use-android-device-to-make-a-raspberry-pi-image-sd-card/</link><pubDate>Fri, 13 Aug 2021 00:00:00 +0800</pubDate><guid>https://weixiang.github.io/posts/use-android-device-to-make-a-raspberry-pi-image-sd-card/</guid><description>需要为 Raspberry Pi 制作系统镜像 SD 卡，但电脑不在附近？这个美妙的 Android 应用可以胜任这份工作！更加美妙的是它不需要 Root！</description><content:encoded><![CDATA[<h2 id="引子">引子</h2>
<blockquote>
<p>需要为 Raspberry Pi 制作系统镜像 SD 卡，但电脑不在附近？这个美妙的 Android 应用可以胜任这份工作！更加美妙的是它不需要 Root！</p>
</blockquote>
<p>今天树莓派的系统不小心被我搞炸了，不知道如何修复，需要重装系统才能解决，但正巧没有电脑，于是便想能不能用手机来制作树莓派的系统镜像 SD 卡。</p>
<p>Google 了一下还真行。</p>
<p>由于还没有类似的中文教程，这里简单记录一下就作为「中文首发」吧。?</p>
<h2 id="下载-app">下载 APP</h2>
<p>在「Play 商店」或「APK Pure」中搜索「Pi SD Card Imager」即可下载。</p>
<p>传送门 → <a href="https://play.google.com/store/apps/details?id=com.redrobe.raspicardimager&hl=en_US&gl=US">Pi SD Card Imager - Apps on Google Play</a></p>
<h2 id="下载系统镜像">下载系统镜像</h2>
<p>打开 APP，默认会为你选择一个「boot」镜像。需要更改的话，点右上角「Choose OS」即可更换，我选择了「Raspberry Pi OS (32-bit)」。</p>
<p>点击软件下方的「Download」即可开始下载。</p>
<p>下载过程中尽量保持 APP 在前台运行。
非常神奇的是它下载并不需要魔法加持，而且速度还很快，甚至如果使用了魔法它还会变慢。</p>
<h2 id="连接-sd-卡">连接 SD 卡</h2>
<p>将需要烧录的 SD 卡连入手机。有 SD 卡槽的手机可以直接插入卡槽中，没有 SD 卡槽的手机可以使用「OTG+ 读卡器」的方案来连接 SD 卡。</p>
<h2 id="格式化-sd-卡">格式化 SD 卡</h2>
<p>在 APP 右上角选择「Format SD」，在系统界面中格式化 SD 卡即可。</p>
<h2 id="开始烧写">开始烧写</h2>
<p>回到 APP，右上角「Choose SD or USB」，接着在系统界面中授予 APP 访问 SD 卡的权限。</p>
<p>我的树莓派没有屏幕也没有鼠标键盘，所以需要选择自动配置 SSH 和自动安装。勾选「Install opinions」中的两项即可。</p>
<p>最后点击 APP 左下角的「Write to SD」即可开始烧写，期间要保持 APP 在前台，不要触碰 OTG 线。</p>
<h2 id="大功告成">大功告成</h2>
<p>等待进度条跑完，SD 卡就烧写完毕了，此时在系统通知栏中选择「弹出」来安全移除 SD 卡，就能拔出 SD 卡插入到树莓派中了。树莓派会自动执行剩下的安装程序。</p>
]]></content:encoded></item><item><title>用 Pi-hole 搭建一个树莓派黑洞</title><link>https://weixiang.github.io/posts/use-pi-hole-to-build-a-raspberry-pi-black-hole/</link><pubDate>Mon, 12 Apr 2021 05:19:00 +0800</pubDate><guid>https://weixiang.github.io/posts/use-pi-hole-to-build-a-raspberry-pi-black-hole/</guid><description>通过您自己的 Linux 硬件进行广告拦截！Pi- hole®是一个 DNS 沉洞服务器，无需安装任何客户端软件即可保护您的设备免受有害内容的侵害。</description><content:encoded><![CDATA[<blockquote>
<p><strong>通过您自己的 Linux 硬件进行广告拦截</strong></p>
</blockquote>
<p>Pi- <a href="https://pi-hole.net/trademark-rules-and-brand-guidelines/">hole®</a>是一个<a href="https://en.wikipedia.org/wiki/DNS_Sinkhole">DNS 沉洞服务器</a>，无需安装任何客户端软件即可保护您的设备免受有害内容的<a href="https://en.wikipedia.org/wiki/DNS_Sinkhole">侵害</a>。</p>
<ul>
<li><strong>易于安装</strong>：安装程序将引导您完成整个过程，并且<a href="https://www.youtube.com/watch?v=vKWjx1AQYgs">只需不到十分钟的时间</a></li>
<li><strong>强大</strong>：不仅是网页去广告，还能去除 APP 内置广告和智能电视广告</li>
<li><strong>响应式</strong>：通过缓存 DNS 查询来无缝地加快日常网络加载的速度</li>
<li><strong>轻巧</strong>：运行平稳，<a href="https://discourse.pi-hole.net/t/hardware-software-requirements/273">对硬件的性能要求很小</a></li>
<li><strong>全能</strong>：拥有一个命令行界面，有稳定操作性的保证</li>
<li><strong>优雅的 UI</strong>：一个漂亮的响应式 Web 界面仪表板，可查看和控制您的 Pi-hole</li>
<li><strong>多功能</strong>：可以选择用作<a href="https://discourse.pi-hole.net/t/how-do-i-use-pi-holes-built-in-dhcp-server-and-why-would-i-want-to/3026">DHCP 服务器</a>，自动保护局域网内的<em>所有</em>设备</li>
<li><strong>可扩展性</strong>：安装在服务器级硬件上时<a href="https://pi-hole.net/2017/05/24/how-much-traffic-can-pi-hole-handle/">能够处理数亿个查询</a></li>
<li><strong>现代</strong>：能够阻止 IPv4 和 IPv6 上的广告</li>
<li><strong>免费</strong>：开源软件，你的隐私只在你的手里</li>
</ul>
<h2 id="需要准备的材料">需要准备的材料</h2>
<ul>
<li>一个树莓派（以 3B+ 为例）</li>
<li>USB 电源适配器（5V，不小于 2A）</li>
<li>USB 电缆</li>
<li>8G 以上的高速 TF 卡</li>
<li>电脑（以 Windows 为例）</li>
<li>网线</li>
<li>互联网连接（推荐使用 真 · 互联网）</li>
</ul>
<h2 id="开始安装">开始安装</h2>
<p>首先我们需要将树莓派接入路由器，有线或无线均可，然后 SSH 远程登录到树莓派上：</p>
<p>不会的同学请先去看上一篇文章，本文不再赘述如何初始化、连接到树莓派。</p>
<p>使用官方的一键安装脚本即可快速安装（我额外加了以 root 运行）：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">curl -sSL https://install.pi-hole.net <span class="p">|</span> sudo bash
</span></span></code></pre></div><p>等待一会，然后一路回车即可，个人认为默认的设置就很不错了。如果你想搞特殊，也可以停下来用 Google 翻译看看，根据自己想需要调整设置。</p>
<p><strong>因为众所周知的原因，安装过程可能需要魔法！</strong></p>
<p>如果你和我一样在这里卡了很久或者直接 error 了，说明你需要使用魔法。</p>
<p>至于具体操作请自己 Google 一下吧，我这里也不太好直接向麻瓜们直接展示对吧。（搜索关键词：树莓派 + 魔法名称）</p>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2021/07/ce442dcfb36d6358.webp" alt=""  />
</p>
<p>安装完毕，记下访问地址和密码。</p>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2021/07/31a7b37aea789e4a.webp" alt=""  />
</p>
<h2 id="调整-pi-hole-的设置">调整 Pi-hole 的设置</h2>
<p>用浏览器访问刚刚的地址就能看到主页了，或者也可以访问 <a href="http://pi.hole/admin">http://pi.hole/admin</a></p>
<p>主页展示的是 Pi-hole 的实时运行状态，点击 Login 输入记下的密码即可登录到控制台。</p>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2021/07/4d988d18bf797756.webp" alt=""  />
</p>
<p>控制台就是这样的，现在可以开始调整 Pi-hole 的设置来获得更好的体验了：</p>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2021/07/bd03f70004631eaa.webp" alt=""  />
</p>
<h3 id="添加-hosts-源">添加 hosts 源</h3>
<p>实际上，Pi-hole 使用的是 hosts 方式对广告进行过滤（类似 AdAway），所以 hosts 源的好坏直接决定了用户体验。自带的 host 对于我国网络环境来说可能会水土不服，下面推荐几个知名 hosts 源，可以到  Settings - Blocklists 里面添加自定义源，添加一个之后按 Save 保存，全部添加完成后按 Save and Update 来更新 host 并保存设置。</p>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2021/07/1d8f1ef3b816cab6.webp" alt=""  />
</p>
<ul>
<li><a href="https://github.com/vokins/yhosts">yhosts</a>：可以说是国内比较老牌的知名 hosts，定期有更新，但作者主观屏蔽了一些非广告网站，可以用下面的命令手动添加白名单来解决不够客观的问题：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">pihole -w <span class="sb">`</span>curl -sSL https://raw.githubusercontent.com/vokins/yhosts/master/data/moot/cps.txt https://raw.githubusercontent.com/vokins/yhosts/master/data/moot/error.txt https://raw.githubusercontent.com/vokins/yhosts/master/data/moot/hate.txt <span class="p">|</span> sed <span class="s1">&#39;/^@/d; /^#/d; s/127.0.0.1 //&#39;</span> <span class="p">|</span> tr <span class="s2">&#34;\n&#34;</span> <span class="s2">&#34; &#34;</span><span class="sb">`</span>
</span></span></code></pre></div><ul>
<li><a href="https://github.com/neko-dev/neohosts">neoHosts</a>：比较小众的 hosts，但也口碑不错，看介绍貌似是不满于上面那位而弄出来的。</li>
<li><a href="https://adaway.org/">AdAway</a>、<a href="https://pgl.yoyo.org/adservers">Yoyos</a>、<a href="http://winhelp2002.mvps.org/">MVPS</a>：知名去广告软件 AdAway 的默认源，有些水土不服。</li>
<li><a href="https://github.com/jdlingyu/ad-wars">大圣净化</a>：Android 平台知名去广告软件大圣净化的规则，针对视频网站优化。</li>
<li><a href="https://github.com/googlehosts/hosts">GoogleHosts</a>：一个能帮助你访问 404 网站的 hosts。</li>
</ul>
<p>更多 hosts 可以去 GitHub 上搜索，或者到 AdAway 的 Wiki 看看：<a href="https://github.com/AdAway/AdAway/wiki/HostsSources">https://github.com/AdAway/AdAway/wiki/HostsSources</a></p>
<p>相较于通常的过滤方式（如 Adblock Plus、KoolProxy 等），利用 hosts 过滤有自己的优缺点。优点是不会拖累网速（甚至可能有一定提升），缺点是过滤效果不尽如人意。</p>
<h3 id="添加国内-dns-服务器">添加国内 DNS 服务器</h3>
<p>Pi-hole 在安装时已经设置过一次 DNS 服务器了，但因为是国外的 DNS 服务，速度可能会比较慢，通过添加国内的 DNS 服务可以提高速度。</p>
<p>进入 Settings - DNS - Upstream DNS Servers 就可以添加 DNS 服务器了。</p>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2021/07/602215aea76932ad.webp" alt=""  />
</p>
<h4 id="国内常见公共-dns-服务">国内常见公共 DNS 服务</h4>
<h5 id="腾讯-dnspod">腾讯 DNSPod</h5>
<p><a href="https://www.dnspod.cn/Products/Public.DNS">https://www.dnspod.cn/Products/Public.DNS</a></p>
<p>Anycast：上海、天津、广州、香港</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">IPv4：119.29.29.29 / 119.28.28.28
</span></span></code></pre></div><blockquote>
<p>这是 DNSPod 建立的公共 DNS，之后 DNSPod 被腾讯收购以后由腾讯云负责运营。腾讯 DNSPod 公共 DNS 配置了 Anycast，节点囊括了腾讯云所有可用区的节点（包括海外），所以速度还是不错的，并且除了支持 ECS 以外还有一些关于 DNS 出口选择优化的加成，所以 CDN 解析结果相对准确很多。但是 SLA 却并不优秀 —— <del>曾经</del> 经常遭遇 DDoS 攻击导致无法解析。除此以外，由于相对出名、使用人数较多，是运营商重点劫持的对象。</p>
<p>值得一提的是，DNSPod 的公共 DNS 是免费提供 HTTPDNS 的，Demo 可以看 <a href="https://www.dnspod.cn/httpdns/demo">这里</a></p>
</blockquote>
<h5 id="阿里云公共-dns">阿里云公共 DNS</h5>
<p><a href="http://www.alidns.com">http://www.alidns.com</a></p>
<p>Anycast：成都、深圳、杭州</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">IPv4：223.5.5.5 / 223.6.6.6
</span></span><span class="line"><span class="cl">IPv6：2400:3200::1 / 2400:3200:baba::1
</span></span></code></pre></div><blockquote>
<p>阿里建立的公共 DNS。和腾讯一样，阿里公共 DNS 也是搭建在自家的云服务 —— 阿里云上。虽然也配置了 Anycast，不过不包括海外节点，<del>国内也就浙江阿里云和深圳阿里云两个节点，</del> 而且华北地区都是隧道穿透回深圳，响应速度略逊于 DNSPod 提供的公共 DNS；阿里公共 DNS 不支持 ECS，有 DNS 出口的优化 <del>（一般都是广东出口）</del>，。关于阿里的公共 DNS 没有听说太多宕机、无法使用相关的报告。<del>，但是倒是听说阿里公共 DNS 时常有返回 <code>NXDOMAIN</code> 影响使用体验。</del> <code>NSDOMAIN</code> 问题已得到一定缓解。阿里云 DNS 是国内首个支持 IPv6 的 DNS 服务。</p>
</blockquote>
<h5 id="南京信风公共-dns">南京信风公共 DNS</h5>
<p><a href="https://www.114dns.com/">https://www.114dns.com/</a></p>
<p>Anycast：南京、济南、芝加哥</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">IPv4：114.114.114.114 / 114.114.115.115
</span></span></code></pre></div><blockquote>
<p>无疑是国内最著名的公共 DNS，但是显然不是最好的。有 Anycast，国内有南京和<del>青岛</del>济南两个节点、海外有芝加哥节点，响应速度不敢恭维。国内最著名的公共 DNS、使用的人很多，SLA 非常可靠，因此也是运营商重点劫持的对象。但是考虑到南京信风为运营商旁路广告劫持提供技术和硬件支持，对他们提供的公共 DNS 服务还是戴着有色眼镜来看吧。</p>
</blockquote>
<h5 id="cnnic-公共-dns">CNNIC 公共 DNS</h5>
<p><a href="http://www.sdns.cn/">http://www.sdns.cn/</a>
北京、杭州、香港</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">IPv4：1.2.4.8 / 210.2.4.8
</span></span></code></pre></div><blockquote>
<p>CNNIC 名声并不好（CNNIC Root CA 的故事），因此有些许人相对都有些对 CNNIC 的抵触心理。CNNIC 的公共 DNS（SDNS）国内仅双点部署、Anycast 配得一塌糊涂、速度堪忧，解析结果没有 CDN 优化。至于撇开 CNNIC 来谈 SDNS 推不推荐使用？SLA 比 DNSPod 的公共 DNS 还惨，解析请求时不时超时，嗯。</p>
</blockquote>
<h5 id="百度公共-dns">百度公共 DNS</h5>
<p>北京、南京、深圳
<a href="https://dudns.baidu.com/">https://dudns.baidu.com/</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">IPv4：180.76.76.76
</span></span><span class="line"><span class="cl">IPv6：2400:da00::6666
</span></span></code></pre></div><blockquote>
<p>百度的名声现在怕是比 CNNIC 还要臭得多，他们的公共 DNS 于 2017 年上线，现在也不被太多人知道，不过还是简单提两笔：百度也为公共 DNS 也配置了 Anycast，国内是<del>单点百度北京数据中心</del>北京、南京、深圳三点，海外是单点百度香港数据中心。用的人少，也许不容易被运营商劫持，有兴趣的可以试一试看。</p>
</blockquote>
<h2 id="enjoy-it">Enjoy it</h2>
<p>到这里，你已经完成了树莓派的安装与初始化设置，你可以开始使用你的树莓派，做出令人惊叹的作品了！</p>
<p>希望你喜欢这篇文章，如果对你有帮助的话，别忘了点赞、收藏、分享和点击订阅，并留意更新动态。</p>
<p>Stay creative, and I will see you next time!</p>
<hr>
<p>本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名 - 非商业性使用 - 相同方式共享 4.0 国际许可协议</a>进行许可。</p>
<p>参考文献：</p>
]]></content:encoded></item><item><title>树莓派使用 V2Ray 魔法上网</title><link>https://weixiang.github.io/posts/raspberry-pi-uses-v2ray-magic-to-surf-the-internet/</link><pubDate>Mon, 13 Jul 2020 03:39:00 +0800</pubDate><guid>https://weixiang.github.io/posts/raspberry-pi-uses-v2ray-magic-to-surf-the-internet/</guid><description>本文将向你介绍如何使用树莓派配置和安装 V2Ray 和 privoxy，让树莓派顺畅访问国际互联网，并为局域网内的其他的设备提供 socks5 代理和 http 代理服务。</description><content:encoded><![CDATA[<blockquote>
<p>请注意：由于 V2Ray 项目变动，本文的操作方法已经失效，但仍具一定参考价值</p>
</blockquote>
<p>本文将向你介绍如何使用树莓派配置和安装 <code>V2Ray</code> 和 <code>privoxy</code> ，让树莓派顺畅访问国际互联网，并为局域网内的其他的设备提供 <code>socks5代理</code>和 <code>http代理</code>服务。</p>
<p>先来给大家解释一下基本原理：</p>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/markdown/image-20200410145120973.webp" alt="image-20200410145120973"  />
</p>
<p>啊不好意思放错了，应该是这张：</p>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/markdown/567px-VPN_overview-en.svg.webp" alt="File:VPN overview-en.svg"  />
</p>
<p>我们这篇文章要实现的目标是：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">graph LR
</span></span><span class="line"><span class="cl">A(你的设备/树莓派) --&gt; B(树莓派 Privoxy)
</span></span><span class="line"><span class="cl">B --&gt; |普通域名| E(目标网站)
</span></span><span class="line"><span class="cl">B --&gt; |魔法域名| C(树莓派 V2Ray 客户端) --&gt; D(V2Ray服务端) --&gt; E(目标网站)
</span></span><span class="line"><span class="cl">B --&gt; |广告域名| F(拦截)
</span></span></code></pre></div><h2 id="需要准备的材料">需要准备的材料</h2>
<ul>
<li>树莓派（以 3B+ 为例）</li>
<li>电源（5V，不小于 2A）</li>
<li>8G 以上的高速 TF 卡</li>
<li>电脑（以 Windows 为例）</li>
<li>网线</li>
<li>互联网连接（推荐使用 真 · 互联网）</li>
</ul>
<h2 id="安装和配置-v2ray">安装和配置 V2Ray</h2>
<h3 id="什么是-v2ray">什么是 V2Ray？</h3>
<p>V2Ray 是 Project V 下的一个工具。Project V 是一个包含一系列构建特定网络环境工具的项目，而 V2Ray 属于最核心的一个。官方中介绍 <code>Project V 提供了单一的内核和多种界面操作方式。内核（V2Ray）用于实际的网络交互、路由等针对网络数据的处理，而外围的用户界面程序提供了方便直接的操作流程。</code>不过从时间上来说，先有 V2Ray 才有 Project V。如果还是不理解，那么简单地说，V2Ray 是一个与 Shadowsocks 类似的代理软件，可以用来科学上网（施展魔法）学习国外先进科学技术。</p>
<h3 id="安装-v2ray">安装 V2Ray</h3>
<p>安装 V2Ray。可以使用 V2Ray 提供的 go.sh 脚本安装，由于 GFW 会恶化对 GitHub 的访问，直接运行脚本几乎无法安装，建议先从 <a href="https://github.com/v2ray/v2ray-core/releases">v2ray-core/releases</a> 将安装包<code>v2ray-linux-arm.zip</code>下载到树莓派，使用<code>--local</code>参数从本地安装</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget -O v2ray_install.sh  https://install.direct/go.sh
</span></span><span class="line"><span class="cl">chmod +x v2ray_install.sh
</span></span><span class="line"><span class="cl">sudo ./v2ray_install.sh --local v2ray-linux-arm.zip
</span></span></code></pre></div><h3 id="配置-v2ray">配置 V2Ray</h3>
<p>通过 v2rayN 可以导出节点配置为客户端配置，以下为 WS+TLS 的配置文件示例（请勿直接使用以下配置）：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;policy&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;system&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;statsInboundUplink&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;statsInboundDownlink&#34;</span><span class="p">:</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;log&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;access&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;error&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;loglevel&#34;</span><span class="p">:</span> <span class="s2">&#34;warning&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;inbounds&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;tag&#34;</span><span class="p">:</span> <span class="s2">&#34;proxy&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;port&#34;</span><span class="p">:</span> <span class="mi">1080</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;listen&#34;</span><span class="p">:</span> <span class="s2">&#34;0.0.0.0&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;protocol&#34;</span><span class="p">:</span> <span class="s2">&#34;socks&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;sniffing&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;enabled&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;destOverride&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;http&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;tls&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">]</span>
</span></span><span class="line"><span class="cl">      <span class="p">},</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;settings&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;auth&#34;</span><span class="p">:</span> <span class="s2">&#34;noauth&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;udp&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;ip&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;address&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;clients&#34;</span><span class="p">:</span> <span class="kc">null</span>
</span></span><span class="line"><span class="cl">      <span class="p">},</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;streamSettings&#34;</span><span class="p">:</span> <span class="kc">null</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;tag&#34;</span><span class="p">:</span> <span class="s2">&#34;api&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;port&#34;</span><span class="p">:</span> <span class="mi">8224</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;listen&#34;</span><span class="p">:</span> <span class="s2">&#34;127.0.0.1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;protocol&#34;</span><span class="p">:</span> <span class="s2">&#34;dokodemo-door&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;sniffing&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;settings&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;auth&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;udp&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;ip&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;address&#34;</span><span class="p">:</span> <span class="s2">&#34;127.0.0.1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;clients&#34;</span><span class="p">:</span> <span class="kc">null</span>
</span></span><span class="line"><span class="cl">      <span class="p">},</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;streamSettings&#34;</span><span class="p">:</span> <span class="kc">null</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;outbounds&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;tag&#34;</span><span class="p">:</span> <span class="s2">&#34;proxy&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;protocol&#34;</span><span class="p">:</span> <span class="s2">&#34;vmess&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;settings&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;vnext&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">          <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;address&#34;</span><span class="p">:</span> <span class="s2">&#34;192.19.108.30&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;port&#34;</span><span class="p">:</span> <span class="mi">443</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;users&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;96603728-5243-4b0a-94c1-0b4c22a69eeb&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&#34;alterId&#34;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&#34;email&#34;</span><span class="p">:</span> <span class="s2">&#34;t@t.tt&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&#34;security&#34;</span><span class="p">:</span> <span class="s2">&#34;auto&#34;</span>
</span></span><span class="line"><span class="cl">              <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="p">]</span>
</span></span><span class="line"><span class="cl">          <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;servers&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;response&#34;</span><span class="p">:</span> <span class="kc">null</span>
</span></span><span class="line"><span class="cl">      <span class="p">},</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;streamSettings&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;network&#34;</span><span class="p">:</span> <span class="s2">&#34;ws&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;security&#34;</span><span class="p">:</span> <span class="s2">&#34;tls&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;tlsSettings&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;allowInsecure&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;serverName&#34;</span><span class="p">:</span> <span class="s2">&#34;v2ray.com&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;tcpSettings&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;kcpSettings&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;wsSettings&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;connectionReuse&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;path&#34;</span><span class="p">:</span> <span class="s2">&#34;/v2ray&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;headers&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;Host&#34;</span><span class="p">:</span> <span class="s2">&#34;v2ray.com&#34;</span>
</span></span><span class="line"><span class="cl">          <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;httpSettings&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;quicSettings&#34;</span><span class="p">:</span> <span class="kc">null</span>
</span></span><span class="line"><span class="cl">      <span class="p">},</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;mux&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;enabled&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;concurrency&#34;</span><span class="p">:</span> <span class="mi">8</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;tag&#34;</span><span class="p">:</span> <span class="s2">&#34;direct&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;protocol&#34;</span><span class="p">:</span> <span class="s2">&#34;freedom&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;settings&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;vnext&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;servers&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;response&#34;</span><span class="p">:</span> <span class="kc">null</span>
</span></span><span class="line"><span class="cl">      <span class="p">},</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;streamSettings&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;mux&#34;</span><span class="p">:</span> <span class="kc">null</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;tag&#34;</span><span class="p">:</span> <span class="s2">&#34;block&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;protocol&#34;</span><span class="p">:</span> <span class="s2">&#34;blackhole&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;settings&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;vnext&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;servers&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;response&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;http&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="p">},</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;streamSettings&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;mux&#34;</span><span class="p">:</span> <span class="kc">null</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;stats&#34;</span><span class="p">:</span> <span class="p">{},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;api&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;tag&#34;</span><span class="p">:</span> <span class="s2">&#34;api&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;services&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;StatsService&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">]</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;dns&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;routing&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;domainStrategy&#34;</span><span class="p">:</span> <span class="s2">&#34;IPIfNonMatch&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;rules&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;field&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;port&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;inboundTag&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;api&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;outboundTag&#34;</span><span class="p">:</span> <span class="s2">&#34;api&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;ip&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;domain&#34;</span><span class="p">:</span> <span class="kc">null</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">]</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>将配置文件上传到树莓派，使用下面的命令替换默认配置：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo mv config.json /etc/v2ray/
</span></span></code></pre></div><p>检查配置文件并添加到系统启动项</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">/usr/bin/v2ray/v2ray -test -config /etc/v2ray/config.json <span class="c1"># 查看配置文件是否出错</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sudo systemctl start v2ray <span class="c1"># 启动v2ray服务</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sudo systemctl status v2ray <span class="c1"># 查看v2ray运行状态</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sudo systemctl <span class="nb">enable</span> v2ray <span class="c1"># 将v2ray加入开机自启动</span>
</span></span></code></pre></div><p>执行 <code>curl -so /dev/null -w &quot;%{http_code}&quot; google.com -x socks5://127.0.0.1:1080</code> 确认 V2Ray 已经可以使用魔法 (命令中 Socks5 指 inbound 协议为 socks，1080 指该 inbound 端口是 1080)。如果执行这个命令出现了 301 或 200 这类数字的话代表可以使用魔法，如果长时间没反应或者是 000 的话说明不可以使用魔法。[^1]</p>
<h2 id="privoxy-使用指南">Privoxy 使用指南</h2>
<p>Privoxy 是一个免费的开源非缓存 Web 代理，可以过滤和处理传入的数据。</p>
<p>使用 Privoxy，我们可以让树莓派变成你的局域网代理服务器。</p>
<p><a href="https://www.privoxy.org/">Privoxy</a> 的<a href="https://www.privoxy.org/">好处</a>是，可以在网页数据到达浏览器之前对其进行过滤和操作。</p>
<p>这也意味着可以使用 Privoxy 充当浏览器的广告拦截器。</p>
<h3 id="简介精简版">简介精简版</h3>
<p><a href="https://www.privoxy.org/">Privoxy</a> 是个很朴素但很强大的工具，基本功能和 <a href="https://proxy-switchyomega.com/">switchyomega</a> 类似：根据规则来处理请求流向 —— 但不仅限于影响浏览器，我理解它介于 iptables 和 Switchyomega 之间。可以把接收到的请求，根据规则转发到下一次代理：比如 1080 常用来使用魔法，那么 Google 就走 1080，百度不需要使用魔法就直连。还可以根据规则屏蔽广告和垃圾站点。</p>
<h3 id="简介故事版">简介故事版</h3>
<p>电脑联网了，就像在大山里的村庄有了一条通往市里的路，我们发起的所有请求，都会通过这条路走出去。有一天你发现这条路走下去，到另一个方向的城市会南辕北辙走不通，但是这条路附近呢又有另一个村子，到那边就能通了，所以你在路上开了一条小路去那个村子借道：第一个城市就是我们平常的请求比如百度淘宝知乎，第二条路走下去可能是谷歌脸书推特油管，也有可能是公司的内网环境，另一个村子就是 VPN，它或许是墙外的节点，或许是公司里那个看门的。</p>
<p>这些路怎么走通往哪里，你知道了，但其他村民可能不知道，他们走到岔路口不知道它是通往哪里的，所以你就立了个路牌了做指向。Privoxy 是这个路牌，Switchyomega 也是这个路牌，<a href="https://www.proxifier.com/">proxifier</a> 也是路牌之一 (mac 和 Windows 可用，有 GUI 和请求的详细日志，要花钱的)。这样理解的话，所有类型的 VPN 该怎么用就都好配置了。</p>
<p>不建议盲目开全局，虽然它可能经常是管用的，但实际上所有流量都走了 &ldquo;另一个村子&rdquo; 再绕回来，天寒地冻路远不说，而且像网易这样的 &ldquo;店面&rdquo;，绕一下它可能就不接待你了 (他只认你哪里来的)。</p>
<h3 id="在-树莓派上安装-privoxy">在 树莓派上安装 Privoxy</h3>
<p>各个 Linux 发行版源里都有，直接包管理器装即可。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo apt-get -y install privoxy <span class="c1"># 安装privoxy</span>
</span></span></code></pre></div><p>mac 可以 <code>brew install privoxy</code> ，然后用 brew sevices 子命令管理。( 官方也有提供<a href="https://www.privoxy.org/sf-download-mirror/">安装包</a> )</p>
<p>Windows, 官方同样给了包和安装文档，但是等有空再写吧（其实基本就不想弄了…</p>
<h3 id="配置">配置</h3>
<p>在开始本节之前，强烈建议确保树莓派有静态的局域网 IP 地址。</p>
<p>可以通过以下命令来查看树莓派的 IP</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">hostname-I
</span></span></code></pre></div><p>debian 装 privoxy，它的配置文件里注释写的跟论文一样长，最开始的时候就被吓退了。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">~ λ k -h /etc/privoxy
</span></span><span class="line"><span class="cl"> config                      <span class="c1"># 主配置文件</span>
</span></span><span class="line"><span class="cl"> default.action
</span></span><span class="line"><span class="cl"> default.filter
</span></span><span class="line"><span class="cl"> gfwlist.action              <span class="c1"># 自己生成的，用了 gfwlist 清单</span>
</span></span><span class="line"><span class="cl"> match-all.action 
</span></span><span class="line"><span class="cl"> regression-tests.action 
</span></span><span class="line"><span class="cl"> templates 
</span></span><span class="line"><span class="cl"> trust 
</span></span><span class="line"><span class="cl"> user.action
</span></span><span class="line"><span class="cl"> user.filter
</span></span></code></pre></div><p>config 文件处理 :</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo cp /etc/privoxy/config /etc/privoxy/config.bak    <span class="c1"># 做个备份</span>
</span></span><span class="line"><span class="cl">sudo nano /etc/privoxy/config  <span class="c1"># 编辑配置文件</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 修改监听范围和端口（任选一句）</span>
</span></span><span class="line"><span class="cl">listen-address 127.0.0.1:8118  <span class="c1"># 监听本机的8118端口（仅树莓派魔法）</span>
</span></span><span class="line"><span class="cl">listen-address 0.0.0.0:8118    <span class="c1"># 监听本机+局域网的8118端口（树莓派+局域网魔法）</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 添加代理规则（任选一句）</span>
</span></span><span class="line"><span class="cl">actionsfile gfwlist.action     <span class="c1"># 让 privoxy 加载 gfwlist.action 实现智能分流</span>
</span></span><span class="line"><span class="cl">forward-socks5t / 127.0.0.1:1080 .  <span class="c1"># 全局代理无分流，注意后面还有一个点</span>
</span></span></code></pre></div><p>完成后，按 <code>CTRL+ X</code> ，然后按 <code>Y</code> ，最后按 <code>ENTER</code> 保存文件。</p>
<h4 id="生成-gfwlistaction-文件">生成 gfwlist.action 文件</h4>
<p>这个项目可以很方便的帮忙生成这个配置：<a href="https://github.com/zfl9/gfwlist2privoxy">https://github.com/zfl9/gfwlist2privoxy</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">curl -4sSkLO https://raw.github.com/zfl9/gfwlist2privoxy/master/gfwlist2privoxy
</span></span><span class="line"><span class="cl">sudo mv gfwlist2privoxy /usr/local/bin <span class="o">&amp;&amp;</span> sudo chmod a+x /usr/local/bin/gfwlist2privoxy
</span></span><span class="line"><span class="cl"><span class="c1"># 放到 &#34;PATH&#34; 里保留，常用的</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">bash gfwlist2privoxy 127.0.0.1:1080
</span></span><span class="line"><span class="cl"><span class="c1">#  注意将 127.0.0.1:1080 替换为你的 socks5 地址</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sudo mv -f gfwlist.action /etc/privoxy/
</span></span><span class="line"><span class="cl"><span class="c1"># gfwlist.action 移动到 privoxy 配置文件目录</span>
</span></span><span class="line"><span class="cl">sudo systemctl restart privoxy
</span></span><span class="line"><span class="cl"><span class="c1"># 重启一下确保配置生效</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sudo service privoxy status
</span></span><span class="line"><span class="cl"><span class="c1"># 查看privoxy运行状态</span>
</span></span></code></pre></div><p>tips: Privoxy 启动后，你设备配置好 HTTP 代理后，浏览器里输入 <code>http://p.p</code> ，你可以看到 Privoxy 成功启动的界面。</p>
<h4 id="自定义配置">自定义配置</h4>
<p>如果你有公司的 VPN，Git 仓库或者其他办公站点也需要走代理，可以很方便的加一个配置。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo touch /etc/proxy/autovpn.action
</span></span><span class="line"><span class="cl">sudo <span class="nb">echo</span> <span class="s1">&#39;actionsfile autovpn.action&#39;</span> &gt;&gt;/etc/privoxy/config
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 以下注释可以删除</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sudo cat &gt; /etc/proxy/autovpn.action <span class="s">&lt;&lt;EOF
</span></span></span><span class="line"><span class="cl"><span class="s">{{alias}}
</span></span></span><span class="line"><span class="cl"><span class="s">alauda = +forward-override{forward-socks5 127.0.0.1:5087 .}
</span></span></span><span class="line"><span class="cl"><span class="s"># alias 是定义别名的意思，可以在此处定义转发规则
</span></span></span><span class="line"><span class="cl"><span class="s">{alauda}
</span></span></span><span class="line"><span class="cl"><span class="s">.alauda.io
</span></span></span><span class="line"><span class="cl"><span class="s">.alaudatech.com
</span></span></span><span class="line"><span class="cl"><span class="s"># 引用别名，在其后紧跟需要适配这个规则的域名
</span></span></span><span class="line"><span class="cl"><span class="s"># 支持泛域名，比如 .baidu.com 可以匹配 www.baidu.com，tieba.baidu.com
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sudo systemctl restart privoxy
</span></span><span class="line"><span class="cl"><span class="c1"># 重启一下确保配置生效</span>
</span></span></code></pre></div><h3 id="开始施展魔法">开始施展魔法</h3>
<h4 id="树莓派">树莓派</h4>
<h5 id="浏览器">浏览器</h5>
<p>在 Chrome 中：</p>
<ol>
<li>打开“ <code>Settings</code>”菜单，或在地址栏中输入<code>chrome://settings</code></li>
<li>向下滚动到底部</li>
<li>点击“ <strong>高级</strong> ”打开高级设置</li>
<li>向下滚动，直到看到“ <strong>系统</strong> ”选项</li>
<li>点击 <code>打开您计算机的代理设置</code></li>
</ol>
<p><strong>IP 地址</strong>填入树莓派的 IP，<strong>端口</strong>默认情况下应设置为<code>8118</code>（Privoxy 监听的端口）</p>
<p>或者：Chrome、Firefox 有 Switchyomega 这个插件可以处理转发规则，配置也简单，但需要各自配置，使用 Privoxy 可以集中在一个地方处理。修改浏览器的代理，使用 <code>http://localhost:8118</code> 即可。</p>
<h5 id="终端">终端</h5>
<h6 id="方法-1">方法 1</h6>
<p>在终端中直接运行命令</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 示例：本地 HTTP 代理</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span>  <span class="nv">http_proxy</span><span class="o">=</span>http://localhost:8118
</span></span><span class="line"><span class="cl"><span class="nb">export</span>  <span class="nv">https_proxy</span><span class="o">=</span>http://localhost:8118
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 示例：本地 Socks5 代理</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">http_proxy</span><span class="o">=</span>socks5://127.0.0.1:1080
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">https_proxy</span><span class="o">=</span>socks5://127.0.0.1:1080
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 也可以用 ALL_PROXY</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">ALL_PROXY</span><span class="o">=</span>socks5://localhost:1080
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 如果代理服务器需要登陆，这时可以直接把用户名和密码写进去</span>
</span></span><span class="line"><span class="cl"><span class="nv">http_proxy</span><span class="o">=</span>http://userName:password@proxyAddress:port
</span></span></code></pre></div><p>设置完毕后 <code>wget</code> <code>curl</code> 这类网络命令都会经过设置的代理。</p>
<p><code>localhost</code> 就是一个域名，域名默认指向 <code>127.0.0.1</code>，两者是一样的。</p>
<p>这个办法的好处是简单直接，并且影响面很小，只对当前终端有效，退出就不行了。</p>
<h6 id="方法-2">方法 2</h6>
<p>把代理服务器地址写入 shell 配置文件<code>.bashrc</code> 或者<code>.zshrc</code></p>
<p>直接在<code>.bashrc</code> 或者<code>.zshrc</code> 添加下面内容</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 示例：本地 HTTP 代理</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">http_proxy</span><span class="o">=</span><span class="s2">&#34;http://localhost:port&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">https_proxy</span><span class="o">=</span><span class="s2">&#34;http://localhost:port&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 示例：本地 Socks5 代理</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">http_proxy</span><span class="o">=</span><span class="s2">&#34;socks5://127.0.0.1:1080&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">https_proxy</span><span class="o">=</span><span class="s2">&#34;socks5://127.0.0.1:1080&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 也可以用 ALL_PROXY</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">ALL_PROXY</span><span class="o">=</span>socks5://127.0.0.1:1080
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 如果代理服务器需要登陆，这时可以直接把用户名和密码写进去</span>
</span></span><span class="line"><span class="cl"><span class="nv">http_proxy</span><span class="o">=</span>http://userName:password@proxyAddress:port
</span></span></code></pre></div><p>然后 <code>Ctrl + X</code> 保存文件，接着在终端中执行 <code>source ~/.bashrc</code></p>
<p>或者退出当前终端再起一个终端。这个办法的好处是把代理服务器永久保存了，下次就可以直接用了。</p>
<p>或者通过设置 Alias 简写来简化操作，每次要用的时候输入 <code>setproxy</code>，不用了就 <code>unsetproxy</code>。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">alias</span> <span class="nv">setproxy</span><span class="o">=</span><span class="s2">&#34;export ALL_PROXY=socks5://127.0.0.1:1080&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">alias</span> <span class="nv">unsetproxy</span><span class="o">=</span><span class="s2">&#34;unset ALL_PROXY&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">alias</span> <span class="nv">ip</span><span class="o">=</span><span class="s2">&#34;curl -i http://ip.cn&#34;</span>
</span></span></code></pre></div><h6 id="方法-3">方法 3</h6>
<p>改相应工具的配置</p>
<p>比如 <code>apt</code> 的配置：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo nano /etc/apt/apt.conf
</span></span></code></pre></div><p>在文件末尾加入下面这行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">Acquire::http::Proxy <span class="s2">&#34;http://proxyAddress:port&#34;</span>
</span></span></code></pre></div><p>保存 <code>apt.conf</code> 文件即可。</p>
<p>更多关于 <code>apt</code> 的代理设置可以参考 <a href="https://askubuntu.com/questions/349702/apt-conf-acquirehttpproxy-proxyserverport-seems-not-to-be-used-ubuntu-13">ASK UBUNTU 里的这个问题</a></p>
<p>Git 的设置：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">git config --global http.proxy &#39;socks5://127.0.0.1:1080&#39; 
</span></span><span class="line"><span class="cl">git config --global https.proxy &#39;socks5://127.0.0.1:1080&#39;
</span></span></code></pre></div><p>Git 仓库有的在国内有的在国外，国内的有 GitCafe、Coding.net、开源中国 Git，所以用国内的就没必要设置了，反而会慢。</p>
<h4 id="局域网内其他设备使用">局域网内其他设备使用</h4>
<h5 id="浏览器-1">浏览器</h5>
<p>每种浏览器的设置不同，下面是一份快速指南：</p>
<ul>
<li>在 Chrome 中：</li>
</ul>
<ol>
<li>打开“ <code>Settings</code>”菜单，或在地址栏中输入<code>chrome://settings</code></li>
<li>向下滚动到底部</li>
<li>点击“ <strong>高级</strong> ”打开高级设置</li>
<li>向下滚动，直到看到“ <strong>系统</strong> ”选项</li>
<li>点击<code>打开您计算机的代理设置</code></li>
</ol>
<ul>
<li>在 Firefox 中：
<ol>
<li>打开<code>Options</code>菜单，或在地址栏中输入<code>about:preferences</code></li>
<li>向下滚动到底部</li>
<li>点击<code>Settings...</code>标题下的 <code>Network Settings</code>按钮</li>
</ol>
</li>
<li>在 Internet Explorer 中：
<ol>
<li>转到<strong>设置</strong>。</li>
<li>点击 <code>Connections</code>标签。</li>
<li>点击 <code>LAN settings</code>按钮。</li>
<li>勾选 <code>Use a proxy server for your LAN</code></li>
</ol>
</li>
</ul>
<p><strong>IP 地址</strong>填入树莓派的 IP，<strong>端口</strong>默认情况下应设置为<code>8118</code>（Privoxy 监听的端口）</p>
<p>也可以用 Switchyomega 这个插件处理转发规则，使用 <code>http://树莓派IP:8118</code> 即可。</p>
<h5 id="设置系统网络代理服务器">设置系统网络代理服务器</h5>
<p>一般在电脑、手机等设备的网络连接设置的高级选项里，都有设置代理服务器的地方，服务器填入树莓派 IP，端口填入 8118，认证选择无，保存即可生效，开始感受宛如置身海外的上网冲浪体验吧。</p>
<h2 id="验证树莓派代理服务器">验证树莓派代理服务器</h2>
<p>将代理设置配置为指向树莓派后，在浏览器中打开下面的地址</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">http://config.privoxy.org/
</span></span></code></pre></div><p>如果一切运行正常，可以看到 Privoxy 的欢迎界面：</p>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/markdown/202408082146488.webp" alt="image-20200414115516257"  />
</p>
<p>如果显示的是 <strong>Privoxy is not being used</strong> ，就要检查一下检查代理设置是否正确了。</p>
<h2 id="enjoy-it">Enjoy it</h2>
<p>到这里，你已经完成了树莓派魔法的安装与配置，你可以开始使用你的树莓派访问真正的互联网，并为局域网内的其他设备提供魔法代理服务。</p>
<p>希望你喜欢这篇文章，如果对你有帮助的话，别忘了点赞、收藏、分享和点击订阅，并留意更新动态。</p>
<p>Stay creative, and I will see you next time!</p>
<hr>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/markdown/by-nc-sa.webp" alt="知识共享许可协议"  />
</p>
<p>本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名 - 非商业性使用 - 相同方式共享 4.0 国际许可协议</a>进行许可。</p>
<p>参考文献：</p>
<p>[Ask Ubuntu]: <a href="https://askubuntu.com/questions/349702/apt-conf-acquirehttpproxy-proxyserverport-seems-not-to-be-used-ubuntu-13">https://askubuntu.com/questions/349702/apt-conf-acquirehttpproxy-proxyserverport-seems-not-to-be-used-ubuntu-13</a> &ldquo;apt.conf “Acquire::http:Proxy ”proxyserver:port&rdquo; seems not to be used (Ubuntu 13.04 under Virtual Box on Win7)&quot;</p>
]]></content:encoded></item><item><title>树莓派的安装与初始化</title><link>https://weixiang.github.io/posts/installation-and-initialization-of-raspberry-pi/</link><pubDate>Thu, 02 Apr 2020 05:22:00 +0800</pubDate><guid>https://weixiang.github.io/posts/installation-and-initialization-of-raspberry-pi/</guid><description>Raspbian 是树莓派的开发与维护机构 The Raspbeery Pi Foundation“树莓派基金会”，推荐用于树莓派的首选系统。本文展示的是在没有外接显示屏的情况下的树莓派的初始化安装，以及如何连接到树莓派。</description><content:encoded><![CDATA[<p>树莓派（英语：Raspberry Pi）是基于 Linux 的 单片机电脑，由英国树莓派基金会开发，目的是以低价硬件及自由软件促进学校的基本计算机科学教育。</p>
<p>Raspbian 是专门用于 ARM 卡片式计算机 Raspberry Pi® “树莓派”的操作系统。</p>
<p>Raspberry Pi® “树莓派”是 2012 年问世的 ARM 计算机，旨在为儿童和所有的计算机爱好者提供一套廉价的编程学习与硬件 DIY 平台。树莓派基于 ARM11，具有 1080P 高清视频解析能力，附带用于硬件开发的 GPIO 接口，使用 Linux 操作系统。售价仅 $25~$35。</p>
<p>Raspbian 系统是 Debian 7.0/wheezy 的定制版本。得益于 Debian 从 7.0/wheezy 开始引入的“带硬件浮点加速的 ARM 架构”(armhf)，Debian 7.0 在树莓派上的运行性能有了很大提升。Raspbian 默认使用 LXDE 桌面，内置 C 和 Python 编译器。</p>
<p>Raspbian 是树莓派的开发与维护机构 The Raspbeery Pi Foundation“树莓派基金会”，推荐用于树莓派的首选系统。</p>
<p>本文展示的是在没有外接显示屏的情况下的树莓派的初始化安装，以及如何连接到树莓派。</p>
<h2 id="需要准备的材料">需要准备的材料</h2>
<ul>
<li>树莓派（以 3B+ 为例）</li>
<li>USB 电源适配器（5V，不小于 2A）</li>
<li>USB 电缆</li>
<li>8G 以上的高速 TF 卡</li>
<li>USB 3.0 高速读卡器</li>
<li>电脑（以 Windows 为例）</li>
<li>网线</li>
<li>互联网连接（推荐使用 真 · 互联网）</li>
</ul>
<h2 id="安装-raspbain-系统到-sd-卡">安装 Raspbain 系统到 SD 卡</h2>
<p>对于新手用户，树莓派官方建议使用 <a href="https://www.raspberrypi.org/documentation/installation/installing-images/README.md">Raspberry Pi Imager</a>，将系统镜像写入 SD 卡。也可以使用 balenaEtcher，Win32DiskImager 或 imgFlasher 等工具进行烧录，接有屏幕、键鼠的同学也可以使用 <a href="https://www.raspberrypi.org/downloads/noobs/">NOOBS</a> 来部署系统。</p>
<p>下面以 <a href="https://www.raspberrypi.org/downloads/">Raspberry Pi Imager</a> 为例</p>
<h3 id="下载安装--raspberry-pi-imagerhttpswwwraspberrypiorgdownloads">下载安装  <a href="https://www.raspberrypi.org/downloads/">Raspberry Pi Imager</a></h3>
<p>Raspberry Pi Imager 下载地址：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">www</span><span class="o">.</span><span class="n">raspberrypi</span><span class="o">.</span><span class="n">org</span><span class="o">/</span><span class="n">downloads</span><span class="o">/</span>
</span></span></code></pre></div><p>因为众所周知的原因，可能需要一些魔法才能下载成功。</p>
<p>安装后打开的软件界面是这样的，是不是超级简单：</p>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/markdown/image-20200409180805444.webp" alt="Raspberry Pi Imager"  />
</p>
<h3 id="格式化-sd-卡">格式化 SD 卡</h3>
<p>首先要格式化 SD 卡，在第一项 Choose OS 里选择 Erase，然后选好要格式化的 SD 卡，最后点 Write 即可。</p>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/markdown/image-20200409181731951.webp" alt="image-20200409181322292"  />
</p>
<h3 id="烧录镜像">烧录镜像</h3>
<p>在 Choose OS 里选择第一项 Raspbain 即可，软件会自动下载并烧录进去，如果要使用本地的镜像文件，要注意文件路径中不要有中文。</p>
<p>因为众所周知的原因，可能需要一些魔法才能下载成功。</p>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/markdown/image-20200409181322292.webp" alt="image-20200409181731951"  />
</p>
<p>等进度条跑满，系统镜像就烧写完成啦。</p>
<h2 id="开启-ssh-功能">开启 SSH 功能</h2>
<p>在树莓派将来的使用中，我们要用 SSH 的方式连接树莓派并对其进行操作，但为了安全起见，这个功能默认是关闭的，所以我们需要在 SD 卡的根目录创建一个叫“SSH”的文件，才能开启树莓派的 SSH 功能。</p>
<p>在“此电脑”中找到一个叫“boot”的盘，新建一个 TXT，命名为 <code>SSH</code> 即可，注意不要有后缀！
如果找不到“boot”这个盘，重新拔插一下读卡器即可。</p>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/markdown/image-20200409194420317.webp" alt="image-20200409183711203"  />
</p>
<h2 id="启动树莓派并找到它">启动树莓派并找到它</h2>
<h3 id="启动树莓派">启动树莓派</h3>
<p>插入烧写好系统的 SD 卡，用网线把树莓派和路由器连接起来，如果有键鼠显示器也要先连接上，最后插上电源，等待树莓派启动即可。</p>
<h3 id="查找树莓派的地址">查找树莓派的地址</h3>
<p>使用浏览器登录路由器的管理页面，一般为 <code>192.168.1.1</code>，输入管理密码（路由器背面可以找到），进入“终端管理”界面，查看树莓派的 IP 地址。最好给树莓派设置一个固定 IP 地址方便后续使用。此步骤不同品牌的路由器操作方法略有不同，不过都大同小异。</p>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/markdown/image-20200409183711203.webp" alt="image-20200409194420317"  />
</p>
<h2 id="使用-ssh-连接到树莓派">使用 SSH 连接到树莓派</h2>
<p>以 Xshell 为例</p>
<p>Xshell 下载地址：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">https://www.netsarang.com/zh/xshell/
</span></span></code></pre></div><p>打开 Xshell，在左上角点击新建图标，填入名称，树莓派的 IP 地址，点击连接即可。</p>
<p>树莓派默认的账户是 <code>pi</code> ，默认密码是 <code>raspberry</code> 。</p>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/markdown/image-20200409195033479.webp" alt="image-20200409195033479"  />
</p>
<p>如下图时即连接成功：</p>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/markdown/image-20200409195326223.webp" alt="image-20200409195326223"  />
</p>
<h2 id="给树莓派换上国内源">给树莓派换上国内源</h2>
<p>因为众所周知的原因，树莓派的默认源速度感人，换上国内的源可以显著提高使用体验。</p>
<p>以清华大学源为例</p>
<p>编辑 <code>/etc/apt/sources.list</code> 文件，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo nano /etc/apt/sources.list
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 删除原文件所有内容，用以下内容取代：</span>
</span></span><span class="line"><span class="cl">deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contrib
</span></span><span class="line"><span class="cl">deb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contrib
</span></span></code></pre></div><p>编辑 <code>/etc/apt/sources.list.d/raspi.list</code> 文件，删除原文件所有内容，用以下内容取代：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo nano /etc/apt/sources.list.d/raspi.list
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 删除原文件所有内容，用以下内容取代：</span>
</span></span><span class="line"><span class="cl">deb http://mirrors.tuna.tsinghua.edu.cn/raspberrypi/ buster main ui
</span></span></code></pre></div><p>编辑完毕后用 <code>Ctrl + X</code> 退出，按下 <code>Y</code> 然后回车键确认保存即可。</p>
<p>编辑镜像站后，请使用 <code>sudo apt-get update</code> 命令，更新软件源列表，同时检查您的编辑是否正确。</p>
<h2 id="使用-vnc-连接到树莓派">使用 VNC 连接到树莓派</h2>
<p>虽然 SSH 已经可以满足大部分的操作需求，但图形界面对于新手来说显然更容易上手。</p>
<h3 id="启用-vnc-功能">启用 VNC 功能</h3>
<p>在 SSH 终端中输入</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo raspi-config
</span></span></code></pre></div><p>即可进入下面的配置模式，罗列了扩展系统分区，修改密码，启动设置等等，然后按着图片找到 VNC 选项打开即可。</p>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/markdown/image-20200409200759386.webp" alt="image-20200409200744520"  />
</p>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/markdown/image-20200409200744520.webp" alt="image-20200409200759386"  />
</p>
<h3 id="连接到树莓派">连接到树莓派</h3>
<p>下载 VNC 客户端</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">www</span><span class="o">.</span><span class="n">realvnc</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">en</span><span class="o">/</span><span class="n">connect</span><span class="o">/</span><span class="n">download</span><span class="o">/</span><span class="n">viewer</span><span class="o">/</span>
</span></span></code></pre></div><p>打开 VNC 软件，输入树莓派的 IP 地址、账户名密码（上一节有），即可连接。</p>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/markdown/image-20200409201641067.webp" alt="image-20200409201641067"  />
</p>
<h3 id="完成剩余的设置">完成剩余的设置</h3>
<p>连接成功后即可看到树莓派的桌面和欢迎界面。</p>
<p>在欢迎界面中完成剩余的设置，修改地区、语言、时区、密码等，连接上 WiFi。</p>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/markdown/image-20200409201733135.webp" alt="image-20200409201733135"  />
</p>
<h2 id="enjoy-it">Enjoy it</h2>
<p>到这里，你已经完成了树莓派的安装与初始化设置，你可以开始使用你的树莓派，做出令人惊叹的作品了！</p>
<p>希望你喜欢这篇文章，如果对你有帮助的话，别忘了点赞、收藏、分享和点击订阅，并留意更新动态。</p>
<p>Stay creative, and I will see you next time!</p>
<hr>
<p><img loading="lazy" src="https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/markdown/by-nc-sa.webp" alt="知识共享许可协议"  />
</p>
<p>本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名 - 非商业性使用 - 相同方式共享 4.0 国际许可协议</a>进行许可。</p>
<p>参考文献：</p>
]]></content:encoded></item></channel></rss>