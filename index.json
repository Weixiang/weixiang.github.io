[{"content":"前言 为什么从 Ghost 换到 Hugo？\nGhost 随着更新功能越来越丰富，更偏向于专业的商用CMS系统，对服务器性能要求越来越高了。\n买不起服务器了，就换回静态博客了。\n本文记录一下Ghost多年的使用体验和一些小技巧。\n永远喜欢 Casper 主题。\nCode injection Site header \u0026lt;!-- 自动黑化 --\u0026gt; \u0026lt;script\u0026gt; if ( window.matchMedia \u0026amp;\u0026amp; window.matchMedia(\u0026#34;(prefers-color-scheme: dark)\u0026#34;).matches ) { document.documentElement.classList.add(\u0026#34;dark-mode\u0026#34;); } \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; @media (prefers-color-scheme: dark) { ::selection { background: #424242; } ::-moz-selection { background: #424242; } ::-webkit-selection { background: #424242; } } \u0026lt;/style\u0026gt; \u0026lt;!-- 黑色图底 --\u0026gt; \u0026lt;style\u0026gt; .has-cover .site-header-content { background-color: #000000; } \u0026lt;/style\u0026gt; \u0026lt;!-- 替换图片 --\u0026gt; \u0026lt;script\u0026gt; document.addEventListener(\u0026#39;DOMContentLoaded\u0026#39;, function() { var image = document.querySelector(\u0026#39;.site-header-cover\u0026#39;); if (image) { var newSrcset = \u0026#39;https://api.dujin.org/bing/1366.php 300w, https://api.dujin.org/bing/1366.php 600w, https://api.dujin.org/bing/1920.php 1000w, https://api.dujin.org/bing/1920.php 2000w\u0026#39;; var newSrc = \u0026#39;https://api.dujin.org/bing/1920.php\u0026#39;; image.srcset = newSrcset; image.src = newSrc; image.alt = \u0026#34;Jacob\u0026#39;s Thoughts\u0026#34;; } }); \u0026lt;/script\u0026gt; \u0026lt;!-- 全局字体 --\u0026gt; \u0026lt;style\u0026gt; /*@import url(\u0026#39;https://fonts.googleapis.com/css?family=Source+Code+Pro\u0026amp;display=swap\u0026#39;); @import url(\u0026#39;https://fonts.googleapis.com/css2?family=Noto+Serif+SC\u0026amp;display=swap\u0026#39;);*/ /* 引入 Google Fonts */ @font-face { font-family: \u0026#34;ChineseFont\u0026#34;; src: local(\u0026#34;PingFang SC\u0026#34;), local(\u0026#34;Microsoft YaHei\u0026#34;), local(\u0026#34;Noto Sans CJK SC\u0026#34;); unicode-range: U+2E80-A4CF, U+F900-FAFF, U+FE30-FE4F; } :root { --font-sans-serif: -apple-system, BlinkMacSystemFont, \u0026#34;Apple Color Emoji\u0026#34;, \u0026#34;Segoe UI Emoji\u0026#34;, \u0026#34;Segoe UI Symbol\u0026#34;, \u0026#34;Segoe UI\u0026#34;, \u0026#34;PingFang SC\u0026#34;, \u0026#34;HarmonyOS_Regular\u0026#34;, \u0026#34;Hiragino Sans GB\u0026#34;, \u0026#34;Microsoft YaHei\u0026#34;, \u0026#34;Helvetica Neue\u0026#34;, Helvetica, \u0026#34;Source Han Sans SC\u0026#34;, \u0026#34;Noto Sans CJK SC\u0026#34;, \u0026#34;WenQuanYi Micro Hei\u0026#34;, Arial, sans-serif; --font-serif: STZhongsong, STSong, \u0026#39;Noto Serif SC\u0026#39;, \u0026#34;Noto Serif CJK\u0026#34;, PMingLiu, SimSun, \u0026#34;WenQuanYi Bitmap Song\u0026#34;, \u0026#34;Times New Roman\u0026#34;, Times, serif; --font-mono: ChineseFont, ui-monospace, SFMono-Regular, \u0026#34;SF Mono\u0026#34;, \u0026#34;Cascadia Code\u0026#34;, \u0026#34;Segoe UI Mono\u0026#34;, \u0026#34;Source Code Pro\u0026#34;, Menlo, Consolas, \u0026#34;Liberation Mono\u0026#34;, monospace; } /* 覆写默认字体变量 */ body { font-family: font-family: var(--font-sans-serif); font-size: 16px; } /* 网页正文字体 */ .post-card-title, .article-title { font-family: var(--font-serif); } /* 文章卡片标题字体 */ .post-card-excerpt p, .gh-content\u0026gt;blockquote, .gh-content\u0026gt;ol, .gh-content\u0026gt;ul, .gh-content\u0026gt;dl, .gh-content\u0026gt;p { font-family: var(--font-sans-serif); font-size: 1.6rem; line-height: 1.8em; } /* 文章正文字体 */ .gh-content :not(pre)\u0026gt;code { display: inline-block; font-family: var(--font-mono); background-color: #F5F5F5; border-radius: 4px; border: 1px solid #F0F0F0; padding: 0 6px; margin: 1px 6px; line-height: 1.1; color: #096DD9; } /* 段落内代码样式 */ code, kbd, pre, samp { font-family: var(--font-mono); } /* 统一代码字体 */ h1, h2, h3, h4, h5, h6 { font-family: var(--font-serif); } /* 标题字体 */ .site-title { font-family: var(--font-sans-serif); text-shadow: 1px 0 10px black; } /* 首页标题字体 */ .author-profile h1, .article-byline-meta h4 { font-family: var(--font-sans-serif); } /* 作者名片字体 */ blockquote p { font-size: 1em; } /* 引用字体大小 */ .gh-content a { text-decoration: none; border-bottom: 1px solid var(--ghost-accent-color); -webkit-transition: all .2s; transition: all .2s; } .gh-content a:focus, .gh-content a:hover { border-bottom: 2px solid var(--ghost-accent-color); } .post-card-image { border-radius: 12px; } /* 圆角图片 */ \u0026lt;/style\u0026gt; \u0026lt;!-- 全局滚动条 --\u0026gt; \u0026lt;style\u0026gt; ::-webkit-scrollbar { width: 6px; height: 6px; background-color: #424242; } ::-webkit-scrollbar-track { -webkit-box-shadow: 0 0 3px rgba(0, 0, 0, 0.3) inset; background-color: #424242; } ::-webkit-scrollbar-thumb { border-radius: 3px; -webkit-box-shadow: none !important; } ::-webkit-scrollbar-thumb { background-color: #686868 !important; background-image: none !important; } ::-webkit-scrollbar-thumb:hover { background-color: var(--ghost-accent-color) !important; } \u0026lt;/style\u0026gt; \u0026lt;!-- 代码高亮 prism.js --\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/themes/prism-tomorrow.min.css\u0026#34; integrity=\u0026#34;sha512-vswe+cgvic/XBoF1OcM/TeJ2FW0OofqAVdCZiEYkd6dwGXthvkSFWOoGGJgS2CW70VK5dQM5Oh+7ne47s74VTg==\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; referrerpolicy=\u0026#34;no-referrer\u0026#34; /\u0026gt; \u0026lt;!-- \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/prism/1.26.0/themes/prism.min.css\u0026#34; integrity=\u0026#34;sha512-tN7Ec6zAFaVSG3TpNAKtk4DOHNpSwKHxxrsiw4GHKESGPs5njn/0sMCUMl2svV4wo4BK/rCP7juYz+zx+l6oeQ==\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; referrerpolicy=\u0026#34;no-referrer\u0026#34; /\u0026gt; --\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/plugins/toolbar/prism-toolbar.min.css\u0026#34; integrity=\u0026#34;sha512-Dqf5696xtofgH089BgZJo2lSWTvev4GFo+gA2o4GullFY65rzQVQLQVlzLvYwTo0Bb2Gpb6IqwxYWtoMonfdhQ==\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; referrerpolicy=\u0026#34;no-referrer\u0026#34; /\u0026gt; \u0026lt;style\u0026gt; code[class*=\u0026#39;language-\u0026#39;] { font-family: var(--font-mono); } pre[class*=language-] { font-family: var(--font-mono); color: #fff; font-size: 1.3rem; line-height: 1.8em; max-width: 100%; overflow: auto; padding: 2.4rem 3.2rem; width: 100%; } html.dark-mode .gh-content code { color: #fff; background: #030303; } \u0026lt;/style\u0026gt; \u0026lt;!-- Global site tag (gtag.js) - Google Analytics 谷歌统计--\u0026gt; \u0026lt;script async src=\u0026#34;https://www.googletagmanager.com/gtag/js?id=UA-133816799-2\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; window.dataLayer = window.dataLayer || []; function gtag() { dataLayer.push(arguments); } gtag(\u0026#34;js\u0026#34;, new Date()); gtag(\u0026#34;config\u0026#34;, \u0026#34;UA-133816799-2\u0026#34;); \u0026lt;/script\u0026gt; \u0026lt;!-- Baidu Tongji 百度统计--\u0026gt; \u0026lt;script\u0026gt; var _hmt = _hmt || []; (function () { var hm = document.createElement(\u0026#34;script\u0026#34;); hm.src = \u0026#34;https://hm.baidu.com/hm.js?cb3832ee43b34e6bfd3556bd054c7d26\u0026#34;; var s = document.getElementsByTagName(\u0026#34;script\u0026#34;)[0]; s.parentNode.insertBefore(hm, s); })(); \u0026lt;/script\u0026gt; \u0026lt;meta name=\u0026#34;baidu-site-verification\u0026#34; content=\u0026#34;code-SpwhprNdN8\u0026#34; /\u0026gt; \u0026lt;!-- busuanzi 统计--\u0026gt; \u0026lt;script async src=\u0026#34;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;!-- DisqusJS --\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/npm/disqusjs@3.0/dist/browser/styles/disqusjs.css\u0026#34;\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/disqusjs@3.0/dist/browser/disqusjs.es2015.umd.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;!-- 图标库 --\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/brands.min.css\u0026#34; integrity=\u0026#34;sha512-+oRH6u1nDGSm3hH8poU85YFIVTdSnS2f+texdPGrURaJh8hzmhMiZrQth6l56P4ZQmxeZzd2DqVEMqQoJ8J89A==\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; referrerpolicy=\u0026#34;no-referrer\u0026#34; /\u0026gt; \u0026lt;style\u0026gt; .gh-head-menu .nav-github a { font-size: 0 !important; } .gh-head-menu .nav-github a::before { font-family: \u0026#34;Font Awesome 6 Brands\u0026#34;; display: inline-block; font-size: 20px; font-style: normal; font-weight: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; } .gh-head-menu .nav-github a::before {content: \u0026#34;\\f09b\u0026#34;} \u0026lt;/style\u0026gt; \u0026lt;!-- 阅读进度条 --\u0026gt; \u0026lt;style\u0026gt; .reading-progress { position: fixed; top: 0; z-index: 999; width: 100%; height: 5px; /* Progress bar height */ background: #c5d2d9; /* Progress bar background color */ -webkit-appearance: none; -moz-appearance: none; appearance: none; /* Hide default progress bar */ } .reading-progress::-webkit-progress-bar { background-color: transparent; } .reading-progress::-webkit-progress-value { background: var(--ghost-accent-color); /* Progress bar color */ } \u0026lt;/style\u0026gt; Site footer \u0026lt;!-- 代码高亮 prism.js --\u0026gt; \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/prism.min.js\u0026#34; integrity=\u0026#34;sha512-RDQSW3KoqJMiX0L/UBgwBmH1EmRYp8LBOiLaA8rBHIy+7OGP/7Gxg8vbt8wG4ZYd29P0Fnoq6+LOytCqx3cyoQ==\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; referrerpolicy=\u0026#34;no-referrer\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/plugins/toolbar/prism-toolbar.min.js\u0026#34; integrity=\u0026#34;sha512-st608h+ZqzliahyzEpETxzU0f7z7a9acN6AFvYmHvpFhmcFuKT8a22TT5TpKpjDa3pt3Wv7Z3SdQBCBdDPhyWA==\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; referrerpolicy=\u0026#34;no-referrer\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/plugins/copy-to-clipboard/prism-copy-to-clipboard.min.js\u0026#34; integrity=\u0026#34;sha512-/kVH1uXuObC0iYgxxCKY41JdWOkKOxorFVmip+YVifKsJ4Au/87EisD1wty7vxN2kAhnWh6Yc8o/dSAXj6Oz7A==\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; referrerpolicy=\u0026#34;no-referrer\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/components/prism-bash.min.js\u0026#34; integrity=\u0026#34;sha512-ZqfG//sXQwAA7DOArFJyMmZQ3knKe+0ft3tPQZPvDPJR04IatmhVO5pTazVV+fLVDYSy28PhoBeUj5wxGRiGAA==\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; referrerpolicy=\u0026#34;no-referrer\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/components/prism-json.min.js\u0026#34; integrity=\u0026#34;sha512-QXFMVAusM85vUYDaNgcYeU3rzSlc+bTV4JvkfJhjxSHlQEo+ig53BtnGkvFTiNJh8D+wv6uWAQ2vJaVmxe8d3w==\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; referrerpolicy=\u0026#34;no-referrer\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;!-- AddThis 分享组件 --\u0026gt; \u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-61109cb1d502ff5d\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;!-- Cookie Consent 提示框 --\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/npm/cookieconsent@3/build/cookieconsent.min.css\u0026#34; /\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/cookieconsent@3/build/cookieconsent.min.js\u0026#34; data-cfasync=\u0026#34;false\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; window.cookieconsent.initialise({ palette: { popup: { background: \u0026#34;#252e39\u0026#34;, }, button: { background: \u0026#34;#005ba4\u0026#34;, }, }, theme: \u0026#34;edgeless\u0026#34;, position: \u0026#34;bottom-right\u0026#34;, }); \u0026lt;/script\u0026gt; \u0026lt;!-- 标题特效 --\u0026gt; \u0026lt;script src=\u0026#34;https://unpkg.com/typewriter-effect@latest/dist/core.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; const app = document.querySelector(\u0026#39;.site-title + p\u0026#39;); const typewriter = new Typewriter(app, { loop: true, delay: 75, }); typewriter .typeString(\u0026#39;Writing my \u0026lt;strong\u0026gt;thoughts\u0026lt;/strong\u0026gt;\u0026#39;) .pauseFor(1000) .deleteChars(8) .typeString(\u0026#39;\u0026lt;strong\u0026gt;stories\u0026lt;/strong\u0026gt;\u0026#39;) .pauseFor(750) .deleteChars(7) .typeString(\u0026#39;\u0026lt;strong\u0026gt;ideas\u0026lt;/strong\u0026gt;\u0026#39;) .pauseFor(500) .deleteChars(5) .typeString(\u0026#39;\u0026lt;strong\u0026gt;life\u0026lt;/strong\u0026gt;\u0026#39;) .pauseFor(500) .deleteChars(4) .typeString(\u0026#39;\u0026lt;strong\u0026gt;cats\u0026lt;/strong\u0026gt; on the web\u0026#39;) .pauseFor(1500) .deleteAll(50) .start(); \u0026lt;/script\u0026gt; \u0026lt;!-- 版权特效 --\u0026gt; \u0026lt;script\u0026gt; document.addEventListener(\u0026#39;DOMContentLoaded\u0026#39;, function() { var poweredByLink = document.querySelector(\u0026#39;.gh-powered-by a\u0026#39;); poweredByLink.textContent = \u0026#39;自豪地使用 Ghost\u0026#39;; }); \u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; document.addEventListener(\u0026#39;DOMContentLoaded\u0026#39;, function() { var copyrightSection = document.querySelector(\u0026#39;.copyright\u0026#39;); if (copyrightSection) { var link = copyrightSection.querySelector(\u0026#39;a\u0026#39;); if (link) { var text = link.textContent; var updatedText = text.replace(\u0026#39;© \u0026#39;, \u0026#39;© 2016-\u0026#39;); link.textContent = updatedText; } } }); \u0026lt;/script\u0026gt; ","permalink":"https://weixiang.github.io/posts/ghost-blog-user-experience/","summary":"使用了多年的Ghost博客，先换到Hugo，记下Ghost博客使用记录。","title":"Ghost博客使用记录"},{"content":"话题 话题页-传送门🚪→\n分类 分类页-传送门🚪→\n系列 系列页-传送门🚪→\n","permalink":"https://weixiang.github.io/view/","summary":"话题 话题页-传送门🚪→ 分类 分类页-传送门🚪→ 系列 系列页-传送门🚪→","title":"View"},{"content":"你好！👋 我是 Jacob，这里是我的个人博客。\n正如博客的名字，我在这里记录我的想法、知识，分享我的发现。\n纯文大学生，但热爱的是硬件与编程。\n玩 Arduino ，喜欢交互艺术，也搞点 IoT 。\n喜欢猫猫🐱当然狗狗🐶也可以。\n酷基，哈学博士🪄，低浓度二次元，听国际流行🎧。\n偶尔玩点游戏的 PlayStation 玩家🎮。\n交个朋友 友情链接：传送门→\nEmail (Base 64): amFjb2IucnVhbkBvdXRsb29rLmNvbQ==\nWeChat (Base 64): aHR0cHM6Ly91LndlY2hhdC5jb20vTUFHQzNfdWQzN0J2bVdWX0lDT3hqeEE=\nGitHub: https://github.com/Weixiang\n关于本博客 本站采用 Hugo 驱动，主题为 PaperMod。\n博客更新记录：传送门→\n版权声明 本站文章除特别声明外，均由 Jacob Ruan 采用 知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议 进行许可。\nEnglish Version. (By Google Translate)\nHello.👋 My name is Jacob Ruan.\nThis is my personal blog. Just like the name of the blog, I am here to record my thoughts and share my knowledge.\nI am a social science college student, My major in the college is marketing, but I don’t like it. I like art and programming, and my dream is to be a designer or engineer. For this dream, I am studying computer courses by myself. Wish me luck. 😀\nAlthough I majored in social sciences at school, I also have a strong interest in natural sciences and computer science.\nThank you for your attention, but because of my heavy academic work, I may not update my blog very often. 😜\nYears ago, I founded a STEM association in my senior middle school, called WAI STEM Club , it won some awards for my school.\nOutside of my studies, I also enjoy programming, Arduino, international pop music and secondary culture. I\u0026rsquo;m also a fan of Harry Potter.\nCopyright Unless otherwise stated, the post of this website adopts the CC License.\nThis work by Jacob Ruan is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.\nContact me If you are interested in making new friends, You can find me in the following ways:\nEmail (Base 64): amFjb2IucnVhbkBvdXRsb29rLmNvbQ==\nWeChat (Base 64): aHR0cHM6Ly91LndlY2hhdC5jb20vTUFHQzNfdWQzN0J2bVdWX0lDT3hqeEE=\nGitHub: https://github.com/Weixiang\n","permalink":"https://weixiang.github.io/about/","summary":"你好！👋 我是 Jacob，这里是我的个人博客。 正如博客的名字，我在这里记录我的想法、知识，分享我的发现。 纯文大学生，但热爱的是硬件与编程。 玩 Arduino","title":"关于"},{"content":"消费电子 Apple 官网 \u0026#34;SF Pro SC\u0026#34;, \u0026#34;SF Pro Text\u0026#34;, \u0026#34;SF Pro Icons\u0026#34;, \u0026#34;PingFang SC\u0026#34;, \u0026#34;Helvetica Neue\u0026#34;, Helvetica, Arial, sans-serif 小米 官网 \u0026#34;MiSans VF\u0026#34;, MiSans, system-ui, sans-serif 商城 \u0026#34;Helvetica Neue\u0026#34;, Helvetica, Arial, \u0026#34;Microsoft Yahei\u0026#34;, \u0026#34;Hiragino Sans GB\u0026#34;, \u0026#34;Heiti SC\u0026#34;, \u0026#34;WenQuanYi Micro Hei\u0026#34;, sans-serif 华为 消费者官网 Manrope, Arial, \u0026#34;Helvetica Neue\u0026#34;, Helvetica, sans-serif 商城 \u0026#34;Helvetica Neue\u0026#34;, Helvetica, Arial, \u0026#34;Microsoft Yahei\u0026#34;, \u0026#34;Hiragino Sans GB\u0026#34;, \u0026#34;Heiti SC\u0026#34;, \u0026#34;WenQuanYi Micro Hei\u0026#34;, sans-serif 鸿蒙 HarmonyOSHans-Regular, HarmonyOSHans-fallback, PingFangSC-Regular, \u0026#34;Microsoft YaHei\u0026#34;, Arial, Helvetica, sans-serif 荣耀 官网 \u0026#34;HONOR Sans Brand\u0026#34;, \u0026#34;Microsoft Yahei\u0026#34;, \u0026#34;PingFang SC\u0026#34;, Arial, \u0026#34;Helvetica Neue\u0026#34;, Helvetica, sans-serif OPPO 官网 OPPOSans-Ver2-Regular, Helvetica, Arial, sans-serif, system-ui vivo 官网 VIVO-FONT-WEB, VIVO-FONT-NAV, sans-serif 商城 方正悠黑简体_纤, \u0026#34;Microsoft YaHei\u0026#34;, Arial OriginOS vivoSansSC500, VIVO-FONT-WEB, VIVO-FONT-NAV, sans-serif 三星 SamsungOne, \u0026#34;Microsoft Yahei\u0026#34;, 微软雅黑, Simsun, 宋体, arial, sans-serif 蔚来 BlueSkyStandard, \u0026#34;Helvetica Neue\u0026#34;, Helvetica, Arial, \u0026#34;PingFang SC\u0026#34;, \u0026#34;Hiragino Sans GB\u0026#34;, \u0026#34;Heiti SC\u0026#34;, \u0026#34;Microsoft YaHei\u0026#34;, \u0026#34;WenQuanYi Micro Hei\u0026#34;, sans-serif 中兴 努比亚 Gotham, hyykh, Helvetica, Arial, sans-serif 魅族 Helvetica, Tahoma, Arial, \u0026#34;Hiragino Sans GB\u0026#34;, \u0026#34;Microsoft YaHei\u0026#34;, SimSun, Heiti, sans-serif 锤子 \u0026#34;Helvetica Neue\u0026#34;, \u0026#34;PingFang SC\u0026#34;, \u0026#34;Hiragino Sans GB\u0026#34;, \u0026#34;Heiti SC\u0026#34;, \u0026#34;Microsoft YaHei\u0026#34;, \u0026#34;WenQuanYi Micro Hei\u0026#34;, sans-serif 互联网 腾讯 官网 PingFangSC-Regular, \u0026#34;helvetica neue\u0026#34;, tahoma, \u0026#34;PingFang SC\u0026#34;, \u0026#34;microsoft yahei\u0026#34;, arial, \u0026#34;hiragino sans gb\u0026#34;, sans-serif 微信 -apple-system-font, BlinkMacSystemFont, \u0026#34;Helvetica Neue\u0026#34;, \u0026#34;PingFang SC\u0026#34;, \u0026#34;Hiragino Sans GB\u0026#34;, \u0026#34;Microsoft YaHei UI\u0026#34;, \u0026#34;Microsoft YaHei\u0026#34;, Arial, sans-serif 知乎 -apple-system, BlinkMacSystemFont, \u0026#34;Helvetica Neue\u0026#34;, \u0026#34;PingFang SC\u0026#34;, \u0026#34;Microsoft YaHei\u0026#34;, \u0026#34;Source Han Sans SC\u0026#34;, \u0026#34;Noto Sans CJK SC\u0026#34;, \u0026#34;WenQuanYi Micro Hei\u0026#34;, sans-serif 网易 Arial, \u0026#34;Hiragino Sans GB\u0026#34;, STHeiti, \u0026#34;Helvetica Neue\u0026#34;, Helvetica, \u0026#34;Microsoft Yahei\u0026#34;, \u0026#34;WenQuanYi Micro Hei\u0026#34;, sans-serif 字节跳动 官网 \u0026#34;DM Sans\u0026#34;, Gilroy, -apple-system, \u0026#34;Sofia Pro\u0026#34;, \u0026#34;Microsoft YaHei\u0026#34;, Helvetica, Arial, sans-serif 抖音 \u0026#34;PingFang SC\u0026#34;, DFPKingGothicGB-Medium, sans-serif 阿里巴巴 官网 Roboto, \u0026#34;Helvetica Neue\u0026#34;, Helvetica, Tahoma, Arial, \u0026#34;PingFang SC\u0026#34;, \u0026#34;Microsoft YaHei\u0026#34; 新淘宝 system-ui, -apple-system, \u0026#34;Segoe UI\u0026#34;, Roboto, Ubuntu, Cantarell, \u0026#34;Noto Sans\u0026#34;, sans-serif, \u0026#34;Apple Color Emoji\u0026#34;, \u0026#34;Segoe UI Emoji\u0026#34;, \u0026#34;Segoe UI Symbol\u0026#34;, \u0026#34;Noto Color Emoji\u0026#34;, BlinkMacSystemFont, \u0026#34;Helvetica Neue\u0026#34;, Arial, \u0026#34;PingFang SC\u0026#34;, \u0026#34;PingFang TC\u0026#34;, \u0026#34;PingFang HK\u0026#34;, \u0026#34;Microsoft Yahei\u0026#34;, \u0026#34;Microsoft JhengHei\u0026#34; 简书 -apple-system, BlinkMacSystemFont, \u0026#34;Apple Color Emoji\u0026#34;, \u0026#34;Segoe UI Emoji\u0026#34;, \u0026#34;Segoe UI Symbol\u0026#34;, \u0026#34;Segoe UI\u0026#34;, \u0026#34;PingFang SC\u0026#34;, \u0026#34;Hiragino Sans GB\u0026#34;, \u0026#34;Microsoft YaHei\u0026#34;, \u0026#34;Helvetica Neue\u0026#34;, Helvetica, Arial, sans-serif 哔哩哔哩 \u0026#34;PingFang SC\u0026#34;, HarmonyOS_Regular, \u0026#34;Helvetica Neue\u0026#34;, \u0026#34;Microsoft YaHei\u0026#34;, sans-serif GitHub 正文 -apple-system, BlinkMacSystemFont, \u0026#34;Segoe UI\u0026#34;, \u0026#34;Noto Sans\u0026#34;, Helvetica, Arial, sans-serif, \u0026#34;Apple Color Emoji\u0026#34;, \u0026#34;Segoe UI Emoji\u0026#34; 代码 ui-monospace, SFMono-Regular, \u0026#34;SF Mono\u0026#34;, Menlo, Consolas, \u0026#34;Liberation Mono\u0026#34;, monospace ","permalink":"https://weixiang.github.io/posts/collection-of-fonts-from-big-companies-official-websites/","summary":"收集了常见消费电子品牌及互联网大厂的字体使用情况。","title":"大厂官网字体收集"},{"content":"这是一篇测试文章，用于测试中文显示。\n豫章故郡 豫章故郡，洪都新府。星分翼轸，地接衡庐。襟三江而带五湖，控蛮荆而引瓯越。物华天宝，龙光射牛斗之墟；人杰地灵，徐孺下陈蕃之榻。雄州雾列，俊采星驰。台隍枕夷夏之交，宾主尽东南之美。都督阎公之雅望，棨戟遥临；宇文新州之懿范，襜帷暂驻。十旬休假，胜友如云；千里逢迎，高朋满座。腾蛟起凤，孟学士之词宗；紫电青霜，王将军之武库。家君作宰，路出名区；童子何知，躬逢胜饯。(豫章故郡 一作：南昌故郡；青霜 一作：清霜)\n时维九月，序属三秋。潦水尽而寒潭清，烟光凝而暮山紫。俨骖騑于上路，访风景于崇阿。临帝子之长洲，得天人之旧馆。层峦耸翠，上出重霄；飞阁流丹，下临无地。鹤汀凫渚，穷岛屿之萦回；桂殿兰宫，即冈峦之体势。（天人 一作：仙人；层峦 一作：层台；即冈 一作：列冈；飞阁流丹 一作：飞阁翔丹）\n披绣闼 披绣闼，俯雕甍，山原旷其盈视，川泽纡其骇瞩。闾阎扑地，钟鸣鼎食之家；舸舰弥津，青雀黄龙之舳。云销雨霁，彩彻区明。落霞与孤鹜齐飞，秋水共长天一色。渔舟唱晚，响穷彭蠡之滨，雁阵惊寒，声断衡阳之浦。(迷津 一作：弥津；云销雨霁，彩彻区明 一作：虹销雨霁，彩彻云衢)\n遥襟甫畅，逸兴遄飞。爽籁发而清风生，纤歌凝而白云遏。睢园绿竹，气凌彭泽之樽；邺水朱华，光照临川之笔。四美具，二难并。穷睇眄于中天，极娱游于暇日。天高地迥，觉宇宙之无穷；兴尽悲来，识盈虚之有数。望长安于日下，目吴会于云间。地势极而南溟深，天柱高而北辰远。关山难越，谁悲失路之人；萍水相逢，尽是他乡之客。怀帝阍而不见，奉宣室以何年？(遥襟甫畅 一作：遥吟俯畅)\n时运不齐 嗟乎！时运不齐，命途多舛。冯唐易老，李广难封。屈贾谊于长沙，非无圣主；窜梁鸿于海曲，岂乏明时？所赖君子见机，达人知命。老当益壮，宁移白首之心？穷且益坚，不坠青云之志。酌贪泉而觉爽，处涸辙以犹欢。北海虽赊，扶摇可接；东隅已逝，桑榆非晚。孟尝高洁，空余报国之情；阮籍猖狂，岂效穷途之哭！(见机 一作：安贫；以犹欢 一作：而相欢)\n勃，三尺微命，一介书生。无路请缨，等终军之弱冠；有怀投笔，慕宗悫之长风。舍簪笏于百龄，奉晨昏于万里。非谢家之宝树，接孟氏之芳邻。他日趋庭，叨陪鲤对；今兹捧袂，喜托龙门。杨意不逢，抚凌云而自惜；钟期既遇，奏流水以何惭？\n胜地不常 呜呼！胜地不常，盛筵难再；兰亭已矣，梓泽丘墟。临别赠言，幸承恩于伟饯；登高作赋，是所望于群公。敢竭鄙怀，恭疏短引；一言均赋，四韵俱成。请洒潘江，各倾陆海云尔。 滕王高阁临江渚，佩玉鸣鸾罢歌舞。 画栋朝飞南浦云，珠帘暮卷西山雨。 闲云潭影日悠悠，物换星移几度秋。 阁中帝子今何在？槛外长江空自流。\n","permalink":"https://weixiang.github.io/posts/preface-to-the-pavilion-of-prince-teng/","summary":"时维九月，序属三秋。潦水尽而寒潭清，烟光凝而暮山紫。俨骖騑于上路，访风景于崇阿。临帝子之长洲，得天人之旧馆。层峦耸翠，上出重霄；飞阁流丹，下临无地。鹤汀凫渚，穷岛屿之萦回；桂殿兰宫，即冈峦之体势。","title":"滕王阁序"},{"content":"前言\n由于群晖Docker套件，其Bridge网桥默认的网段为172段，很容易和现有网段冲突，导致发包错误，需要避开才可正常通信。\nDocker配置文件位置\n先开启DSM的SSH登录，然后通过SSH连接到DSM。\nDSM7.2 前，使用以下命令。\nsudo vim /var/packages/Docker/etc/dockerd.json\nDSM7.2 后 Docker 更名为 Container Manager，并升级了 UI 以便于更新和清理容器。因此路径也需要更改。\nsudo vim /var/packages/ContainerManager/etc/dockerd.json\n清空内容小技巧：\n（vi进入文件后）在命令模式下，先执行gg(跳转光标至文件首行)； 再执行dG，这样就清空了整个文件。 修改配置文件\nDSM7.2 前，使用以下配置。\n{ \u0026ldquo;data-root\u0026rdquo;: \u0026ldquo;/var/packages/Docker/var/docker\u0026rdquo;, \u0026ldquo;log-driver\u0026rdquo;: \u0026ldquo;db\u0026rdquo;, \u0026ldquo;storage-driver\u0026rdquo;: \u0026ldquo;btrfs\u0026rdquo;, \u0026ldquo;registry-mirrors\u0026rdquo;: [ \u0026ldquo;https://docker.mirrors.ustc.edu.cn\u0026rdquo;, \u0026ldquo;https://hub-mirror.c.163.com\u0026rdquo;, \u0026ldquo;https://registry.docker-cn.com\u0026rdquo; ], \u0026ldquo;bip\u0026rdquo;: \u0026ldquo;192.168.10.1/24\u0026rdquo;, \u0026ldquo;default-address-pools\u0026rdquo;: [ { \u0026ldquo;base\u0026rdquo;: \u0026ldquo;192.168.10.0/24\u0026rdquo;, \u0026ldquo;size\u0026rdquo;: 24 } ] }\nDSM7.2 后，使用以下配置。\n{ \u0026ldquo;data-root\u0026rdquo;: \u0026ldquo;/var/packages/ContainerManager/var/docker\u0026rdquo;, \u0026ldquo;log-driver\u0026rdquo;: \u0026ldquo;db\u0026rdquo;, \u0026ldquo;storage-driver\u0026rdquo;: \u0026ldquo;btrfs\u0026rdquo;, \u0026ldquo;registry-mirrors\u0026rdquo;: [ \u0026ldquo;https://docker.mirrors.ustc.edu.cn\u0026rdquo;, \u0026ldquo;https://hub-mirror.c.163.com\u0026rdquo;, \u0026ldquo;https://registry.docker-cn.com\u0026rdquo; ], \u0026ldquo;bip\u0026rdquo;: \u0026ldquo;192.168.10.1/24\u0026rdquo;, \u0026ldquo;default-address-pools\u0026rdquo;: [ { \u0026ldquo;base\u0026rdquo;: \u0026ldquo;192.168.10.0/24\u0026rdquo;, \u0026ldquo;size\u0026rdquo;: 24 } ] }\n提醒：配置不可省略data-root路径，否则配置不生效。\n重启Docker\nsystemctl daemon-reload systemctl restart pkgctl-Docker # DSM7.2前 systemctl restart pkgctl-ContainerManager # DSM7.2后\n附录：常见国内加速镜像源\n\u0026ldquo;registry-mirrors\u0026rdquo;: [ \u0026ldquo;https://docker.mirrors.ustc.edu.cn\u0026rdquo;, \u0026ldquo;https://hub-mirror.c.163.com\u0026rdquo;, \u0026ldquo;https://registry.docker-cn.com\u0026rdquo; ]\n阿里云镜像加速器获取：https://help.aliyun.com/zh/acr/user-guide/accelerate-the-pulls-of-docker-official-images\n参考文献\nhttps://www.ithome.com/0/680/524.htm\nhttps://cr.console.aliyun.com\nhttps://help.aliyun.com/zh/acr/user-guide/accelerate-the-pulls-of-docker-official-images\nhttps://community.synology.com/enu/forum/17/post/107492\nhttps://support.hyperglance.com/knowledge/changing-the-default-docker-subnet\nhttps://www.synoforum.com/threads/docker-restart-on-cli.4678/\nhttps://gist.github.com/styblope/dc55e0ad2a9848f2cc3307d4819d819f\n","permalink":"https://weixiang.github.io/posts/changing-dockers-bridge-segment-in-dsm-and-configuring-the-mirror-source/","summary":"由于群晖Docker套件的Bridge网桥默认的网段很容易和现有网段冲突，需要避开才可正常通信。本文记录了如何更改Container Manager的网段和配置国内加速镜像源。","title":"群晖 DSM Docker 更改 Bridge 网段及配置镜像源"},{"content":"服务端\n下载安装包\n在 https://github.com/fatedier/frp/releases 中下载对应架构的安装包，解压放置到 /usr/local 目录下。\n使用Docker\ndocker run \u0026ndash;restart=always \u0026ndash;network host -d -v /opt/frp:/etc/frp \u0026ndash;name frps snowdreamtech/frps\n编写配置文件\n根据业务需求修改 frps.ini\nvim /usr/local/frp/frps.ini\n[common]\n绑定端口 bind_port = 7000\nbind_udp_port = 7001 管理面板 dashboard_addr = 0.0.0.0 dashboard_port = 7500 dashboard_user = admin dashboard_pwd = passwd\n使用宝塔的自签证书 dashboard_tls_mode = true dashboard_tls_cert_file = /www/server/panel/ssl/certificate.pem dashboard_tls_key_file = /www/server/panel/ssl/privateKey.pem\n日志 log_file = ./frps.log trace, debug, info, warn, error log_level = info log_max_days = 7\nauth token token = yourtoken\n根据配置文件开放对应端口，测试运行\ncd /usr/local/frp ./frps -c ./frps.ini\n使用 systemd 持久化运行\n安装 systemd\nyum yum install systemd\napt apt install systemd\n使用文本编辑器，如 vim 创建并编辑 frps.service 文件\n$ vim /etc/systemd/system/frps.service\n写入内容\n[Unit]\n服务名称，可自定义 Description = frp server After = network.target syslog.target Wants = network.target\n[Service] Type = simple\n启动frps的命令，需修改为您的frps的安装路径 ExecStart = /usr/local/frp/frps -c /usr/local/frp/frps.ini\n[Install] WantedBy = multi-user.target\n使用 systemd 命令，管理 frps。\n启动frp systemctl start frps\n停止frp systemctl stop frps\n重启frp systemctl restart frps\n查看frp状态 systemctl status frps\n查看frp日志 journalctl -u frps tail -f /usr/local/frp/frps.ini\n配置 frps 开机自启。\nsystemctl enable frps\n客户端\n在 https://github.com/fatedier/frp/releases 中下载对应架构的安装包，或使用 Docker 部署。\n[common] server_addr = 服务器地址 server_port = 7000 token = yourtoken tls_enable = true\nhttp_proxy = socks5://192.168.31.166:7890 [dsm] type = tcp use_encryption = true local_ip = 127.0.0.1 local_port = 5000 remote_port = 7006\n[jellyfin] type = tcp use_encryption = true local_ip = 127.0.0.1 local_port = 8096 remote_port = 7007\n[homeassistance] type = tcp use_encryption = true local_ip = 127.0.0.1 local_port = 8123 remote_port = 7008\n[openvpn] type = tcp use_encryption = true local_ip = 127.0.0.1 local_port = 1194 remote_port = 7009\n[dsm1-https2http] type = tcp local_ip = 172.17.0.1 remote_port = 40020 plugin = https2http plugin_local_addr = 172.17.0.1:5000 plugin_crt_path = /etc/frp/example.com.pem plugin_key_path = /etc/frp/example.com.key\n","permalink":"https://weixiang.github.io/posts/frp-deployment-notes/","summary":"frp 是一个专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议，且支持 P2P 通信。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。","title":"FRP 部署笔记"},{"content":"以 X-WRT 为例，使用 Ubuntu 22.04 LTS 系统，建议使用国外服务器编译。\n编译准备\n不要用root用户进行编译操作，因此需要先新建一个用户，并且授予root权限\nLogin via SSH ssh root@your_server_ip\nCreate a new user and follow prompts adduser Add user to superuser group to unlock admin privileges usermod -aG sudo Then log in as the new user su - 更新软件包并安装依赖\nUpdate package lists sudo apt-get update\nUpdate installed packages sudo apt-get upgrade\nsudo apt install build-essential ecj fastjar file flex g++ gcc-multilib g++-multilib gawk gettext git git-core java-propose-classpath libelf-dev libncurses5-dev libncursesw5-dev libssl-dev swig python3 python3-distutils subversion unzip wget zlib1g-dev rsync qemu-utils\n下载源码\ngit clone https://github.com/x-wrt/x-wrt.git cd x-wrt\n#更新代码tag: git fetch origin git fetch origin \u0026ndash;tags\n#列出可以使用的版本tag: git tag #注意按 q 键结束 #或者直接获取最新发布版本 git describe \u0026ndash;tags $(git rev-list \u0026ndash;tags \u0026ndash;max-count=1)\n#选择并切换到指定的版本tag: git checkout -f #例如 git checkout -f 21.10_b202112032317 #或者 git checkout -f $(git describe \u0026ndash;tags $(git rev-list \u0026ndash;tags \u0026ndash;max-count=1))\n#更新代码: ./scripts/feeds update -a ./scripts/feeds install -a\n然后就可以使用make menuconfig进行固件配置，但是我们可以从配置模版开始会更轻松一些。\n比如ramips-mt7621的设备可以用拷贝这个模版feeds/x/rom/lede/config.ramips-mt7621 内核分区限制小的设备，选用 -nosymbol 结尾的config配置模版。\n0 拷贝模板到根目录 cp feeds/x/rom/lede/config.ramips-mt7621 .config\n1 执行 make menuconfig\n2 进入 Target Profile 选择需要编译打包的设备型号，选择型号后立刻退出，保存 #3 执行下面的命令修复 .config sh feeds/x/rom/lede/fix-config.sh\n#4 再次执行 make menuconfig 然后立刻退出保存 make menuconfig\n#5 最后一次 执行 make menuconfig 自定义选择你需要的软件包 make menuconfig\n配置目标（可选项）\n在上述准备好的模版配置文件的基础上，执行make menuconfig命令进行个性化定制，增删应用。\n定位到各个子菜单，选择对应的软件包 。\n添加自定义源\n进入openwrt目录 cd ~/openwrt\n添加自定义源 cat \u0026raquo; feeds.conf.default \u0026laquo;EOF src-git kenzo https://github.com/kenzok8/openwrt-packages src-git passwall https://github.com/xiaorouji/openwrt-passwall EOF\n更新下载软件仓库的源码到本地，并安装自定义源包含的软件包\n./scripts/feeds update -a \u0026amp;\u0026amp; ./scripts/feeds install -a\n添加插件\n首先，进入make menuconfig菜单\n要编译到固件里面，就要选择\u0026lt;*\u0026gt;，如果只选择只是编译成软件包ipk，不会打包进入固件。\n进入LuCI - Applications子菜单下面，选择自己想要的应用\n进入Kernel modules - USB Support菜单，选择USB支持的驱动\n进入Kernel modules - Filesystems菜单，选择需要支持的文件系统，比如ext4,ntfs,vfat等\n进入Kernel modules - Wireless Drivers菜单，选择无线支持的驱动，如果需要挂卡的驱动，也是在这里找\n单独添加软件包\n如果需要单独添加软件，请拉取源码到 package 目录之下。示例如下：\n添加 OpenAppFilter 应用过滤插件 git clone https://github.com/destan19/OpenAppFilter package/OpenAppFilter\n添加 OpenClash git clone https://github.com/vernesong/OpenClash.git mv OpenClash/luci-app-openclash package/\n添加 eqos git clone https://github.com/zhaojh329/eqos.git package/\n在 make menuconfig 选择以下项目 LuCI \u0026gt; Applications \u0026gt; luci-app-eqos Network \u0026gt; eqos 执行make menuconfig进行配置\nOpenClash: LuCI \u0026gt; Applications \u0026gt; luci-app-openclash Kernel modules \u0026gt; Network Support \u0026gt; kmod-tun\nOpenClash需要排除dnsmasq，安装dnsmasq-full，不排除会冲突: Base system \u0026gt; dnsmasq\neqos: LuCI \u0026gt; Applications \u0026gt; luci-app-eqos Network \u0026gt; eqos\n设置默认主题\n注：此操作请在编译前执行，设置 ar­gon 为默认主题，以此为例举一反三\n删除自定义源默认的 argon 主题 rm -rf package/lean/luci-theme-argon\n部分第三方源自带 argon 主题，上面命令删除不掉的请运行下面命令 find ./ -name luci-theme-argon | xargs rm -rf;\n针对 LEDE 项目拉取 argon 原作者的源码 git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git package/lean/luci-theme-argon\n替换默认主题为 luci-theme-argon sed -i \u0026rsquo;s/luci-theme-bootstrap/luci-theme-argon/\u0026rsquo; feeds/luci/collections/luci/Makefile\n设置路由器默认的 LAN IP\n注：此操作请在编译前执行\n设置默认IP为 192.168.199.1 sed -i \u0026rsquo;s/192.168.1.1/192.168.199.1/g\u0026rsquo; package/base-files/files/bin/config_generate\n执行编译\n命令:\nmake\n或者\n-j1：单线程编译 make -j1 V=s\n单线程编译可提高编译成功率，但过程非常漫长，也完全取决于机器的性能。\n编译完成后固件输出路径：bin/targets/下面。\n如果需要再次修改配置编译，只要不是换设备，都可以直接 make menuconfig 修改后就编译，如果需要修改设备，请从拷贝模版配置的地方重新开始配置。\n二次编译步骤\n更新本地编译环境\n更新软件列表、升级软件包 sudo sh -c \u0026ldquo;apt update \u0026amp;\u0026amp; apt upgrade -y\u0026rdquo;\n拉取最新源码 cd ~/openwrt \u0026amp;\u0026amp; git pull\n更新下载安装订阅源包含的软件包 cd ~/openwrt ./scripts/feeds update -a \u0026amp;\u0026amp; ./scripts/feeds install -a\n清理旧文件\n删除/bin和/build_dir目录中的文件 make clean\n如果要更换架构，例如要从 x86_64 换到 MediaTek Ralink MIPS 建议执行以下命令深度清理 /bin 和 /build_dir 目录的中的文件 (make clean) 以及 /staging_dir、/toolchain、/tmp 和 /logs 中的文件。\nmake dirclean\n如果需要对组件重新调整，则建议先删除旧配置\nrm -rf ./tmp \u0026amp;\u0026amp; rm -rf .config\n根据自己的定制需求，再次调整 Open­Wrt 系统组件\nmake menuconfig\n下载编译所需的软件包\nmake download -j8 V=s\n编译 Open­Wrt 固件\nmake -j$(nproc) || make -j1 || make -j1 V=s\n二次编译可以优先使用多线程，报错会自动使用单线程，仍然报错会单线程执行编译并输出详细日志。\n附录\n常用插件列表\n在调整 Open­Wrt 系统组件时：[*] 表示编译软件包并加入到固件；[M] 表示编译软件包但不加入固件；[ ] 则表示不对软件包进行任何设置。\n常见 luci-app-aria2 ARRIA2下载工具 luci-app-ddns DDNS工具 luci-app-mwan3 MWAN3负载均衡 luci-app-openvpn OPENVPN luci-app-ksmbd Ksmbd文件网络共享（samba文件共享） luci-app-upnp UPNP设置 luci-app-wireguard WireGuard配置界面 luci-app-natcap 远程界面管理模块和全锥形nat实现模块 luci-app-natflow-users 用户认证（用户流量显示）模块\n插件类 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-accesscontrol #上网时间控制 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-adbyby-plus #去广告 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-arpbind #IP/MAC绑定 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-autoreboot #高级重启 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-aliddns #阿里DDNS客户端 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-ddns #动态域名 DNS LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-filetransfer #文件传输 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-firewall #添加防火墙 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-frpc #内网穿透 Frp LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-mwan3 #MWAN负载均衡 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-nlbwmon #网络带宽监视器 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-ramfree #释放内存 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-samba #网络共享(Samba) LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-sqm #流量智能队列管理(QOS) LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-openclash #你懂的那只猫 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-dnsfilter #广告过滤 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-passwall #不敢解释 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-mtwifi #闭源Wi-Fi驱动 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-eqos #根据IP控制网速 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-syncdial #薛定谔的多拨应用 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-zerotier #虚拟局域网 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-oaf #应用过滤神器 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-watchcat #断网检测功能与定时重启 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-wol #WOL网络唤醒 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-wrtbwmon #实时流量监测 LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-upnp #通用即插即用UPnP(端口自动转发) LuCI \u0026mdash;\u0026gt; Applications \u0026mdash;\u0026gt; luci-app-argon-config #Argon主题设置\n常用主题类 LuCI \u0026mdash;\u0026gt; Themes \u0026mdash;\u0026gt; luci-theme-argon\n网络相关 (普通用户用不上） Network \u0026mdash;\u0026gt; IP Addresses and Names \u0026mdash;\u0026gt; ddns-scripts_cloudflare.com-v4 Network \u0026mdash;\u0026gt; IP Addresses and Names \u0026mdash;\u0026gt; bind-dig Network \u0026mdash;\u0026gt; Routing and Rediction \u0026mdash;\u0026gt; ip-full Network \u0026mdash;\u0026gt; File Transfer \u0026mdash;\u0026gt; curl Network \u0026mdash;\u0026gt; File Transfer \u0026mdash;\u0026gt; wget-ssl Network \u0026mdash;\u0026gt; iperf3 Network \u0026mdash;\u0026gt; ipset Network \u0026mdash;\u0026gt; socat #多功能的网络工具 Base system \u0026ndash;\u0026gt; dnsmasq-full #DNS缓存和DHCP服务（dnsmasq-full和dnsmasq二者不可共存）\n工具类 (普通用户用不上） Utilities \u0026ndash;\u0026gt; acpid #电源管理接口（适用于x86平台） Utilities \u0026ndash;\u0026gt; Editors \u0026ndash;\u0026gt; nano #Nano 编辑器 Utilities \u0026ndash;\u0026gt; Shells \u0026ndash;\u0026gt; bash #命令解释程序 Utilities \u0026ndash;\u0026gt; disc \u0026ndash;\u0026gt; eject #弹出可移动介质 Utilities \u0026ndash;\u0026gt; disc \u0026ndash;\u0026gt; fdisk #MBR分区工具 Utilities \u0026ndash;\u0026gt; disc \u0026ndash;\u0026gt; gdisk #GBT分区工具 Utilities \u0026ndash;\u0026gt; disc \u0026ndash;\u0026gt; lsblk #列出磁盘设备及分区查看工具 Utilities \u0026ndash;\u0026gt; Filesystem \u0026ndash;\u0026gt; resize2fs #调整文件系统大小 Utilities \u0026ndash;\u0026gt; Filesystem \u0026ndash;\u0026gt; e2fsprogs #Ext2（及Ext3/4）文件系统工具\nIPv6（未来运营商可能不再提供 IPv4 公网地址，有远程访问需求的建议加入） Extra packages \u0026mdash;\u0026gt; ipv6helper （勾选此项即可，下面几项自动勾选） Network \u0026mdash;\u0026gt; odhcp6c Network \u0026mdash;\u0026gt; odhcpd-ipv6only LuCI \u0026mdash;\u0026gt; Protocols \u0026mdash;\u0026gt; luci-proto-ipv6 LuCI \u0026mdash;\u0026gt; Protocols \u0026mdash;\u0026gt; luci-proto-ppp\n参考文献\nhttps://blog.x-wrt.com/docs/build/\nhttps://www.moewah.com/archives/4003.html\nhttps://ghost.org/docs/install/ubuntu/\nhttps://github.com/skyformat99/eqos/blob/master/README_ZH.md\nhttps://xiaohai.co/build-openwrt-firmware/\n","permalink":"https://weixiang.github.io/posts/compile-openwrt-yourself/","summary":"以 X-WRT 为例，使用 Ubuntu 22.04 LTS 系统，自己为红米 AC2100 编译一个 OpenWRT 路由器固件。","title":"自己编译 OpenWRT"},{"content":"开启虚拟化功能 首先需要去BIOS开启虚拟化，各品牌电脑不一致。 RedmiBook Pro 2022 锐龙版 默认已经开启 AMD-V™，无需额外操作。\n安装WLS2 在终端输入以下命令\nwsl --install dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart wsl --set-default-version 2 完成后重启电脑。\n安装Ubuntu 打开 Microsoft Store，直接搜索 Ubuntu 安装即可。 传送门→ https://www.microsoft.com/store/productId/9PDXGNCFSCZV\n配置 安装VSCode插件 打开VSCode会自动检测到WLS2环境，点击安装即可。\n配置中文语言包 sudo apt install language-pack-zh-hans sudo dpkg-reconfigure locales 选择en_US.UTF-8和zh_CN.UTF-8，选择zh_CN.UTF-8为默认语言，重新打开终端生效。\n配置代理 查看宿主机IP\ncat /etc/resolv.conf | grep nameserver | awk \u0026#39;{ print $2 }\u0026#39; 设置代理\nexport http_proxy=\u0026#39;http://\u0026lt;Windows IP\u0026gt;:\u0026lt;Port\u0026gt;\u0026#39; export https_proxy=\u0026#39;http://\u0026lt;Windows IP\u0026gt;:\u0026lt;Port\u0026gt;\u0026#39; 设置git代理\n// 添加代理 git config --global http.proxy \u0026#34;${PROXY_HTTP}\u0026#34; git config --global https.proxy \u0026#34;${PROXY_HTTP}\u0026#34; // 移除代理 git config --global --unset http.proxy git config --global --unset https.proxy 参考文献 https://learn.microsoft.com/en-us/windows/wsl/install https://zhuanlan.zhihu.com/p/466001838 https://zinglix.xyz/2020/04/18/wsl2-proxy/\n","permalink":"https://weixiang.github.io/posts/install-wls2-ubuntu-subsystem-on-windows11/","summary":"在 Windows11 上安装和配置 WLS2 Ubuntu 子系统，以RedmiBook Pro 2022 锐龙版为例。","title":"Windows11 安装 WLS2 Ubuntu 子系统"},{"content":"又来捣鼓网页字体了，在此之前已经搞了几篇了\n中文网页中的字体选型及开发指南 探索中文网页设计中，特别是文字较多的博客类，用那种字体更为合适呢？ Jacob Ruan Jacob\u0026#39;s Thoughts 给 Ghost 博客更换字体 引子\\n接上篇 中文网页中的字体选型及开发指南\\n[https://weixiang.github.io/the-font-selection-and-development-guide-in-chinese-web-pages/] ，我们已经知道了中文网页设计的字体理论及原理，现在是时候应用于实践了！ 字体定义\\nGhost 博客中，以 「Casper」 主题为例，把全局字体进行了三个变量定义，分别对应 「衬线字体」、「非衬线字体」和「等宽字体」，我们只需要在「Code\\ninjection」设置中，重新定义它们就能实现全局更改字体的效果了。 在「Site Header」中添加以下代码： \u0026lt;s… Jacob Ruan Jacob\u0026#39;s Thoughts 字体在设计中的运用 字体在设计中占有重要地位，我们要了解字体，明白不同场合应该用什么字体，才能做出令读者舒适的设计。 Jacob Ruan Jacob\u0026#39;s Thoughts 这次要解决的新问题是，如何去掉代码块中难看的中文宋体。\n众所周知，绝大部分等宽字体都是不带中文的，如果直接像这样定义代码块的字体：\n:root { --font-mono: ui-monospace, SFMono-Regular, \u0026#34;SF Mono\u0026#34;, \u0026#34;Cascadia Code\u0026#34;, \u0026#34;Segoe UI Mono\u0026#34;, \u0026#34;Source Code Pro\u0026#34;, Menlo, Consolas, \u0026#34;Liberation Mono\u0026#34;, monospace; } 那么在代码里的中文，就会因为没有字体匹配，回落到系统默认的中易宋体，非常影响阅读体验。\n下面我们就来解决这个问题。\nfont-face 通过设置 unicode-range 属性时需要明确字符的 Unicode 范围，可以实现指定中文字符的字体。\n@font-face { font-family: \u0026#34;ChineseFont\u0026#34;; src: local(\u0026#34;PingFang SC\u0026#34;), local(\u0026#34;Microsoft YaHei\u0026#34;), local(\u0026#34;Noto Sans CJK SC\u0026#34;); unicode-range: U+2E80-A4CF, U+F900-FAFF, U+FE30-FE4F; } 然后在代码字体中加上刚刚设置的自定义字体\n:root { --font-mono: ChineseFont, ui-monospace, SFMono-Regular, \u0026#34;SF Mono\u0026#34;, \u0026#34;Cascadia Code\u0026#34;, \u0026#34;Segoe UI Mono\u0026#34;, \u0026#34;Source Code Pro\u0026#34;, Menlo, Consolas, \u0026#34;Liberation Mono\u0026#34;, monospace; } 代码块中的中文就被替换为了我们指定的中文字体，就是这个效果\nprint(\u0026#34;I can eat glass, it doesn\u0026#39;t hurt me.\u0026#34;); // 我能吞下玻璃而不伤身体。 ","permalink":"https://weixiang.github.io/posts/set-different-fonts-for-english-and-chinese-in-css/","summary":"在 CSS 中设置网页中的中英文使用不同的字体，优化代码阅读体验。","title":"CSS 中英文使用不同字体"},{"content":"配置文件 将以下内容存为 stack.yml，此处为了不与本机已有的 MySQL 5.x 冲突，重新映射了端口。\n需要提前建好 /www/server/mysql8/mysql 目录和 my.cnf 文件。\nversion: \u0026#39;3.1\u0026#39; services: db: image: mysql command: --default-authentication-plugin=mysql_native_password restart: always environment: MYSQL_ROOT_PASSWORD: yourPassword ports: - \u0026#39;3307:3306\u0026#39; volumes: - \u0026#39;/www/server/mysql8/mysql:/var/lib/mysql\u0026#39; - \u0026#39;/www/server/mysql8/my.cnf:/etc/mysql/my.cnf\u0026#39; - \u0026#39;/etc/localtime:/etc/localtime:ro\u0026#39; 启动容器\ndocker-compose -f stack.yml up 配置远程访问 MySQL 安装完成后只支持 localhost 访问，我们必须设置一下才可以远程访问，另外还有一些 MySQL 8.0 连接时的一些问题。（巨坑）\n查看容器列表\ndocker container ls 进入容器\ndocker exec -it yourContainerId bash 登录到 MySQL\nmysql -u root -p 开始施法\nuse mysql; select host, user, authentication_string, plugin from user; # 查看表格中 root 用户的 host，默认应该显示的 localhost，只支持本地访问，不允许远程访问。 GRANT ALL ON *.* TO \u0026#39;root\u0026#39;@\u0026#39;%\u0026#39;; # GRANT ALL ON 表示所有权限，% 表示通配所有 host，可以访问远程。 ALTER USER \u0026#39;root\u0026#39;@\u0026#39;%\u0026#39; IDENTIFIED WITH mysql_native_password BY \u0026#39;yourPassword\u0026#39;; flush privileges; # 刷新权限 测试连接 mysql -h 127.0.0.1 -P 3307 -u root -p 参考文献 https://hub.docker.com/_/mysql\nhttp://netsite.win/2018/06/13/mysql/mysql8%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7%E5%8F%8A%E6%8E%88%E6%9D%83-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5-%E5%9D%91/\n","permalink":"https://weixiang.github.io/posts/deploy-mysql-8-0-using-docker/","summary":"使用 Docker Compose 部署 MySQL 8.0 数据库服务器，数据持久化，以及配置远程访问权限。","title":"Docker 部署 MySQL 8.0"},{"content":"原本华擎 J3455 是最接近 DS918 原厂配置的主板，乃黑群晖之上品，但却因为华擎的骚操作，导致这款主板安装 DSM 时会出现各种奇奇怪怪的问题，启动慢，传输速度慢等等。在距离这款主板发布五年有余的 2022 年，终于水落石出。问题就出在华擎在 BIOS 中隐藏了 OS 兼容性的选项。\n破题 参考其他主板的 BIOS\n0x193E1 One Of: OS Selection, VarStoreInfo (VarOffset/VarName): 0x494, VarStore: 0x1, QuestionId: 0x272A, Size: 1, Min: 0x0, Max 0x4, Step: 0x0 {05 91 9C 01 9D 01 2A 27 01 00 94 04 14 10 00 04 00} 0x193F2 One Of Option: Windows, Value (8 bit): 0x0 (default) {09 07 9E 01 30 00 00} 0x193F9 One Of Option: Android, Value (8 bit): 0x1 {09 07 9F 01 00 00 01} 0x19400 One Of Option: Win7, Value (8 bit): 0x2 {09 07 A0 01 00 00 02} 0x19407 One Of Option: Intel Linux, Value (8 bit): 0x3 {09 07 A2 01 00 00 03} 0x1940E One Of Option: MSDOS, Value (8 bit): 0x4 {09 07 A1 01 00 00 04} 0x19415 End One Of {29 02} 下面是华擎的 BIOS\n0x19C71 One Of: OS Selection, VarStoreInfo (VarOffset/VarName): 0x48A, VarStore: 0x1, QuestionId: 0x273E, Size: 1, Min: 0x0, Max 0x4, Step: 0x0 {05 91 E0 01 E1 01 3E 27 01 00 8A 04 14 10 00 04 00} 0x19C82 One Of Option: Windows, Value (8 bit): 0x0 (default) {09 07 E2 01 30 00 00} 0x19C89 One Of Option: Android, Value (8 bit): 0x1 {09 07 E3 01 00 00 01} 0x19C90 One Of Option: Win7, Value (8 bit): 0x2 {09 07 E4 01 00 00 02} 0x19C97 One Of Option: MSDOS, Value (8 bit): 0x4 {09 07 E5 01 00 00 04} 0x19C9E End One Of {29 02} 可以发现缺少了一项\n0x19407 One Of Option: Intel Linux, Value (8 bit): 0x3 {09 07 A2 01 00 00 03} 这就是问题所在。\n升级BIOS 解决这个问题，首先要将 BIOS 升级到最新的 1.8 版本，若原版本过旧，需要先升级到 1.7 再升级为 1.8。 前往华擎官网下载即可：https://www.asrock.com/mb/Intel/J3455-ITX/index.cn.asp#BIOS 下载BIOS时，通过 中国 无法下载时，可以开代理，选择 全球 会更快一些。 华擎 J3455 P1.8 BIOS 下载地址：https://download.asrock.com/BIOS/CPU/J3455-ITX(1.80)ROM.zip 下载后 解压 到U盘，重启按住F6即可进入升级界面（图文不符）。 具体可参考：https://www.asrock.com/support/BIOSIG.cn.asp?cat=BIOS8 制作 AmiSetupWriter 启动盘 首先建议选择UEFI进行引导。 下载 AmiSetupWriter，解压到一个 FAT32 的空白U盘的根目录。 此工具可以在互联网上找到，常见用途是强行给10代以上的主板装 Windows 7（奇怪的要求 这里放一个两个下载链接，若失效可自行搜索下载。 https://mega.nz/folder/NC5CXLQS#YNCi_9IDn18y7axbdNyRMQ https://pan.baidu.com/wap/init?surl=H4suGj8pwVPw2oAZsCn1dA （提取码：jzhu）\n修改 BIOS 将启动盘插入目标设备，启动时按 F11，选择从U盘启动。 会出现一个终端 Shell\u0026gt;，大概长这样（图文不符）： 输入命令：\namisetupwriter 0x4E2 0x3 然后输入 exit 退出，重启完工。 实测 DSM7 效果，开机一分半左右，传输速度基本达到千兆水平。\n参考文献 http://www.gebi1.com/thread-302113-1-1.html https://www.asrock.com/support/BIOSIG.cn.asp?cat=BIOS8 https://winraid.level1techs.com/t/tool-guide-ami-setup-ifr-extractor-amisetupwriter/32801\n版权声明 本文由 Jacob 采用 知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议 进行许可，发布于 weixiang.github.io 。\n","permalink":"https://weixiang.github.io/posts/solve-the-dsm-compatibility-issue-of-asrock-j3455-motherboard/","summary":"通过 AmiSetupWriter 修改隐藏的 BIOS 选项，解决了华擎 J3455 主板安装 DSM 黑群晖的兼容性问题。","title":"解决华擎J3455主板DSM兼容性问题"},{"content":"引子 假期给家里组了一台NAS，万由401机箱+华擎J3455。 没想到过程比预想中要曲折许多，买了才知道，华擎J3455是著名的“妖板”。 安装各种出错，启动时间巨长（至少十分钟），网速飘忽不定，还有DSM中各种奇奇怪怪的Bug…… 总之，敢碰华擎J3455的都是勇士。 听说是驱动问题造成的，自己编译引导可以一定程度上缓解这些问题。 于是就有了下面的笔记。\n事实证明确实靠谱，比用通用引导稳定了不少，目前已经平稳运行两周有余。感谢 pocopico 和 llm-y2k 两位开发者。\n制作 tinycore-redpill 启动盘 前往项目：https://github.com/llm-y2k/tinycore-redpill 这里采用了llm-y2k修改的换源版镜像：\npocopico发布的Tinycore-redpill实现编译DSM7引导的自动化，省去繁琐的手工操作部分，造福了广大玩家。但由于众所周知的原因，Tinycore-redpill在国内网络基本无法使用，U盘引导NAS实体机编译时几乎无法完成，遂修改部分代码以适应国内网络环境，目前已可正常使用。\n下载镜像文件，根据设备情况选择不同的引导镜像，我这里选用了[tinycore-redpill-uefi.v0.8.0.0.img.gz](https://github.com/llm-y2k/tinycore-redpill/blob/cn/tinycore-redpill-uefi.v0.8.0.0.img.gz)。 使用任意引导盘制作工具，如Rufus，烧录进U盘即可。\n启动 tinycore-redpill 将烧写完成的U盘插入目标设备，选择从U盘启动即可进入系统，点击下图图标进入终端。 使用ifconfig命令查看设备IP地址 使用任意 SSH 工具连接到上面的IP，账号为tc，密码为P@ssw0rd\nssh tc@192.168.0.243 更新脚本 首先更新脚本\nsudo curl https://raw.0z.gs/llm-y2k/tinycore-redpill/main/rploader-cn.sh|bash -s fullupgrade 授予执行权限\nsudo chmod 777 *.sh 生成配置 输入如下命令开始配置编译文件\nsudo ./rploader-cn.sh serialgen DS918+ now 或者 sudo ./rploader-cn.sh serialgen DS3615xs now 这里设置nas机型，推荐选择918和3615两种中的一种 配置盘序文件\nsudo ./rploader-cn.sh satamap now 生成U盘VID、PID信息\nsudo ./rploader-cn.sh identifyusb now 开始编译 配置完成后，正式开始编译，根据机器和网络速度，耗时可能会比较长，耐心等待即可。 建议上游做好代理设置，跑起来会比较顺利。\n# 根据前面所选机型输入编译命令 918： sudo ./rploader-cn.sh build apollolake-7.0.1-42218 3615： sudo ./rploader-cn.sh build bromolow-7.0.1-42218 curl 35错误不妨休息一下，过会再试，curl 60错误不妨检查下Nas机器本地时间是否正确。 由于网络原因，可能个别驱动下载失败，别慌，重新再次编译即可。 编译成功！切换到winscp去下载生成的文件 备份引导 下载引导镜像文件，做好备份有备无患，此引导镜像相当于为此设备定制。 最后回到putty，正式存盘，一定要存盘！一定要存盘！一定要存盘！\nsudo filetool.sh -b 最后重启设备\nsudo reboot 理论上会自动引导进入 DSM 的安装界面， 如果没有，可以将上面备份的镜像写入U盘，再进行引导。 接下来就是常规的 DSM 安装流程了。\n参考文献 https://www.openos.org/threads/0-8-0-3dsm7tinycore-redpill.4050/ https://github.com/llm-y2k/tinycore-redpill https://github.com/pocopico/tinycore-redpill\n版权声明 本文由 Jacob 采用 知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议 进行许可，发布于 weixiang.github.io 。\n","permalink":"https://weixiang.github.io/posts/compile-your-own-dsm7-boot/","summary":"使用 tinycore-redpill 自己动手编译黑群晖 Synology DSM7 的引导镜像，以华擎 J3455 为例。","title":"自己动手编译 DSM7 引导"},{"content":"由于 Ghost 不自带评论系统，所以如果想在文章中添加评论区的话，就必须使用第三方的评论系统，其中最合适的就是 Disqus。 但因为众所周知的原因，在世界上的某些地区是无法使用 Disqus 这样的 404 评论系统的。 DisqusJS 的出现，可以一定程度上缓解这个问题。\nDisqusJS 是一个基于 Disqus API 和 React 开发的 Embed 插件。DisqusJS 通过 Disqus API 渲染只读的评论列表，搭配反向代理可以实现在网络审查地区加载 Disqus 评论列表；支持自动检测访客是否能够访问 Disqus、并自动选择加载原生 Disqus（评论完整模式）或 DisqusJS 提供的评论基础模式。\n此前本站就在用 DisqusJS 1.3 作为评论支持，趁着这次升级版本记录一下操作。\nTips：本文基于 DisqusJS 的新版本 3.0 进行操作。\n添加头文件 在Code Injection中的Site Header添加 DisqusJS 的头文件即可\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/npm/disqusjs@3.0/dist/browser/styles/disqusjs.css\u0026#34;\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/disqusjs@3.0/dist/browser/disqusjs.es2015.umd.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; 修改主题 下载主题源码，在需要展示评论的地方创建一个 DisqusJS 容器，并添加配置： 配置如何获取，请参考官方文档 https://ghost.org/integrations/disqus/\n\u0026lt;div id=\u0026#34;disqusjs\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; const disqusjs = new DisqusJS({ shortname: \u0026#39;你的 Disqus Forum 的 shortname\u0026#39;, siteName: \u0026#39;你站点的名称\u0026#39;, identifier: \u0026#39;ghost-{{comment_id}}\u0026#39;, url: \u0026#39;{{url absolute=\u0026#34;true\u0026#34;}}\u0026#39;, title: \u0026#39;\u0026#39;, api: \u0026#39;https://替换为你的反代域名/disqus/api/\u0026#39;, apikey: \u0026#39;DisqusJS 向 API 发起请求时使用的 API Key\u0026#39;, admin: \u0026#39;你的站点的 Disqus Moderator 的用户名\u0026#39;, adminLabel: \u0026#39;你想显示在 Disqus Moderator Badge 中的文字\u0026#39; }); \u0026lt;/script\u0026gt; 配置 Disqus Application 在 Disqus API Application 处注册一个 Application。 点击新创建的 Application，获取你的 API Key（公钥）。 在 Application 的 Settings 页面设置你使用 DisqusJS 时的域名。Disqus API 会检查 API 请求的 Referrer 和 Origin。 配置 DisqusJS 参数 shortname {string}\n你的 Disqus Forum 的 shortname，你可以在 Disqus Admin - Settings - General - Shortname 获取你的 shortname 必须，无默认值 siteName {string}\n你站点的名称，将会显示在「评论基础模式」的 header 中；该配置应该和 Disqus Admin - Settings - General - Website Name 一致 非必须，无默认值 identifier {string}\n当前页面的 identifier，用来区分不同页面 建议，默认值为 document.location.origin + document.location.pathname + document.location.search url {string}\n当前页面的 URL，Disqus 的爬虫会爬取该 URL 获取页面相关信息 建议，默认值为 document.location.origin + document.location.pathname + document.location.search title {string}\n当前页面的标题，如果没有设置默认为当前页面的标题。当页面标题中有其他信息（比如站点名称）而不想在 Disqus 中展示时，可以设置此项。 非必须，默认值为 document.title api {string}\nDisqusJS 请求的 API Endpoint，通常情况下你应该配置一个 Disqus API 的反代并填入反代的地址。你也可以直接使用 DISQUS 官方 API 的 Endpoint https://disqus.com/api/，或是使用我搭建的 Disqus API 反代 Endpoint https://disqus.skk.moe/disqus/。如有必要可以阅读关于搭建反代的 相关内容 建议，默认值为 https://disqus.skk.moe/disqus/ apikey {string | string[]}\nDisqusJS 向 API 发起请求时使用的 API Key，你应该在配置 Disqus Application 时获取了 API Key DisqusJS 支持填入一个 包含多个 API Key 的数组，每次请求时会随机使用其中一个；如果你只填入一个 API Key，可以填入 string 或 Array。 必填，无默认值 nesting {number}\n最大评论嵌套数；超过嵌套层数的评论，会不论从属关系显示在同一层级下 非必须，默认值为 4 nocomment {string}\n没有评论时的提示语（对应 Disqus Admin - Settings - Community - Comment Count Link - Zero comments） 非必须，默认值为 这里冷冷清清的，一条评论都没有 以下配置和 Disqus Moderator Badge 相关，缺少一个都不会显示 Badge admin {string}\n你的站点的 Disqus Moderator 的用户名（也就是你的用户名）。你可以在 Disqus - Settings - Account - Username 获取你的 Username 非必须，无默认值 adminLabel {string}\n你想显示在 Disqus Moderator Badge 中的文字。该配置应和 Disqus Admin - Settings - Community - Moderator Badge Text 相同 非必须，无默认值 渲染评论 最后，让 DisqusJS 实例将评论组件渲染到页面上：\ndisqusjs.render(document.getElementById(\u0026#39;disqusjs\u0026#39;)); // 你也可以传入一个 CSS 选择器 // disqusjs.render(\u0026#39;#disqusjs\u0026#39;); 在 Casper 主题中，完成之后的post.hbs评论部分长这样：\n\u0026lt;section class=\u0026#34;article-comments gh-canvas\u0026#34;\u0026gt; \u0026lt;!-- DisqusJS 评论区--\u0026gt; \u0026lt;div id=\u0026#34;disqusjs\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; const disqusjs = new DisqusJS({ shortname: \u0026#39;xxxxxxxx\u0026#39;, siteName: \u0026#39;xxxxxxxx\u0026#39;, identifier: \u0026#39;ghost-{{comment_id}}\u0026#39;, url: \u0026#39;{{url absolute=\u0026#34;true\u0026#34;}}\u0026#39;, title: \u0026#39;\u0026#39;, api: \u0026#39;https://domain.com/disqus/api/\u0026#39;, apikey: \u0026#39;xxxxxxxx\u0026#39;, admin: \u0026#39;xxxxxxxx\u0026#39;, adminLabel: \u0026#39;xxxxxxxx\u0026#39; }); disqusjs.render(document.getElementById(\u0026#39;disqusjs\u0026#39;)); \u0026lt;/script\u0026gt; \u0026lt;/section\u0026gt; 修改完成后重新打包为zip，上传到 Ghost 更新主题即可。\n反向代理 在站点配置中添加：\nserver { ... # for hexo-theme-next disqusjs. location /disqus/api/ { proxy_redirect off; proxy_pass https://disqus.com/api/; } ... } 完成后重启 nginx 服务：\nservice nginx reload 打开 https://domain.com/disqus/api/3.0/threads/list.json （domain.com是你 nginx 配的域名）验证一下，是否配置成功：返回如下内容即可。\n{\u0026#34;code\u0026#34;:5,\u0026#34;response\u0026#34;:\u0026#34;Invalid API key\u0026#34;} 参考文献 https://github.com/SukkaW/DisqusJS https://yrom.net/blog/2018/10/18/Use-DisqusJS-for-comment/ https://ghost.org/integrations/disqus/\n版权声明 本文由 Jacob 采用 知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议 进行许可，首发于 weixiang.github.io 。\n","permalink":"https://weixiang.github.io/posts/ghost-uses-disqusjs-3-0-comment-plugin/","summary":"DisqusJS 是一个基于 Disqus API 和 React 开发的 Embed 插件，本文记录一次 DisqusJS 在 Ghost 博客上的安装过程。","title":"Ghost 使用 DisqusJS 3.0 评论"},{"content":"备份原站点 将网站目录及数据库打包，妥善保管。\n部署新站点 在新服务器进行 Flarum 站点的全新部署，具体可参考 https://discuss.flarum.org.cn/d/2195\n无需配置新站点，站点可以正常打开就行，到下图这一步即可，不用填写信息，稍后会直接从配置文件进行恢复。 恢复备份 将站点及数据库备份上传到新服务器，解压到一个新文件夹，不要覆盖直接新站点。 恢复数据库，保持数据库名称和密码与原站点一致。 将原来的 public 文件夹，vender 文件夹，composer.json 文件，composer.lock 文件，config.php 文件覆盖至新部署的 Flarum 根目录。 刷新网页，享受新站点。 参考文献 https://www.wapriaily.com/flarum-pagoda-perfect-migration-tutorial/ https://discuss.flarum.org.cn/d/2195\n版权声明 本文由 Jacob 采用 知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议 进行许可，首发于 weixiang.github.io 。\n","permalink":"https://weixiang.github.io/posts/flarum-web-server-migration-notes/","summary":"记录一次使用宝塔面板进行 Flarum 论坛网站服务器迁移的过程。","title":"Flarum 站点服务器迁移笔记"},{"content":" 本文为2022年校内互联网+创业创新大赛的讲稿，在此记录，文章作者为我与Solitude同学。\n本文禁止转载。\n各位老师、同学们，大家好。\n我们是一支来自2021级的两人队伍，我们带来的项目是\n一种AI防疫快速通行，及自动追溯，辅助数据系统。\n本项目主要采用了低功耗蓝牙技术，解决在疫情防控常态化背景下，健康码人工查验导致通行效率不佳的问题，并且有数据追溯、记录的功能，能为流行病学调查分析提供依据和有力帮助。\n除此之外，本项目还可以用于其他领域，例如公共场所的人流量统计和身份认证，零售商店的无感支付和快速结算等。\n本项目主要分为前端、后端和硬件端三个部分，先带大家简单了解主要特色，稍后我们将在短片中详细讲解与演示。\n我们为不同的用户角色，设计了不同的前端交互界面，分为用户端、管理端和公开平台，它们各司其职，精准服务不同职能的用户，更加高效。\n后端我们使用了两个云计算平台，分别是百度大脑和IBM云，由它们共同协调整个项目的业务逻辑，同时提供人工智能、机器视觉能力的支持。\n硬件上，我们使用了来自国货之光乐鑫ESP32芯片作为基本节点，采集数据上报到云平台，用非常低的成本，提供了低功耗蓝牙与Wi-Fi联网能力。\n本项目立项于今年三月，在通过形式验证之后，就着手开始了开发工作，我们两个人分别负责软件和硬件部分，在四月份完成了基本的功能实现，随后经过联合调试，磨合软硬件之间的配合协作。\n这是本项目的主要特性和当前两项常用技术方法的对比，本项目补足了现有方法的一些不足之处，配合现有的技术方法，能较好提高防控工作的效率。\n本项目的架构主要分为四层，由下自上分别是底层、基础层、业务层和交互层，其中底层和基础层还分为软件层和硬件层，交互层也是分为了管理和用户两层，它们相互配合组成了本项目。\n这是本项目所使用的主要技术和特性。\n由于本项目开发时采用了局域网部署，现场无法完整演示功能，所以下面请通过短片了解本项目的详情和操作演示。\n我们的项目汇报结束，谢谢各位的聆听。\n版权声明 本文由 Jacob 采用独家许可，禁止转载、演绎，仅限于 weixiang.github.io 发布。\n","permalink":"https://weixiang.github.io/posts/an-ai-epidemic-prevention-fast-passage-and-automatic-traceability-auxiliary-data-system/","summary":"本项目主要采用了低功耗蓝牙技术，解决在疫情防控常态化背景下，健康码人工查验导致通行效率不佳的问题，并且有数据追溯、记录的功能，能为流行病学调查分析提供依据和有力帮助。","title":"一种AI防疫快速通行及自动追溯辅助数据系统"},{"content":"去年跟着 司波图 捡垃圾，搞了一台 HP EliteDesk 800 G1 USDT 小主机，并且成功安装上了 Catalina 系统。 现在 Monterey 已经推出一段时间了，驱动等社区项目都已经趋于稳定，于是便自己动手尝试安装了，在此记录一下。\nTips: 本文操作环境为 Windows10\n下载安装程序镜像 需要先安装好 Python 环境：https://www.python.org/downloads/\n下载 OpenCore：https://github.com/acidanthera/OpenCorePkg/releases\n解压，并在 CMD 里定位到 /Utilities/macrecovery/目录\n![4301a26e7bb63bb1]https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2022/03/4301a26e7bb63bb1.png)\n然后用命令下载对应版本就行了\n# Mojave (10.14) python macrecovery.py -b Mac-7BA5B2DFE22DDD8C -m 00000000000KXPG00 download # Catalina (10.15) python macrecovery.py -b Mac-00BE6ED71E35EB86 -m 00000000000000000 download # Big Sur (11) python macrecovery.py -b Mac-42FD25EABCABB274 -m 00000000000000000 download # Monterey (12) python ./macrecovery.py -b Mac-E43C1C25D4880AD6 -m 00000000000000000 download ![96ced11aa5247e6f]https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2022/03/96ced11aa5247e6f.png)\n下载完毕之后，可以得到BaseSystem的镜像文件。\n![ca7b4c320c8c128c]https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2022/03/ca7b4c320c8c128c.png)\n制作启动盘 下载 Rufus：https://rufus.ie/\n找一个大于4G的U盘，用 Rufus 打开：\n将 BOOT 选项设置为不可启动 将文件系统设置为大 FAT32 点击开始 删除 U 盘分区中的所有文件 ![f0ebebfc594740a7]https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2022/03/f0ebebfc594740a7.png)\n然后在U盘的根目录并创建一个名为com.apple.recovery.boot的文件夹，然后把刚刚下好的 BaseSystem 复制进去， .dmg 和 .chunklist 都要复制。\n![31ee37eb4660cfea]https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2022/03/31ee37eb4660cfea.png)\n接着把刚刚下好的OpenCorePkg里的 x64/EFI文件夹复制到U盘根目录。其实如果不打算自己写 EFI 文件的话这步就不用做了 此时U盘应该长这样：\n![c2802884a0368c35]https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2022/03/c2802884a0368c35.png)\n到这一步，启动盘就制作好了，下面就是难点了。\n获取 EFI 文件 Hackintosh 安装的难点，就是 EFI 驱动，对我们普通玩家来说，还是直接找大佬做的 EFI 比较省事。 那么在哪里找呢？当然是万能的 Google 和 GitHub ，关键词：机型+EFI。\n非常巧的是，我这个机型有大佬一直在维护：\nhttps://www.insanelymac.com/forum/topic/323180-monterey-big-sur-catalina-mojave-high-sierra-on-hp-800-g1-usdtsff-and-tower-pcs/\n那么我只需要下载下来修改就可以使用了。\n修改 EFI 信息 需要用到两个工具： plist 编辑器 ProperTree：https://github.com/corpnewt/ProperTree SMBIOS 生成器 GenSMBIOS：https://github.com/corpnewt/GenSMBIOS\n接下来，让我们双击ProperTree.bat打开 ProperTree 并编辑大佬 EFI 中的 config.plist 定位到PlatformInfo，修改系统信息。\n![25bb66fdb84f785b]https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2022/03/25bb66fdb84f785b.png)\nGoogle 查询苹果的 iMac 系统支持情况可知，2015年前后的电脑，只有iMac16,2以上的机型可以升级，所以我计划模拟为它。\n打开 GenSMBIOS，根据 readme 生成 iMac16,2的串号信息，看起来应该长这样：\n####################################################### # iMac16,2 SMBIOS Info # ####################################################### Type: iMac16,2 Serial: C02M9SYJFY10 Board Serial: C02408101J9G2Y7A8 SmUUID: 7B227BEC-660D-405F-8E60-411B3E4EF055 把Type复制到 Generic -\u0026gt; SystemProductName。 把Serial复制到 Generic -\u0026gt; SystemSerialNumber。 把Board Serial复制到Generic - \u0026gt; MLB。 把SmUUID复制到 Generic -\u0026gt; SystemUUID。 到这一步， EFI 修改完成了，删掉之前OpenCorePkg里的 EFI，把修改好的 EFI 复制到 U 盘即可。\n从U盘启动并安装 把U盘插入目标电脑，开机时选择从U盘启动即可。 可以先用安装程序自带的磁盘助理格式化一下硬盘。 然后跟着安装程序走就行，保持网络通畅。 重启几次后就可以了（实测20M宽带四小时左右）\n复制 EFI 到硬盘 安装成功后，EFI 是不会自动添加进硬盘的，需要我们自己复制进去。 首先需要一个OpenCore Configurator：https://mackie100projects.altervista.org/download-opencore-configurator/ 启动后，会在菜单栏出现快捷菜单，可以很方便地挂载 EFI 分区。\n![b224a34e5050678d]https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2022/03/b224a34e5050678d.png)\n选择系统盘，然后点击挂载分区，打开分区。 把U盘的 EFI 文件夹复制到硬盘的 EFI 分区里，下次启动时就不用插着U盘了。\n修补驱动 在系统里测试一下各项功能是否完好，如果你有和大佬 EFI 不一样的硬件，那就只能自己动手修补咯又是一个难点\n我的 Wi-Fi 网卡是英特尔的，和大佬的免驱动博通网卡不一样，要自己加上。\n警告：在修改 EFI 之前，一定要备份备份备份！\n可以在 GitHub 找自己需要的驱动，比如英特尔网卡驱动项目itlwm： https://github.com/OpenIntelWireless/itlwm\n下载对应系统版本，解压并复制到 EFI/Kexts 里，然后在 OpenCore Configurator 里启用它就好了。\n![2f12cfc1f04efd6e]https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2022/03/2f12cfc1f04efd6e.png)\n结语 选择了 Hackintosh 就注定这不是一条轻松的道路，过程中会遇到许多困难，花费许多时间。 OpenCore 的官方文档真的非常详细，我愿称之为早教级，遇到问题可以在里面查找：https://dortania.github.io/OpenCore-Install-Guide/\n那么轻松、稳定而优雅的方法呢？当然有！ 欢迎光临 Apple Store：https://www.apple.com/mac/\n我使用 Hackintosh 也已经一年有余了，我也喜欢上了 macOS 的体验 想去买一台的冲动也越来越强烈了……（这一定是厨子的阴谋\n这或许就是苹果不严打 Hackintosh 的原因吧。 愿你 Hackintosh 半生，归来仍是 Macintosh。\n![69a244f5708f3160]https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2022/03/69a244f5708f3160.png)\n参考资料 https://dortania.github.io/OpenCore-Install-Guide/\n版权声明 本文由 Jacob 采用 知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议 进行许可，首发于 weixiang.github.io 。\n","permalink":"https://weixiang.github.io/posts/hackintosh-monterey-installation-notes/","summary":"在 HP EliteDesk 800 G1 USDT 上使用 OpenCore 引导 macOS 12.2.1 Monterey 黑苹果系统安装过程记录。","title":"Hackintosh Monterey 安装手记"},{"content":"特别鸣谢 感谢周威同学协助拍摄，感谢 ATRI 同学的 iPhone 13 Pro Max 1TB 远峰蓝 提供出镜，感谢大师兄同学的 DJI Pocket 2 提供拍摄，感谢廣軟市傳製片廠的 DJI OM 3 提供拍摄。\n文字版 本产品基于乐鑫 ESP8266 平台，通过 MFRC522 射频识别模组 阅读卡片、智能手机、手表等 NFC 标签，控制电磁锁的通断，支持 APP 远程控制和管理，整体造价低廉，基础功能完善。\n本产品设计的初衷，就是在不改变原有门锁结构的情况下，无需敲墙打孔，也能让传统门锁变得智能化，同时也不影响原有门锁的功能。\n用户体验是我们在进行产品设计时的首要考量，这一点，从您第一次使用本产品时 就已经开始。\n我们使用了优雅的乐鑫 SmartConfig 和微信 AirKiss 配网技术。首次使用，您只需要使用微信或配套的 APP 靠近设备，即可让设备快速连接家中的无线网络，开箱即用，无需更多设置。\n智能化，是我们产品的关键词。\n我们为您设计了更加简单易用的 APP 界面，状态、功能和设置一目了然，随时随地查看和控制设备。同时，设备也支持家庭共享，只需要扫描分享二维码，即可和家人一起 控制家中的设备。\n作为一个合格的门锁，安全性一定是重中之重。\n本产品有着完整的权限控制功能，管理员和用户持有不同的卡片，管理员可以通过卡片或 APP 动态添加和删除用户。\nAPP 内可以查看人员出入记录、门锁开关状态等信息，在外也可知晓家中安全，并且当有人试图暴力拆卸门锁时，APP 会立即通知您。\n对于开发者和极客用户，我们提供了外部 MQTT 上报功能，您可以配合 Home Assistant 等家庭自动化系统，做到家中智能设备的联动，比如在您开门时就自动打开全屋灯光。\n同时，您还可以通过 Apple HomeKit 实现 Siri 控制等功能。\n如果你觉得这个产品还有点意思的话，欢迎关注我，也欢迎给我提意见或建议，您的支持和关注就是我创作的最大动力！\n版权声明 本文由 Jacob 采用独家许可，禁止转载、演绎，仅限于 weixiang.github.io 发布。\n","permalink":"https://weixiang.github.io/posts/a-smart-lock-based-on-esp8266/","summary":"基于乐鑫 ESP8266 平台的智能锁，通过 MFRC522 射频识别模组阅读卡片、智能手机、手表等 NFC 标签，控制电磁锁的通断，支持 APP 远程控制和管理。","title":"一种基于 ESP8266 的新型家庭门锁智能化无损改造装置"},{"content":"网络ADB调试 进入设置页面，遥控器输入96956 查看IP，并使用 adb connect 192.168.1.x连接到机顶盒 常见应用安装目录 system/app 系统自带的应用程序，无法删除。root后可以删除 system/priv-app 比system/app 中的应用权限更加高,如Launcher，系统设置等 vendor/app 设备厂商提供的app system_ext/app 真实路径在 system/system_ext/app data/app 用户自己安装的app data/data/packageName用于存储应用数据 data/dalvik-cache将apk中的dex文件放在这个目录中\n安装为系统APP adb shell mount -o remount /system #添加读写权限 adb push C:\\Users\\jacob\\Desktop\\BiliTV.apk system/app #推送APK到系统目录 常用设备命令 adb disconnect #断开连接 adb reboot #重启 adb shell #进入终端 adb shell pm list packages #列出已安装的应用 adb shell dumpsys activity top | grep ACTIVITY #显示当前的Activity 常用APP启动命令 adb shell am start com.xiaodianshi.tv/.yst.ui.main.MainActivity #云视听小电视 adb shell am start com.dangbeimarket/.activity.WelcomeActivity #当贝市场 adb shell am start com.bilibili.tv/.ui.splash.SplashActivity #BiliTV adb shell am start -n com.android.browser/com.android.browser.BrowserActivity #浏览器 adb shell am start -a android.intent.action.VIEW -d https://www.bilibili.com/ #用浏览器打开网址 adb shell am start com.android.settings/com.android.settings.Settings #打开系统设置 研究小结 该机顶盒采用华为海思方案，性能还行，不过运营商限制了第三方应用的安装，采用证书签名的限制方法。 自带 root 权限，可以使用 root 将第三方应用作为系统应用安装，但大部分安装完会闪退，当贝市场用该方法安装可以正常使用。 猜测可以使用芯片同型号的其他机顶盒刷机包进行卡刷或线刷破解。 参考资料 https://blog.csdn.net/xianrenli38/article/details/79607077\n","permalink":"https://weixiang.github.io/posts/guangdong-cable-tv-box-gdt-jl1000-research-record/","summary":"广东广电送的 Android 机顶盒，研究了一下是否可以安装第三方应用。","title":"广东广电机顶盒 GDT-JL1000 研究记录"},{"content":"就挺奇怪的，非常常见的操作，但全网却找不到一篇教程，在我的一番尝试下，终于找到了能用的配置方法，在此记录一下。支持 AWS S3 的存储服务同理，比如阿里云什么的也一样。\n安装 FoF Upload 插件 原作帖子地址：https://discuss.flarum.org/d/4154-friendsofflarum-upload-the-intelligent-file-attachment-extension\ncomposer require fof/upload 获取配置参数 原理很简单，插件支持 AWS S3 及其兼容协议，腾讯云的COS也兼容 AWS S3 协议，所以直接填进去就能用，当然参数也要填对。支持 AWS S3 的存储服务同理，比如阿里云什么的也一样。\n本文不再赘述创建存储桶取得 Key 之类的基本操作，可以参考下面：\n腾讯云官方 AWS S3 配置指南：https://cloud.tencent.com/document/product/436/41284\nAmazon Simple Storage Service（Amazon S3，下文简称 S3）是 AWS 最早推出的云服务之一，经过多年的发展，S3 协议在对象存储行业事实上已经成为标准。腾讯云对象存储 COS（下文简称 COS）提供了兼容 S3 的实现方案，因此您可以在大部分兼容 S3 应用中直接使用 COS 服务。\n配置 FoF Upload 在 Flarum 后台，进入 FoF Upload 配置页。\n文件链接前缀 找到“存储设置 - 文件链接前缀 / 对象存储 CDN 或访问域名（含 http/https）”，在里面填入你的腾讯云域名前缀。\n格式为 https://\u0026lt;BucketName-APPID\u0026gt;.cos.\u0026lt;Region\u0026gt;.myqcloud.com\n例如 //jacob-1234567890.cos.ap-guangzhou.myqcloud.com\nAWS S3 存储设置 找到“AWS S3 存储设置”，依次填入。\nKey：即腾讯云的 SecretKey Secret：即腾讯云的 SecretId 存储空间（Bucket）:即腾讯云的存储桶名称 BucketName-APPID 地域（Region）:即腾讯云的地域 Region 高级 S3 存储设置 找到“AWS S3 存储设置”，依次填入。\n访问域名（Endpoint）：https://cos.\u0026lt;Region\u0026gt;.myqcloud.com （\u0026lt;Region\u0026gt;替换为你的，如ap-guangzhou） 使用 path-style 访问域名：关闭 访问控制列表（ACL）：public-read （即共有读私有写） 应用于上传对象的读写权限 ACL（默认私有读写）。 有关可用的值，请参阅：https://iflarum.cn/aws-s3acl\n","permalink":"https://weixiang.github.io/posts/flarum-uses-tencent-cloud-cos-storage/","summary":"Flarum 使用腾讯云COS对象存储或其他支持 Amazon S3 协议的存储服务作为图床的配置方法。","title":"Flarum 使用腾讯云COS对象存储"},{"content":" 本文 Ghost version: 4.32.1\n安装 ghost-qcloud-cos 模块 使用命令安装\nnpm install ghost-qcloud-cos 在目录下创建文件夹\nmkdir -p content/adapters/storage 在content/adapters/storage创建cos-store.js\n// content/adapters/storage/cos-store.js module.exports = require(\u0026#39;ghost-qcloud-cos\u0026#39;); 配置设置文件 在config.production.json中添加\n{ \u0026#34;storage\u0026#34;: { \u0026#34;active\u0026#34;: \u0026#34;cos-store\u0026#34;, \u0026#34;cos-store\u0026#34;: { \u0026#34;baseUrl\u0026#34;: \u0026#34;Base Url(Allowed to be empty)\u0026#34;, \u0026#34;basePath\u0026#34;: \u0026#34;图片存放路径，不填写默认为/ghost/content/images/\u0026#34;, \u0026#34;rename\u0026#34;: \u0026#34;是否重命名为MD5文件名，布尔值，默认为false\u0026#34;, \u0026#34;SecretId\u0026#34;: \u0026#34;Secret Id\u0026#34;, \u0026#34;SecretKey\u0026#34;: \u0026#34;Secret Key\u0026#34;, \u0026#34;Bucket\u0026#34;: \u0026#34;xxxx-123456\u0026#34;, \u0026#34;Region\u0026#34;: \u0026#34;ap-chengdu\u0026#34; } } } 重启一下 ghost restart sudo systemctl restart ghost_yoursite-com # CentOS 要用这个 参考资料 https://github.com/ZhelinCheng/ghost-qcloud-cos\n","permalink":"https://weixiang.github.io/posts/ghost-blog-uses-tencent-cloud-cos-storage/","summary":"Ghost 博客部署系列第二期，使用腾讯云COS对象存储作为博客图床。","title":"Ghost 博客使用腾讯云COS对象存储"},{"content":" 本文 Ghost version: 4.32.1\nGhost 是一个年轻的博客系统，迭代速度之快使得互联网上许多相关的教程已经过时，特别是邮件配置方面。 经过多次尝试，终于得出了邮件系统的正确配置方法，在此记录。以网易域名邮箱为例：\n修改配置文件 编辑config.production.json，将mail修改为：\n\u0026#34;mail\u0026#34;: { \u0026#34;transport\u0026#34;: \u0026#34;SMTP\u0026#34;, \u0026#34;from\u0026#34;: \u0026#34;\u0026#39;Your Blog\u0026#39; \u0026lt;blog@yoursite.com\u0026gt;\u0026#34;, \u0026#34;options\u0026#34;: { \u0026#34;host\u0026#34;: \u0026#34;smtp.ym.163.com\u0026#34;, \u0026#34;port\u0026#34;: 994, \u0026#34;secureConnection\u0026#34;: true, \u0026#34;auth\u0026#34;: { \u0026#34;user\u0026#34;: \u0026#34;blog@yoursite.com\u0026#34;, \u0026#34;pass\u0026#34;: \u0026#34;yourpassword\u0026#34; } } }, 使用 Mailgun \u0026#34;mail\u0026#34;: { \u0026#34;transport\u0026#34;: \u0026#34;SMTP\u0026#34;, \u0026#34;options\u0026#34;: { \u0026#34;service\u0026#34;: \u0026#34;Mailgun\u0026#34;, \u0026#34;host\u0026#34;: \u0026#34;smtp.mailgun.org\u0026#34;, \u0026#34;port\u0026#34;: 587, \u0026#34;secure\u0026#34;: true, \u0026#34;auth\u0026#34;: { \u0026#34;user\u0026#34;: \u0026#34;postmaster@example.mailgun.org\u0026#34;, \u0026#34;pass\u0026#34;: \u0026#34;1234567890\u0026#34; } } }, 参考资料 https://ghost.org/docs/config/#mail\n","permalink":"https://weixiang.github.io/posts/configuring-ghost-blog-mail-settings/","summary":"本文以以网易域名邮箱和 Mailgun 为例，记录 Ghost 博客邮件系统的正确配置方法。","title":"Ghost 博客配置邮件系统"},{"content":"对于新版本的Ghost安装，可谓是全网谜语人，经过一上午的努力，终于在一堆垃圾站中，摸索出了可用的安装方法。\n创建用户 使用root新建用户\u0026lt;user\u0026gt;为用户名，-m为创建用户主目录\nuseradd \u0026lt;user\u0026gt; -m passwd \u0026lt;user\u0026gt; 输入\u0026lt;user\u0026gt;的密码，输入时不显示\nvisudo 找到，在下面加入新行，参照上一行的格式\n## Allow root to run any commands anywhere root ALL=(ALL) ALL \u0026lt;user\u0026gt; ALL=(ALL) ALL 安装 Node.JS 下载并执行脚本\nsudo yum -y install curl curl -sL https://rpm.nodesource.com/setup_14.x | sudo bash - 安装Node.js 14.x 和 npm\nsudo yum install -y nodejs 使用node -v查看安装是否成功\n$ node -v v14.0.0 安装 Yarn 包管理器（可选）\ncurl -sL https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo sudo yum install yarn 安装Ghost-CLI sudo npm install ghost-cli@latest -g 创建网站 在宝塔面板中创建一个静态网站，创建数据库，然后删除目录下所有文件。\n更改目录权限 更改所有者为新建的\u0026lt;user\u0026gt;\nsudo chown -R \u0026lt;user\u0026gt;:\u0026lt;user\u0026gt; /www/wwwroot/sitename.com/ 赋予775权限\nsudo chmod -R 775 /www/wwwroot/sitename.com/ 安装 Ghost 定位到网站目录后，执行\nghost install 按照提示填入信息即可。\n启动Ghost CentOS 环境下 Ghost 启动会报错，需要用以下命令启动。\nsudo systemctl start ghost_yoursite-com 设置 Nginx 反向代理 在宝塔面板中设置反向代理，编辑配置添加proxy_set_header X-Forwarded-Proto $scheme;\n故障排查 测试运行：ghost run 查看状态：ghost status 运行列表：ghost ls 修改配置：ghost setup 查看日志：ghost log\n参考资料 https://ghost.org/docs/install/ubuntu/ https://computingforgeeks.com/install-node-js-14-on-centos-rhel-linux/\n","permalink":"https://weixiang.github.io/posts/install-ghost-blog-with-aapanel-on-centos-7/","summary":"Ghost 官方只提供一个错漏百出的 Ubuntu 安装教程，那么如何在 CentOS 上安装呢？","title":"在 CentOS 7 使用宝塔面板安装 Ghost 博客"},{"content":"字体在设计中占有重要地位，我们要了解字体，明白不同场合应该用什么字体，才能做出令读者舒适的设计。我们设计时，首先要考虑到就是读者的感受，要让读者看得舒服，字体的选用十分关键。首先我们要知道字体的分类，无论是中文还是西文，字体都可以分为三类：衬线字体、无衬线字体、等宽字体。这三种字体有着不同的视觉风格，适用的场合也不太相同。我们生活中最常见的就是衬线字体和无衬线字体。衬线字体的代表是宋体，也就是我们在书本上看到的字体。你现在看到的这张图就是采用了衬线字体。最大的特征就是能看到笔锋，笔画有粗细变化（也就是所谓的“衬线”），用人话说就是类似于我们手写的效果，它能很好地体现文字之美，尤其适用于排版感性的文字，如文学类，适合纸质印刷。不过其缺点是在屏幕上显示效果不佳，笔画过细而难以辨认，如无特殊需要，不要用于屏幕显示的正文。比如 PPT 的主段落。无衬线字体的代表是黑体，也就是我们在手机、电脑上看到的默认字体。它的特点是笔画清晰、粗细均匀，没有多余的装饰部分（也就是“无衬线”的名字由来），辨识度极佳，非常适合屏幕显示，但比起衬线字体缺乏了文字的传统美感。我们做新媒体的内容时，考虑到读者都是使用屏幕来阅读我们的文字，我们通常也是采用无衬线字体来作为主字体的。 记住在屏幕上用系统自带的宋体是大忌。 无衬线字体更佳适用于理性的文字，比如科技文章等。等宽字体比起上两种比较少使用，等宽字体，顾名思义，它的笔画、字形大小都是绝对一致的，能让你很容易分清楚英文字母 O 和数字 0。\t常用于代码、密码、数学等内容。这个不太常用，大家知道了解就行。今天的 tips 似乎有点长，有八百字了，内容比较偏理论，可能比较难以理解，大家可以翻翻自己身边的书本，来对应找找上面提到的三种字体。如果你觉得这篇 tips 还不错的话，我的网站：weixiang.github.io，各位可以在里面找到一篇我早些时候写的字体应用研究文章。\n","permalink":"https://weixiang.github.io/posts/the-use-of-fonts-in-design/","summary":"字体在设计中占有重要地位，我们要了解字体，明白不同场合应该用什么字体，才能做出令读者舒适的设计。","title":"字体在设计中的运用"},{"content":"引子 需要为 Raspberry Pi 制作系统镜像 SD 卡，但电脑不在附近？这个美妙的 Android 应用可以胜任这份工作！更加美妙的是它不需要 Root！\n今天树莓派的系统不小心被我搞炸了，不知道如何修复，需要重装系统才能解决，但正巧没有电脑，于是便想能不能用手机来制作树莓派的系统镜像 SD 卡。\nGoogle 了一下还真行。\n由于还没有类似的中文教程，这里简单记录一下就作为「中文首发」吧。?\n下载 APP 在「Play 商店」或「APK Pure」中搜索「Pi SD Card Imager」 即可下载。\n传送门 → Pi SD Card Imager - Apps on Google Play\n下载系统镜像 打开 APP，默认会为你选择一个「boot」镜像。需要更改的话，点右上角「Choose OS」即可更换，我选择了「Raspberry Pi OS (32-bit)」。\n点击软件下方的「Download」即可开始下载。\n下载过程中尽量保持 APP 在前台运行。 非常神奇的是它下载并不需要魔法加持，而且速度还很快，甚至如果使用了魔法它还会变慢。\n连接 SD 卡 将需要烧录的 SD 卡连入手机。有 SD 卡槽的手机可以直接插入卡槽中，没有 SD 卡槽的手机可以使用「OTG+读卡器」的方案来连接 SD 卡。\n格式化 SD 卡 在 APP 右上角选择「Format SD」，在系统界面中格式化 SD 卡即可。\n开始烧写 回到 APP，右上角「Choose SD or USB」，接着在系统界面中授予 APP 访问 SD 卡的权限。\n我的树莓派没有屏幕也没有鼠标键盘，所以需要选择自动配置 SSH 和自动安装。勾选「Install opinions」中的两项即可。\n最后点击 APP 左下角的「Write to SD」即可开始烧写，期间要保持 APP 在前台，不要触碰 OTG 线。\n大功告成 等待进度条跑完，SD卡就烧写完毕了，此时在系统通知栏中选择「弹出」来安全移除SD卡，就能拔出SD卡插入到树莓派中了。树莓派会自动执行剩下的安装程序。\n","permalink":"https://weixiang.github.io/posts/use-android-device-to-make-a-raspberry-pi-image-sd-card/","summary":"需要为 Raspberry Pi 制作系统镜像 SD 卡，但电脑不在附近？这个美妙的 Android 应用可以胜任这份工作！更加美妙的是它不需要 Root！","title":"使用 Android 手机制作树莓派镜像 SD 卡"},{"content":"引子 Prism 是一个轻量级的、可扩展的语法高亮工具，在构建时考虑到了现代 Web 标准。它被用于数百万个网站，包括您每天访问的一些网站。\n技术博客怎么少得了代码呢？为了保护读者的眼睛，代码高亮是必不可少的，但 Ghost 博客并没有自带的代码高亮功能。不过我们可以用 Prism.js 手动添加这个功能。Ghost 官方也给出了对应的指引：Tutorial: A complete guide to code samples in Ghost\n在本指南中，我将展示如何将代码示例添加到您的 Ghost 站点，以及如何使用代码语法高亮显示对其进行自定义。\n引入 Prism.js 在「Code injection」的「Site Header」中添加 Prism.js 的样式表：\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/themes/prism-tomorrow.min.css\u0026#34; /\u0026gt; 在「Site Footer」中添加 Prism.js 的脚本：\n\u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/prism.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; 至此代码高亮已经可用。\n添加自己常用的语言 2022年1月16日更新\nPrism.js 默认配置仅包含 Markup + HTML + XML + SVG + MathML + SSML + Atom + RSS 这几种语言的高亮规则，如果你常用的语言不在内，则需要自己手动添加。\n在 https://cdnjs.com/libraries/prism 搜索自己需要的语言，添加进 Site Footer 中 prism.min.js 的后面即可。\n我添加了 Bash 和 json 的支持。\n\u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/prism/1.26.0/components/prism-bash.min.js\u0026#34; integrity=\u0026#34;sha512-ZqfG//sXQwAA7DOArFJyMmZQ3knKe+0ft3tPQZPvDPJR04IatmhVO5pTazVV+fLVDYSy28PhoBeUj5wxGRiGAA==\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; referrerpolicy=\u0026#34;no-referrer\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/prism/1.26.0/components/prism-json.min.js\u0026#34; integrity=\u0026#34;sha512-QXFMVAusM85vUYDaNgcYeU3rzSlc+bTV4JvkfJhjxSHlQEo+ig53BtnGkvFTiNJh8D+wv6uWAQ2vJaVmxe8d3w==\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; referrerpolicy=\u0026#34;no-referrer\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; 进阶配置 默认的主题有点丑，来改造一下。\n就像 Ghost 主题的其余部分一样，代码块可以使用标准 CSS 和 JavaScript 进行完全自定义。\nPrism.js 库附带了一个广泛的主题和插件列表，以进一步自定义您的代码示例的外观。\n更换主题 更改为 Tomorrow Night 主题，其余主题可以在Prism.js 官网找到：\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/themes/prism-tomorrow.min.css\u0026#34; /\u0026gt; 自建主题 从 Ghost 官网抄来的，我觉得比 Tomorrow Night 主题好看，目前本站用的就是这个。 在「Site Header」中添加样式：\n\u0026lt;style\u0026gt; pre[class*=language-] { background: #202328; border-radius: 8px; color: #fff; font-size: 1.3rem; line-height: 1.8em; max-width: 100%; overflow: auto; padding: 2.4rem 3.2rem; width: 100%; } \u0026lt;/style\u0026gt; 复制按钮 在「Site Header」中添加工具栏：\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/plugins/toolbar/prism-toolbar.min.css\u0026#34; /\u0026gt; 在「Site Footer」中添加工具栏和复制组件：\n\u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/plugins/toolbar/prism-toolbar.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/plugins/copy-to-clipboard/prism-copy-to-clipboard.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; 显示行号 在「Code injection」的「Site Footer」中添加：\n\u0026lt;script\u0026gt; window.addEventListener(\u0026#39;DOMContentLoaded\u0026#39;, (event) =\u0026gt; { document.querySelectorAll(\u0026#39;pre[class*=language-]\u0026#39;).forEach(function (node) { node.classList.add(\u0026#39;line-numbers\u0026#39;); }); Prism.highlightAll(); }); \u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/plugins/line-numbers/prism-line-numbers.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; 行内代码样式更改 2022年1月16日更新\n这个东西就是行内代码.\nCasper 自带的行内代码样式不太好看，换掉。\n从语雀那里抄来的：\n\u0026lt;style\u0026gt; .gh-content :not(pre)\u0026gt;code { display: inline-block; font-family: var(--font-mono); background-color: #F5F5F5; border-radius: 4px; border: 1px solid #F0F0F0; padding: 0 6px; margin: 1px 6px; line-height: 1.1; color: #096DD9; } \u0026lt;/style\u0026gt; 后记 正如上文所说， Prism.js 还有很多各式各样花里胡哨的功能，感兴趣的可以研究下 Prism.js 官网 的内容。\n参考文献 Prism.js - Prism.js\nTutorial: A complete guide to code samples in Ghost - Ghost\n","permalink":"https://weixiang.github.io/posts/use-prism-js-to-add-code-highlighting-to-ghost-blog/","summary":"技术博客怎么少得了代码呢？为了保护读者的眼睛，代码高亮是必不可少的，但 Ghost 博客并没有自带的代码高亮功能。不过我们可以用 Prism.js 手动添加这个功能。","title":"用 Prism.js 为 Ghost 博客添加代码高亮"},{"content":"引子 接上篇 中文网页中的字体选型及开发指南 ，我们已经知道了中文网页设计的字体理论及原理，现在是时候应用于实践了！\n字体定义 Ghost 博客中，以 「Casper」 主题为例，把全局字体进行了三个变量定义，分别对应 「衬线字体」、「非衬线字体」和「等宽字体」，我们只需要在「Code injection」设置中，重新定义它们就能实现全局更改字体的效果了。\n在「Site Header」中添加以下代码：\n\u0026lt;style\u0026gt; :root { --font-sans-serif: -apple-system, BlinkMacSystemFont, \u0026#34;Segoe UI\u0026#34;, \u0026#34;PingFang SC\u0026#34;, \u0026#34;Hiragino Sans GB\u0026#34;, \u0026#34;Microsoft YaHei\u0026#34;, \u0026#34;Helvetica Neue\u0026#34;, Helvetica, Arial, sans-serif, \u0026#34;Apple Color Emoji\u0026#34;, \u0026#34;Segoe UI Emoji\u0026#34;, \u0026#34;Segoe UI Symbol\u0026#34;; --font-serif: Georgia, STZhongsong, \u0026#34;Times New Roman\u0026#34;, Times, PMingLiu, STSong, SimSun, \u0026#34;WenQuanYi Bitmap Song\u0026#34;, \u0026#34;Noto Serif CJK\u0026#34;, serif, \u0026#34;Apple Color Emoji\u0026#34;, \u0026#34;Segoe UI Emoji\u0026#34;, \u0026#34;Segoe UI Symbol\u0026#34;; --font-mono: JetBrainsMono, \u0026#34;Source Code Pro\u0026#34;, Monaco, Menlo, Consolas, \u0026#34;Courier New\u0026#34;, Courier, monospace; } \u0026lt;/style\u0026gt; 代码中的三个变量分别对应的就是「无衬线字体」、「衬线字体」和「等宽字体」，可以参考上一篇文章，根据自己的喜好进行更改。\n对于无衬线字体，我选择用「Segoe UI」作为优先，保障 Windows 用户的体验，这款字体也是 Microsoft 的御用品牌字体。其次用「PingFang SC」苹方，确保 Apple 用户的体验。最后用「\u0026ldquo;Apple Color Emoji\u0026rdquo;, \u0026ldquo;Segoe UI Emoji\u0026rdquo;, \u0026ldquo;Segoe UI Symbol\u0026rdquo;」三个特殊字体加入对 Emoji 和特殊符号的支持。这里是学习了 GitHub 的做法。如果你想把所有特殊符号都渲染为 Emoji，可以学习简书的做法，把这一堆字体提到最前。\n至于衬线字体，我保留了 Ghost 原装的 Georgia 字体，这款英文衬线字体确实很漂亮。然后我使用了我个人比较喜欢的「STZhongsong」华文中宋，这款字体党政风满满，听说是党政专用标题字体。最后依然加入了对 Emoji 和特殊符号的支持。\n最后是代码中使用的等宽字体，用的是「JetBrainsMono, \u0026ldquo;Source Code Pro\u0026rdquo;」，这两款也是我用的最多的代码编辑器字体。当然了，考虑到普通用户的设备上大概率不会安装这种字体，建议再加一行：\n\u0026lt;style\u0026gt; @import url(\u0026#39;https://fonts.googleapis.com/css?family=Source+Code+Pro\u0026amp;display=swap\u0026#39;); \u0026lt;/style\u0026gt; 使用 Web Font 来渲染等宽字体，保障显示准确。\n设置正文字体 我的博客主要以技术类的文章为主，所以我想用「非衬线字体」作为我的正文字体。「Casper」主题默认的正文字体是「衬线字体」而且对于中文来说字体偏大了。\n我们可以通过重新定义 Body 和文章部分的字体来更改正文字体。\n\u0026lt;style\u0026gt; body { font-family: -apple-system, BlinkMacSystemFont, \u0026#34;Segoe UI\u0026#34;, \u0026#34;PingFang SC\u0026#34;, \u0026#34;Hiragino Sans GB\u0026#34;, \u0026#34;Microsoft YaHei\u0026#34;, \u0026#34;Helvetica Neue\u0026#34;, Helvetica, Arial, sans-serif, \u0026#34;Apple Color Emoji\u0026#34;, \u0026#34;Segoe UI Emoji\u0026#34;, \u0026#34;Segoe UI Symbol\u0026#34;; font-size: 16px; } .gh-content\u0026gt;blockquote, .gh-content\u0026gt;ol, .gh-content\u0026gt;ul, .gh-content\u0026gt;dl, .gh-content\u0026gt;p { font-family: var(--font-sans-serif); font-size: 16px; line-height: 1.8; } \u0026lt;/style\u0026gt; 这里把正文字体设置为了无衬线字体，并且把字体大小调整为 16px，行间距为 1.8。\n参考文献 中文网页中的字体选型及开发指南 - Jacob\u0026rsquo;s Thoughts\n","permalink":"https://weixiang.github.io/posts/change-font-for-ghost-blog/","summary":"引子 接上篇 中文网页中的字体选型及开发指南 ，我们已经知道了中文网页设计的字体理论及原理，现在是时候应用于实践了！ 字体定义 Ghost 博客中，以 「Casp","title":"给 Ghost 博客更换字体"},{"content":"引子 趁着暑假，我又搭建了一个自己的个人博客，不同于以往，这次用的是较新的博客系统 Ghost。\n因为 Ghost 的主题和 UI 实在是太好看了。\n而且易用性也很好，比起臃肿的 WordPress 和 折腾人的 Hexo ，Ghost 正中我意。\n不过作为一个年轻的、国外开发者主导的博客系统，它似乎还没有考虑到中文显示这种东西。\nWindows 平台下，Ghost 的中文默认显示为宋体，实在是辣眼睛。\n于是就有了这次的探索，中文网页设计中，特别是文字较多的博客类，用那种字体更为合适呢？\n例子 先来看看大公司网站所用的字体：\n知乎 body { font-family: -apple-system,BlinkMacSystemFont,Helvetica Neue,PingFang SC,Microsoft YaHei,Source Han Sans SC,Noto Sans CJK SC,WenQuanYi Micro Hei,sans-serif; font-size: 15px; color: #121212; } 简书 body { line-height: 1.42857; color: #404040; background-color: #fff; font-family: -apple-system,BlinkMacSystemFont,\u0026#34;Apple Color Emoji\u0026#34;,\u0026#34;Segoe UI Emoji\u0026#34;,\u0026#34;Segoe UI Symbol\u0026#34;,\u0026#34;Segoe UI\u0026#34;,\u0026#34;PingFang SC\u0026#34;,\u0026#34;Hiragino Sans GB\u0026#34;,\u0026#34;Microsoft YaHei\u0026#34;,\u0026#34;Helvetica Neue\u0026#34;,Helvetica,Arial,sans-serif; font-feature-settings: \u0026#34;tnum\u0026#34;; font-variant: tabular-nums; } GitHub body { font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji; font-size: 14px; line-height: 1.5; } code { margin-top: 0; margin-bottom: 0; font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace; font-size: 12px; } 苹果 body { font-size: 17px; line-height: 1.5294717647; font-weight: 400; letter-spacing: -0.021em; font-family: \u0026#34;SF Pro Text\u0026#34;,\u0026#34;SF Pro Icons\u0026#34;,\u0026#34;Helvetica Neue\u0026#34;,\u0026#34;Helvetica\u0026#34;,\u0026#34;Arial\u0026#34;,sans-serif; background-color: white; color: #333; font-style: normal; } 小米 body { font: 14px/1.5 Helvetica Neue,Helvetica,Arial,Microsoft Yahei,Hiragino Sans GB,Heiti SC,WenQuanYi Micro Hei,sans-serif; color: #333; background-color: #fff; min-width: 1226px; } 哔哩哔哩 2022年1月17日更新\n/* 新版首页 */ body { font-family: PingFang SC,HarmonyOS_Regular,Helvetica Neue,Microsoft YaHei,sans-serif!important; font-weight: 400; overflow-x: auto; } /* 旧版 */ body { margin: 0; font-family: -apple-system,BlinkMacSystemFont,Helvetica Neue,Helvetica,Arial,PingFang SC,Hiragino Sans GB,Microsoft YaHei,sans-serif; font-size: 12px; line-height: 1.5; color: #222; background-color: #fff; } 锤子 html { font-family: Helvetica Neue,PingFang SC,Hiragino Sans GB,Heiti SC,Microsoft YaHei,WenQuanYi Micro Hei,sans-serif; } 字体的分类 非衬线字体（Sans-Serif） 非衬线字体适用于屏幕显示，代表字体是黑体。可以用在较理性的技术类文章。\n衬线字体（Serif） 衬线字体适用于印刷出版，代表字体是宋体。可以用在较感性的生活随笔类文章中。\n等宽字体（Monospace） 等宽字体的每个字符具有相同的宽度，这使得英文字符和标点总是工整地排列，这些字体还专门为一些字母和符号做了优化，让你一眼就可以区别出 O0 / 1ilIL，代表字体 Source Code Pro 。\n例如这一段就是等宽字体 Source Code Pro 的效果 \u0026lt;link href=\u0026#34;https://fonts.googleapis.com/css?family=Source+Code+Pro\u0026amp;display=swap\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt; 常见的字体 2022年1月17日更新\n等线字体 Sans-serif 字体 用途 system-ui 默认系统字体 -apple-system, BlinkMacSystemFont macOS, iOS Segoe UI Microsoft Windows, Xbox, etc. Roboto 较新版本的 Android Oxygen Linux / KDE Ubuntu Linux / Ubuntu Cantarell Linux / GNOME 3 Fira Sans Firefox OS Droid Sans 旧版本的 Android Helvetica Neue OSX Arial, sans-serif 备胎 Helvetica ：被评为设计师最爱的字体，Realist风格，简洁现代的线条，非常受到追捧。在Mac下面被认为是最佳的网页字体，在Windows下由于Hinting的原因显示很糟糕。 Arial ：Helvetica的「克隆」，和Helvetica非常像，细节上比如R和G有小小差别。如果字号太小，文字太多，看起来会有些累眼。Win和Mac显示都正常 Lucida Family ：Lucida Grande是Mac OS UI的标准字体，属于humanist风格，稍微活泼一点。Mac下的显示要比Win下好。 Verdana ：专门为了屏显而设计的字体，humanist风格，在小字号下仍可以清楚显示，但是字体细节缺失严重，最好别做标题。 Tahoma ：也是humanist风格，字体和Verdana有点像，但是略窄一些，counter略小，曾经是Windows的标准字体，Mac 10.5之后默认也有安装。 Trebuchet MS: 为微软设计的一个humanist风格字体，个人觉得个性太过突出，用得不好会不搭。\n微软雅黑（Microsoft YaHei） ：Vista之后新引入的字体，打开Cleartype之后显示效果不错，不开Cleartype发虚。微软雅黑的美观度和清晰度都较好，可以作为网页的首选字体。它在Mac平台的对应字体是华文细黑（STXihei）。\n华文细黑 ：Mac下的默认中文。\nDroid Sans和衍生的WenQuanYi Microhei ：Andriod中的中文，也是Linux绝大多数发行版本的默认中文，，当然也有用WenQuanyi Zenhei的，不过比较少了。\n衬线字体 Serif Georgia ：基本上适合正文屏显的衬线字体，非Georgia莫属了。笔画粗重，衬线明线，轮廓较大，小字体显示也很清晰，同时细节还算OK。 Times ：Times是为了报纸而设计的，特点是可以在有限的空间塞进去更多的文字，笔画较弱，小字号正文屏显看起来累眼。曾经Engadget改版的时候用了Times作为正文，被骂得很惨之后换成了Georgia。\n中易宋体（SimSun） ：Win最常见的字体，小字体点阵，大字体TrueType，但是大字体并不好看，所以最好别做标题。宋体是最常见的中文字体，如果没有指定字体，操作系统往往选择它来渲染。很多人认为，这种字体并不美观。\n仿宋（FangSong） ：这种字体是衬线体，比宋体的装饰性更强。如果字号太小，会影响清晰度，所以只有在字号大于14px的情况下，才可以考虑这种字体。它在Mac平台的对应字体是\u0026quot;华文仿宋\u0026quot;（STFangsong）。 楷体（KaiTi） ：楷体也是衬线体，装饰性与仿宋体接近，但是宽度更大，笔画更清楚一些。这种字体也不应该在小于14px的情况下使用。它在Mac平台的对应字体是\u0026quot;华文楷体\u0026quot;（STKaiti）。\n等宽字体 Monospace ui-monospace：较新的等宽字体声明形式，已在 Safari 13.19 中得到支持。这也是使用 macOS 新的“SF Mono”字体的唯一方法。\nMenlo, Monaco：旧版本 macOS / OSX 的默认等宽字体，在支持 .ui-monospace 的 macOS 上不再生效。\nCascadia Code, Segoe UI Mono：Windows 自家的等宽字体，但默认不包含在 Windows 中 ，因为 Windows 根本没有默认的等宽字体（除非算上Courier New）。 但是Segue UI Mono已随一些微软自家的软件一起分发，正在普及中。\nCascadia Mono：是微软正在开发的一种新的等宽字体，随 Windows Terminal 一起提供。\nSource Code Pro：知名的等宽字体，GNOME12 中的默认字体，但来自不同的家族，作为默认的可变宽度字体Cantarell。\n操作系统的预装字体 操作系统决定了开发者可以使用的字体。所以，第一步，我们必须了解操作系统到底提供哪些字体。\n可以通过查询各维基百科的这个页面，列出了常见的不同系统自带的日中韩字体：List Of CJK fonts。\nWindows 宋体：SimSun 新宋体：NSimSun 仿宋：FangSong 楷体：KaiTi 仿宋GB2312：FangSongGB2312 楷体GB2312：KaiTiGB2312 Windows XP+: MS Hei 微软黑体 Windows Vista+: Microsoft YaHei 微软雅黑 macOS / iOS / iPadOS 详见苹果官网的 macOS Mojave 附带的字体。\n华文细黑：STHeiti Light （又名STXihei） 华文楷体：STKaiti 华文宋体：STSong 华文仿宋：STFangsong OSX 10.2+: 华文黑体 STHeiti OSX 10.6+: 黑体-简 Heiti SC / 黑体-繁 Heiti TC OSX 10.6+: 冬青黑体简体中文 Hiragino Sans GB OSX 10.11+: 苹方-简 PingFang SC / 苹方-繁 PingFang TC iOS / iPadOS 使用与 macOS 相同的中文字体。详见苹果官网的 字体列表。\n但是要注意的是，iOS / iPadOS 系统并不预装 CJK 衬线字体。所以几乎所有的中文网页在 iOS / iPadOS 都是显示为非衬线字体。原因正是前文所说的，黑体在屏幕上的可读性比宋体要高。\nLinux Open Source*: WenQuanYi Zen Hei 文泉驿正黑 Open Source*: WenQuanYi Micro Hei 文泉驿微米黑 Open Source*: Noto Sans CJK / Source Han Sans Linux 由于发行版众多，比较混乱，一般需要用户自行安装中文字体，常见的有文泉驿、思源等开源字体。\nAndroid 目前使用 Adobe 和 Google 联合开发的思源系列 Source * 字体，不过在 Android 中叫做 Noto *。\nMicrosoft Office 如果用户装了 Microsoft Office ，还会多出一些字体。\n隶书：LiSu 幼圆：YouYuan 华文细黑：STXihei 华文楷体：STKaiti 华文宋体：STSong 华文中宋：STZhongsong 华文仿宋：STFangsong 方正舒体：FZShuTi 方正姚体：FZYaoti 华文彩云：STCaiyun 华文琥珀：STHupo 华文隶书：STLiti 华文行楷：STXingkai 华文新魏：STXinwei 字体的使用 系统字体 CSS 的 font-family 命令，指定了网页元素所使用的字体。下面是一个例子。\nfont-family: Georgia, \u0026#34;Times New Roman\u0026#34;, \u0026#34;Microsoft YaHei\u0026#34;, \u0026#34;微软雅黑\u0026#34;, STXihei, \u0026#34;华文细黑\u0026#34;, serif; 它的规则有三条。\n（1）优先使用排在前面的字体。\n（2）如果找不到该种字体，或者该种字体不包括所要渲染的文字，则使用下一种字体。\n（3）如果所列出的字体，都无法满足需要，则让操作系统自行决定使用哪种字体。\n根据这些规则，font-family 应该优先指定英文字体，然后再指定中文字体。 否则，中文字体所包含的英文字母，会取代英文字体，这往往很丑陋。\n为了保证兼容性，中文字体的中文名称和英文名称，应该都写入font-family。 比如，\u0026ldquo;微软雅黑\u0026quot;的英文名称是Microsoft YaHei。\nfont-family后面的值最好全部写英文，中文的话在 macOS 下某些版本的浏览器是不支持的，认不出来，还有比\u0026quot;Microsoft YaHei\u0026quot;这种英文写法，更推荐的写法是把汉字转义为 unicode,比如微软雅黑转义之后就是\u0026quot;\\5FAE\\8F6F\\96C5\\9ED1\u0026quot;，这样能兼容更多平台和各种不同语言的浏览器，兼容性最好。\n此外，中文字体的中文名称，以及由多个单词组成的英文名称，应该放在双引号内。\n由于 Windows 和 Mac 的中文字体没有交叉，所以应该同时为两个平台指定字体。\n常见的做法是，Windows平台指定\u0026quot;微软雅黑\u0026rdquo;（Microsoft YaHei），Mac平台指定\u0026quot;华文细黑\u0026quot;（STXihei）。\nWeb Fonts 如果是纯英文网页的话，选字体的事情比较好办，因为直接引入 Web Fonts 的成本非常低（文件小），而且现在 Web Fonts 的 [兼容性](\u0026ldquo;https://caniuse.com/#search=web font\u0026rdquo;) 很好，基本上所有主流浏览器都支持，就能保证各个平台所用的字体的一致性。\n对于开源字体，如果能在 Google Fonts 直接找到的话，可以通过他们的 CDN 直接引用到页面上。例如 Source Code Pro：\n\u0026lt;link href=\u0026#34;https://fonts.googleapis.com/css?family=Source+Code+Pro\u0026amp;display=swap\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt; 或者\n\u0026lt;style\u0026gt; @import url(\u0026#39;https://fonts.googleapis.com/css?family=Source+Code+Pro\u0026amp;display=swap\u0026#39;); \u0026lt;/style\u0026gt; 如果找不到免费的 CDN 的话，也可以下载字体文件部署到自己的服务器上。\n然后在 style.css 中加入兼容各个浏览器的 @font-face 定义:\n@font-face { font-family: \u0026#34;JetBrains Mono\u0026#34;; src: url(\u0026#34;./fonts/JetBrainsMono-Regular.eot\u0026#34;); src: url(\u0026#34;./fonts/JetBrainsMono-Regular.eot?#iefix\u0026#34;) format(\u0026#34;embedded-opentype\u0026#34;), url(\u0026#34;./fonts/JetBrainsMono-Regular.woff2\u0026#34;) format(\u0026#34;woff2\u0026#34;), url(\u0026#34;./fonts/JetBrainsMono-Regular.woff\u0026#34;) format(\u0026#34;woff\u0026#34;), url(\u0026#34;./fonts/JetBrainsMono-Regular.ttf\u0026#34;) format(\u0026#34;truetype\u0026#34;); font-weight: 400; font-style: normal; } 之后便可以在 CSS 中使用该字体：\n.code { font-family: \u0026#34;JetBrains Mono\u0026#34;, monospace; } 这样浏览器就会下载自己能使用的字体文件进行文字渲染了。\n总结成果 你现在所看到的这个页面的字体\n:root { --font-sans-serif: -apple-system, BlinkMacSystemFont, \u0026#34;Apple Color Emoji\u0026#34;, \u0026#34;Segoe UI Emoji\u0026#34;, \u0026#34;Segoe UI Symbol\u0026#34;, \u0026#34;Segoe UI\u0026#34;, \u0026#34;PingFang SC\u0026#34;, HarmonyOS_Regular, \u0026#34;Hiragino Sans GB\u0026#34;, \u0026#34;Microsoft YaHei\u0026#34;, \u0026#34;Helvetica Neue\u0026#34;, Helvetica, \u0026#34;Source Han Sans SC\u0026#34;, \u0026#34;Noto Sans CJK SC\u0026#34;, \u0026#34;WenQuanYi Micro Hei\u0026#34;, Arial, sans-serif; --font-serif: STZhongsong, STSong, \u0026#34;Noto Serif CJK\u0026#34;, \u0026#34;Noto Serif SC\u0026#34;, PMingLiu, SimSun, \u0026#34;WenQuanYi Bitmap Song\u0026#34;, \u0026#34;Times New Roman\u0026#34;, Times, serif, \u0026#34;Apple Color Emoji\u0026#34;, \u0026#34;Segoe UI Emoji\u0026#34;, \u0026#34;Segoe UI Symbol\u0026#34;; --font-mono: ui-monospace, SFMono-Regular, \u0026#34;SF Mono\u0026#34;, \u0026#34;Cascadia Code\u0026#34;, \u0026#34;Segoe UI Mono\u0026#34;, \u0026#34;Source Code Pro\u0026#34;, Menlo, Consolas, \u0026#34;Liberation Mono\u0026#34;, monospace; } 参考文献 木匣子 “中文博客的字体选型\u0026quot; 菜鸟教程 \u0026ldquo;常用网页字体\u0026rdquo; 阮一峰的网络日志 \u0026ldquo;中文字体网页开发指南\u0026rdquo; https://qwtel.com/posts/software/the-monospaced-system-ui-css-font-stack/\n版权声明 本文由 Jacob 采用 知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议 进行许可，首发于 weixiang.github.io 。\n","permalink":"https://weixiang.github.io/posts/the-font-selection-and-development-guide-in-chinese-web-pages/","summary":"探索中文网页设计中，特别是文字较多的博客类，用那种字体更为合适呢？","title":"中文网页中的字体选型及开发指南"},{"content":"同志们，朋友们：\n今天，在中国共产党历史上，在中华民族历史上，都是一个十分重大而庄严的日子。我们在这里隆重集会，同全党全国各族人民一道，庆祝中国共产党成立一百周年，回顾中国共产党百年奋斗的光辉历程，展望中华民族伟大复兴的光明前景。\n首先，我代表党中央，向全体中国共产党员致以节日的热烈祝贺！\n在这里，我代表党和人民庄严宣告，经过全党全国各族人民持续奋斗，我们实现了第一个百年奋斗目标，在中华大地上全面建成了小康社会，历史性地解决了绝对贫困问题，正在意气风发向着全面建成社会主义现代化强国的第二个百年奋斗目标迈进。这是中华民族的伟大光荣！这是中国人民的伟大光荣！这是中国共产党的伟大光荣！\n同志们、朋友们！\n中华民族是世界上伟大的民族，有着5000多年源远流长的文明历史，为人类文明进步作出了不可磨灭的贡献。1840年鸦片战争以后，中国逐步成为半殖民地半封建社会，国家蒙辱、人民蒙难、文明蒙尘，中华民族遭受了前所未有的劫难。从那时起，实现中华民族伟大复兴，就成为中国人民和中华民族最伟大的梦想。\n为了拯救民族危亡，中国人民奋起反抗，仁人志士奔走呐喊，太平天国运动、戊戌变法、义和团运动、辛亥革命接连而起，各种救国方案轮番出台，但都以失败而告终。中国迫切需要新的思想引领救亡运动，迫切需要新的组织凝聚革命力量。\n十月革命一声炮响，给中国送来了马克思列宁主义。在中国人民和中华民族的伟大觉醒中，在马克思列宁主义同中国工人运动的紧密结合中，中国共产党应运而生。中国产生了共产党，这是开天辟地的大事变，深刻改变了近代以后中华民族发展的方向和进程，深刻改变了中国人民和中华民族的前途和命运，深刻改变了世界发展的趋势和格局。\n中国共产党一经诞生，就把为中国人民谋幸福、为中华民族谋复兴确立为自己的初心使命。一百年来，中国共产党团结带领中国人民进行的一切奋斗、一切牺牲、一切创造，归结起来就是一个主题：实现中华民族伟大复兴。\n——为了实现中华民族伟大复兴，中国共产党团结带领中国人民，浴血奋战、百折不挠，创造了新民主主义革命的伟大成就。我们经过北伐战争、土地革命战争、抗日战争、解放战争，以武装的革命反对武装的反革命，推翻帝国主义、封建主义、官僚资本主义三座大山，建立了人民当家作主的中华人民共和国，实现了民族独立、人民解放。新民主主义革命的胜利，彻底结束了旧中国半殖民地半封建社会的历史，彻底结束了旧中国一盘散沙的局面，彻底废除了列强强加给中国的不平等条约和帝国主义在中国的一切特权，为实现中华民族伟大复兴创造了根本社会条件。中国共产党和中国人民以英勇顽强的奋斗向世界庄严宣告，中国人民站起来了，中华民族任人宰割、饱受欺凌的时代一去不复返了！\n——为了实现中华民族伟大复兴，中国共产党团结带领中国人民，自力更生、发愤图强，创造了社会主义革命和建设的伟大成就。我们进行社会主义革命，消灭在中国延续几千年的封建剥削压迫制度，确立社会主义基本制度，推进社会主义建设，战胜帝国主义、霸权主义的颠覆破坏和武装挑衅，实现了中华民族有史以来最为广泛而深刻的社会变革，实现了一穷二白、人口众多的东方大国大步迈进社会主义社会的伟大飞跃，为实现中华民族伟大复兴奠定了根本政治前提和制度基础。中国共产党和中国人民以英勇顽强的奋斗向世界庄严宣告，中国人民不但善于破坏一个旧世界、也善于建设一个新世界，只有社会主义才能救中国，只有社会主义才能发展中国！\n——为了实现中华民族伟大复兴，中国共产党团结带领中国人民，解放思想、锐意进取，创造了改革开放和社会主义现代化建设的伟大成就。我们实现新中国成立以来党的历史上具有深远意义的伟大转折，确立党在社会主义初级阶段的基本路线，坚定不移推进改革开放，战胜来自各方面的风险挑战，开创、坚持、捍卫、发展中国特色社会主义，实现了从高度集中的计划经济体制到充满活力的社会主义市场经济体制、从封闭半封闭到全方位开放的历史性转变，实现了从生产力相对落后的状况到经济总量跃居世界第二的历史性突破，实现了人民生活从温饱不足到总体小康、奔向全面小康的历史性跨越，为实现中华民族伟大复兴提供了充满新的活力的体制保证和快速发展的物质条件。中国共产党和中国人民以英勇顽强的奋斗向世界庄严宣告，改革开放是决定当代中国前途命运的关键一招，中国大踏步赶上了时代！\n——为了实现中华民族伟大复兴，中国共产党团结带领中国人民，自信自强、守正创新，统揽伟大斗争、伟大工程、伟大事业、伟大梦想，创造了新时代中国特色社会主义的伟大成就。党的十八大以来，中国特色社会主义进入新时代，我们坚持和加强党的全面领导，统筹推进“五位一体”总体布局、协调推进“四个全面”战略布局，坚持和完善中国特色社会主义制度、推进国家治理体系和治理能力现代化，坚持依规治党、形成比较完善的党内法规体系，战胜一系列重大风险挑战，实现第一个百年奋斗目标，明确实现第二个百年奋斗目标的战略安排，党和国家事业取得历史性成就、发生历史性变革，为实现中华民族伟大复兴提供了更为完善的制度保证、更为坚实的物质基础、更为主动的精神力量。中国共产党和中国人民以英勇顽强的奋斗向世界庄严宣告，中华民族迎来了从站起来、富起来到强起来的伟大飞跃，实现中华民族伟大复兴进入了不可逆转的历史进程！\n一百年来，中国共产党团结带领中国人民，以“为有牺牲多壮志，敢教日月换新天”的大无畏气概，书写了中华民族几千年历史上最恢宏的史诗。这一百年来开辟的伟大道路、创造的伟大事业、取得的伟大成就，必将载入中华民族发展史册、人类文明发展史册！\n同志们、朋友们！\n一百年前，中国共产党的先驱们创建了中国共产党，形成了坚持真理、坚守理想，践行初心、担当使命，不怕牺牲、英勇斗争，对党忠诚、不负人民的伟大建党精神，这是中国共产党的精神之源。\n一百年来，中国共产党弘扬伟大建党精神，在长期奋斗中构建起中国共产党人的精神谱系，锤炼出鲜明的政治品格。历史川流不息，精神代代相传。我们要继续弘扬光荣传统、赓续红色血脉，永远把伟大建党精神继承下去、发扬光大！\n同志们、朋友们！\n一百年来，我们取得的一切成就，是中国共产党人、中国人民、中华民族团结奋斗的结果。以毛泽东同志、邓小平同志、江泽民同志、胡锦涛同志为主要代表的中国共产党人，为中华民族伟大复兴建立了彪炳史册的伟大功勋！我们向他们表示崇高的敬意！\n此时此刻，我们深切怀念为中国革命、建设、改革，为中国共产党建立、巩固、发展作出重大贡献的毛泽东、周恩来、刘少奇、朱德、邓小平、陈云同志等老一辈革命家，深切怀念为建立、捍卫、建设新中国英勇牺牲的革命先烈，深切怀念为改革开放和社会主义现代化建设英勇献身的革命烈士，深切怀念近代以来为民族独立和人民解放顽强奋斗的所有仁人志士。他们为祖国和民族建立的丰功伟绩永载史册！他们的崇高精神永远铭记在人民心中！\n人民是历史的创造者，是真正的英雄。我代表党中央，向全国广大工人、农民、知识分子，向各民主党派和无党派人士、各人民团体、各界爱国人士，向人民解放军指战员、武警部队官兵、公安干警和消防救援队伍指战员，向全体社会主义劳动者，向统一战线广大成员，致以崇高的敬意！向香港特别行政区同胞、澳门特别行政区同胞和台湾同胞以及广大侨胞，致以诚挚的问候！向一切同中国人民友好相处，关心和支持中国革命、建设、改革事业的各国人民和朋友，致以衷心的谢意！\n同志们、朋友们！\n初心易得，始终难守。以史为鉴，可以知兴替。我们要用历史映照现实、远观未来，从中国共产党的百年奋斗中看清楚过去我们为什么能够成功、弄明白未来我们怎样才能继续成功，从而在新的征程上更加坚定、更加自觉地牢记初心使命、开创美好未来。\n——以史为鉴、开创未来，必须坚持中国共产党坚强领导。办好中国的事情，关键在党。中华民族近代以来180多年的历史、中国共产党成立以来100年的历史、中华人民共和国成立以来70多年的历史都充分证明，没有中国共产党，就没有新中国，就没有中华民族伟大复兴。历史和人民选择了中国共产党。中国共产党领导是中国特色社会主义最本质的特征，是中国特色社会主义制度的最大优势，是党和国家的根本所在、命脉所在，是全国各族人民的利益所系、命运所系。\n新的征程上，我们必须坚持党的全面领导，不断完善党的领导，增强“四个意识”、坚定“四个自信”、做到“两个维护”，牢记“国之大者”，不断提高党科学执政、民主执政、依法执政水平，充分发挥党总揽全局、协调各方的领导核心作用！\n——以史为鉴、开创未来，必须团结带领中国人民不断为美好生活而奋斗。江山就是人民、人民就是江山，打江山、守江山，守的是人民的心。中国共产党根基在人民、血脉在人民、力量在人民。中国共产党始终代表最广大人民根本利益，与人民休戚与共、生死相依，没有任何自己特殊的利益，从来不代表任何利益集团、任何权势团体、任何特权阶层的利益。任何想把中国共产党同中国人民分割开来、对立起来的企图，都是绝不会得逞的！9500多万中国共产党人不答应！14亿多中国人民也不答应！\n新的征程上，我们必须紧紧依靠人民创造历史，坚持全心全意为人民服务的根本宗旨，站稳人民立场，贯彻党的群众路线，尊重人民首创精神，践行以人民为中心的发展思想，发展全过程人民民主，维护社会公平正义，着力解决发展不平衡不充分问题和人民群众急难愁盼问题，推动人的全面发展、全体人民共同富裕取得更为明显的实质性进展！\n——以史为鉴、开创未来，必须继续推进马克思主义中国化。马克思主义是我们立党立国的根本指导思想，是我们党的灵魂和旗帜。中国共产党坚持马克思主义基本原理，坚持实事求是，从中国实际出发，洞察时代大势，把握历史主动，进行艰辛探索，不断推进马克思主义中国化时代化，指导中国人民不断推进伟大社会革命。中国共产党为什么能，中国特色社会主义为什么好，归根到底是因为马克思主义行！\n新的征程上，我们必须坚持马克思列宁主义、毛泽东思想、邓小平理论、“三个代表”重要思想、科学发展观，全面贯彻新时代中国特色社会主义思想，坚持把马克思主义基本原理同中国具体实际相结合、同中华优秀传统文化相结合，用马克思主义观察时代、把握时代、引领时代，继续发展当代中国马克思主义、21世纪马克思主义！\n——以史为鉴、开创未来，必须坚持和发展中国特色社会主义。走自己的路，是党的全部理论和实践立足点，更是党百年奋斗得出的历史结论。中国特色社会主义是党和人民历经千辛万苦、付出巨大代价取得的根本成就，是实现中华民族伟大复兴的正确道路。我们坚持和发展中国特色社会主义，推动物质文明、政治文明、精神文明、社会文明、生态文明协调发展，创造了中国式现代化新道路，创造了人类文明新形态。\n新的征程上，我们必须坚持党的基本理论、基本路线、基本方略，统筹推进“五位一体”总体布局、协调推进“四个全面”战略布局，全面深化改革开放，立足新发展阶段，完整、准确、全面贯彻新发展理念，构建新发展格局，推动高质量发展，推进科技自立自强，保证人民当家作主，坚持依法治国，坚持社会主义核心价值体系，坚持在发展中保障和改善民生，坚持人与自然和谐共生，协同推进人民富裕、国家强盛、中国美丽。\n中华民族拥有在5000多年历史演进中形成的灿烂文明，中国共产党拥有百年奋斗实践和70多年执政兴国经验，我们积极学习借鉴人类文明的一切有益成果，欢迎一切有益的建议和善意的批评，但我们绝不接受“教师爷”般颐指气使的说教！中国共产党和中国人民将在自己选择的道路上昂首阔步走下去，把中国发展进步的命运牢牢掌握在自己手中！\n——以史为鉴、开创未来，必须加快国防和军队现代化。强国必须强军，军强才能国安。坚持党指挥枪、建设自己的人民军队，是党在血与火的斗争中得出的颠扑不破的真理。人民军队为党和人民建立了不朽功勋，是保卫红色江山、维护民族尊严的坚强柱石，也是维护地区和世界和平的强大力量。\n新的征程上，我们必须全面贯彻新时代党的强军思想，贯彻新时代军事战略方针，坚持党对人民军队的绝对领导，坚持走中国特色强军之路，全面推进政治建军、改革强军、科技强军、人才强军、依法治军，把人民军队建设成为世界一流军队，以更强大的能力、更可靠的手段捍卫国家主权、安全、发展利益！\n——以史为鉴、开创未来，必须不断推动构建人类命运共同体。和平、和睦、和谐是中华民族5000多年来一直追求和传承的理念，中华民族的血液中没有侵略他人、称王称霸的基因。中国共产党关注人类前途命运，同世界上一切进步力量携手前进，中国始终是世界和平的建设者、全球发展的贡献者、国际秩序的维护者！\n新的征程上，我们必须高举和平、发展、合作、共赢旗帜，奉行独立自主的和平外交政策，坚持走和平发展道路，推动建设新型国际关系，推动构建人类命运共同体，推动共建“一带一路”高质量发展，以中国的新发展为世界提供新机遇。中国共产党将继续同一切爱好和平的国家和人民一道，弘扬和平、发展、公平、正义、民主、自由的全人类共同价值，坚持合作、不搞对抗，坚持开放、不搞封闭，坚持互利共赢、不搞零和博弈，反对霸权主义和强权政治，推动历史车轮向着光明的目标前进！\n中国人民是崇尚正义、不畏强暴的人民，中华民族是具有强烈民族自豪感和自信心的民族。中国人民从来没有欺负、压迫、奴役过其他国家人民，过去没有，现在没有，将来也不会有。同时，中国人民也绝不允许任何外来势力欺负、压迫、奴役我们，谁妄想这样干，必将在14亿多中国人民用血肉筑成的钢铁长城面前碰得头破血流！\n——以史为鉴、开创未来，必须进行具有许多新的历史特点的伟大斗争。敢于斗争、敢于胜利，是中国共产党不可战胜的强大精神力量。实现伟大梦想就要顽强拼搏、不懈奋斗。今天，我们比历史上任何时期都更接近、更有信心和能力实现中华民族伟大复兴的目标，同时必须准备付出更为艰巨、更为艰苦的努力。\n新的征程上，我们必须增强忧患意识、始终居安思危，贯彻总体国家安全观，统筹发展和安全，统筹中华民族伟大复兴战略全局和世界百年未有之大变局，深刻认识我国社会主要矛盾变化带来的新特征新要求，深刻认识错综复杂的国际环境带来的新矛盾新挑战，敢于斗争，善于斗争，逢山开道、遇水架桥，勇于战胜一切风险挑战！\n——以史为鉴、开创未来，必须加强中华儿女大团结。在百年奋斗历程中，中国共产党始终把统一战线摆在重要位置，不断巩固和发展最广泛的统一战线，团结一切可以团结的力量、调动一切可以调动的积极因素，最大限度凝聚起共同奋斗的力量。爱国统一战线是中国共产党团结海内外全体中华儿女实现中华民族伟大复兴的重要法宝。\n新的征程上，我们必须坚持大团结大联合，坚持一致性和多样性统一，加强思想政治引领，广泛凝聚共识，广聚天下英才，努力寻求最大公约数、画出最大同心圆，形成海内外全体中华儿女心往一处想、劲往一处使的生动局面，汇聚起实现民族复兴的磅礴力量！\n——以史为鉴、开创未来，必须不断推进党的建设新的伟大工程。勇于自我革命是中国共产党区别于其他政党的显著标志。我们党历经千锤百炼而朝气蓬勃，一个很重要的原因就是我们始终坚持党要管党、全面从严治党，不断应对好自身在各个历史时期面临的风险考验，确保我们党在世界形势深刻变化的历史进程中始终走在时代前列，在应对国内外各种风险挑战的历史进程中始终成为全国人民的主心骨！\n新的征程上，我们要牢记打铁必须自身硬的道理，增强全面从严治党永远在路上的政治自觉，以党的政治建设为统领，继续推进新时代党的建设新的伟大工程，不断严密党的组织体系，着力建设德才兼备的高素质干部队伍，坚定不移推进党风廉政建设和反腐败斗争，坚决清除一切损害党的先进性和纯洁性的因素，清除一切侵蚀党的健康肌体的病毒，确保党不变质、不变色、不变味，确保党在新时代坚持和发展中国特色社会主义的历史进程中始终成为坚强领导核心！\n同志们、朋友们！\n我们要全面准确贯彻“一国两制”、“港人治港”、“澳人治澳”、高度自治的方针，落实中央对香港、澳门特别行政区全面管治权，落实特别行政区维护国家安全的法律制度和执行机制，维护国家主权、安全、发展利益，维护特别行政区社会大局稳定，保持香港、澳门长期繁荣稳定。\n解决台湾问题、实现祖国完全统一，是中国共产党矢志不渝的历史任务，是全体中华儿女的共同愿望。要坚持一个中国原则和“九二共识”，推进祖国和平统一进程。包括两岸同胞在内的所有中华儿女，要和衷共济、团结向前，坚决粉碎任何“台独”图谋，共创民族复兴美好未来。任何人都不要低估中国人民捍卫国家主权和领土完整的坚强决心、坚定意志、强大能力！\n同志们、朋友们！\n未来属于青年，希望寄予青年。一百年前，一群新青年高举马克思主义思想火炬，在风雨如晦的中国苦苦探寻民族复兴的前途。一百年来，在中国共产党的旗帜下，一代代中国青年把青春奋斗融入党和人民事业，成为实现中华民族伟大复兴的先锋力量。新时代的中国青年要以实现中华民族伟大复兴为己任，增强做中国人的志气、骨气、底气，不负时代，不负韶华，不负党和人民的殷切期望！\n同志们、朋友们！\n一百年前，中国共产党成立时只有50多名党员，今天已经成为拥有9500多万名党员、领导着14亿多人口大国、具有重大全球影响力的世界第一大执政党。\n一百年前，中华民族呈现在世界面前的是一派衰败凋零的景象。今天，中华民族向世界展现的是一派欣欣向荣的气象，正以不可阻挡的步伐迈向伟大复兴。\n过去一百年，中国共产党向人民、向历史交出了一份优异的答卷。现在，中国共产党团结带领中国人民又踏上了实现第二个百年奋斗目标新的赶考之路。\n全体中国共产党员！党中央号召你们，牢记初心使命，坚定理想信念，践行党的宗旨，永远保持同人民群众的血肉联系，始终同人民想在一起、干在一起，风雨同舟、同甘共苦，继续为实现人民对美好生活的向往不懈努力，努力为党和人民争取更大光荣！\n同志们、朋友们！\n中国共产党立志于中华民族千秋伟业，百年恰是风华正茂！回首过去，展望未来，有中国共产党的坚强领导，有全国各族人民的紧密团结，全面建成社会主义现代化强国的目标一定能够实现，中华民族伟大复兴的中国梦一定能够实现！\n伟大、光荣、正确的中国共产党万岁！\n伟大、光荣、英雄的中国人民万岁！\n习近平系列重要讲话数据库 习近平系列重要讲话数据库 中国共产党新闻网 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n","permalink":"https://weixiang.github.io/posts/speech-at-the-celebration-of-the-100th-anniversary-of-the-founding-of-the-communist-party-of-china/","summary":"今天，在中国共产党历史上，在中华民族历史上，都是一个十分重大而庄严的日子。我们在这里隆重集会，同全党全国各族人民一道，庆祝中国共产党成立一百周年，回顾中国共产党百年奋斗的光辉历程，展望中华民族伟大复兴的光明前景。","title":"在庆祝中国共产党成立100周年大会上的讲话"},{"content":"本版发布日期：2021年7月2日\n生效日期：2021年7月2日\nJacob’s Thoughts（联系方式：jacob.ruan#outlook.com）运营的Jacob’s Thoughts 站点（以下或称“我们”）注重保护用户个人信息及个人隐私，您在使用我们的服务时，我们可能会收集和使用您的相关信息。\n我们希望通过本《隐私政策》向您说明，在使用Jacob’s Thoughts 站点的所有相关服务（包括但不限于网络资讯、网络社交等，以下称“Jacob’s Thoughts 站点”或“服务”）时，我们如何收集、使用、存储、分享这些信息，以及我们为您提供的访问、更新、控制和保护这些信息的方式。其中，有关您个人信息权益的条款等重要内容我们已用加粗形式提示，请特别关注。\n如果您不同意本隐私政策的任何内容，您可以选择停止使用Jacob’s Thoughts 站点。当您使用或继续使用我们的服务，即意味着同意我们按照本《隐私政策》收集、使用、储存和分享您的相关信息。\n如对本《隐私政策》或相关事宜有任何问题，请通过jacob.ruan#outlook.com 与我们联系。\n目录 一、我们如何收集和使用个人信息\n二、我们如何使用cookie或同类技术\n三、我们如何储存和保护个人信息\n四、我们如何共享、转让、公开披露个人信息\n五、如何管理您的个人信息\n六、未成年人信息保护条款\n七、《隐私政策》的修订和通知\n八、联系我们\n一、我们如何收集和使用个人信息 （一）有关个人敏感信息的提示 根据《信息安全技术个人信息安全规范》（GB/T 35273—2017），个人信息是指以电子或者其他方式记录的能够单独或者与其他信息结合识别特定自然人身份或者反映特定自然人活动情况的各种信息。本隐私政策中涉及的个人信息包括：基本信息（包括性别、地址、地区、个人电话号码、电子邮箱）；个人身份信息（包括身份证、护照、相关身份证明等）；网络身份标识信息（包括系统账号、IP地址、口令）；个人上网记录（包括登录记录、浏览记录）；个人常用设备信息（包括硬件型号、操作系统类型、设备MAC地址、软件列表唯一设备识别码如IMEI/Android ID/IDFA等在内的描述个人常用设备基本情况的信息）；个人位置信息（包括精准定位信息、经纬度等）。\n个人敏感信息是指一旦泄露、非法提供或滥用可能危害人身和财产安全，极易导致个人名誉、身心健康受到损害或歧视性待遇等的个人信息。本隐私政策中涉及的个人敏感信息包括： 个人身份信息（包括身份证、护照、相关身份证明等）；网络身份识别信息（包括账户名、账户昵称、用户头像、与前述有关的密码）；其他信息（包括个人电话号码、浏览记录、精准定位信息）。对于个人敏感信息，我们将在本政策中进行显著标识，请您仔细阅读。\n（二）我们收集个人信息的目的、方式和范围 我们将通过以下途径来收集和获得您的个人信息\n1. 帮助您完成注册、认证、登录 1.1 当您注册、登录Jacob’s Thoughts 站点及相关服务时，您可以通过邮件地址创建账号，并且您可以完善相关的网络身份识别信息（头像、昵称、密码），您还可以根据自身需求选择填写性别、地址、地区及个人介绍/签名/简介、职业等信息来完善您的信息。\n如您需要使用涉及身份认证功能等相关服务时，根据相关法律法规，您可能需要提供您的真实身份信息（真实姓名、身份证号码、电话号码）以完成实名验证。 收集这些信息是为了帮助您完成注册及认证，这些信息属于个人敏感信息，您可以拒绝提供，但您将可能无法获得相关服务，但不影响其他功能与服务的正常使用。\n针对部分涉及公共信息传播的账号，例如实名官方账号，我们将强制收集主要责任人的身份证信息，以确保公共传播秩序的维护。除该类情形，Jacob’s Thoughts 站点一般不强制收集用户身份证信息。\n1.2 您也可以使用第三方账号登录并使用，您将授权我们获取您在第三方平台注册的公开信息（头像、昵称以及您授权的其他信息），用于与Jacob’s Thoughts 站点账号绑定，使您可以直接登录并使用本产品和相关服务。\n2. 向您推荐更感兴趣的信息 2.1 Jacob’s Thoughts 站点使用的第三方技术（如广告）可能会向您推荐更感兴趣的信息，为实现这一功能，我们可能会收集必要的日志信息。如您无需上述个性推荐服务，您可在浏览器隐私设置中进行关闭，具体操作办法详见下方第五条第五款内容。\n2.2 用于信息展示的日志信息包括：\n您操作、使用的行为信息：点击、关注、收藏、搜索、浏览、分享\n您主动提供的信息：反馈、发布、点赞、评论\n地理位置信息： WLAN接入点、蓝牙和基站等传感器信息\n2.3 GPS地理位置是敏感个人信息，若您拒绝提供，我们将不会根据GPS信息向您推荐信息，且不会影响Jacob’s Thoughts 站点其他功能的正常使用。\n2.4 我们站点使用的第三方技术可能会基于IP地址对应的地区向您展示、推荐您所在地区的本地相关信息。\n2.5 我们收集、使用的上述信息进行了去标识化处理，数据分析仅对应特定的、无法直接关联您身份的编码，不会与您的真实身份相关联。\n3. 为您提供发布与互动服务 3.1 信息发布\na. 您发布内容、评论、提问或回答时，我们将收集您发布的信息，并展示您的昵称、头像、发布内容。您发布信息并选择显示位置时，我们会请求您授权地理位置权限，并收集与本服务相关的位置信息。您如果拒绝授权提供精确地理位置信息，将无法使用此功能，但不影响Jacob’s Thoughts 站点其他功能的正常使用。\nb. 您使用上传图片、音视频功能时，我们会请求您授权相机、照片、麦克风权限。您如果拒绝授权提供，将无法使用此功能，但不影响您正常使用Jacob’s Thoughts 站点的其他功能。\nc. 您在使用【订阅文章】功能时，我们可能会要求您提供邮件地址码和/或其他联系方式用于向您发送文章推送。你如果拒绝提供此信息，将无法使用此功能，但不影响您正常使用Jacob’s Thoughts 站点的其他功能。\nd. 用户因使用我们的产品或者服务而被我们收集的信息，例如其他用户发布的信息中可能含有您的部分信息（如：在评论、留言、发布图文、音视频中涉及到与您相关的信息）。\n3.2 互动交流\na. 您主动关注您感兴趣的作者、话题并与之进行互动，进行浏览、评论、收藏、点赞或分享内容时，我们会收集您关注的账号，并向您展示您关注账号发布内容。\n4. 为您提供搜索服务 您使用Jacob’s Thoughts 站点的搜索服务时，我们会收集您的搜索关键字信息、日志记录。 为了提供高效的搜索服务，部分前述信息会暂时存储在您的本地存储设备之中，并可向您展示搜索结果内容、搜索历史记录。\n5. 为您提供安全保障 5.1 安全保障功能\n我们致力于为您提供安全、可信的产品与使用环境，提供优质而可靠的服务是我们的核心目标。为实现安全保障功能所收集的信息是必要信息。\n5.2 设备信息与日志信息\n为了保障软件与服务的安全运行，我们会收集您的硬件型号、操作系统版本号、IP 地址、软件版本号、网络接入方式、类型、网络质量数据、操作、使用、服务日志。\n（三）您理解并同意，部分单项服务可能需要您在您的设备中开启特定的访问权限，以实现这些权限所涉及信息的收集和使用。例如： 1. 我们可能会申请位置权限，用于为您提供本地化信息； 2. 我们可能会申请存储空间权限，用于您保存图片、上传图片或视频等； 3. 我们可能会申请相机权限，用于您发表信息时拍摄图片或视频等； 4. 我们可能会申请麦克风权限，用于您拍摄视频时录制声音等； 上述权限均不会默认或强制开启，我们会在相关的应用场景中向您申请。当您需要关闭这些功能权限时，您可在浏览器的隐私设置中进行关闭，具体操作办法详见下方第五条第六款内容。请您注意，您开启任一权限即代表您授权我们可以收集和使用相关信息来为您提供对应服务，您一旦关闭任一权限即代表您取消了授权，我们将不再基于对应权限继续收集和使用相关信息，也无法为您提供该权限所对应的服务。但是，您关闭权限的决定不会影响此前基于您的授权所进行的信息收集及使用。\n二、我们如何使用cookie或同类技术 我们可能通过cookies和同类技术收集和使用您的信息，并将该等信息储存为日志信息，并用于以下用途：\n1. 记住您的身份。例如：cookies有助于我们辨认您作为我们的注册用户的身份，或保存您向我们提供的有关您的喜好或其他信息； 2. 分析您使用我们服务的情况。例如，我们可利用cookies来了解您使用我们的服务进行什么活动，或哪些网页或服务最受您的欢迎。 三、我们如何储存和保护个人信息 1. 信息存储的地域 1.1 我们会按照法律法规规定，将境内收集的用户个人信息存储于中国境内。1.2目前我们不会跨境传输或存储您的个人信息。将来如需跨境传输或存储的，我们会向您告知信息出境的目的、接收方、安全保证措施和安全风险，并征得您的同意。\n2. 信息存储的方式和期限 2.1 我们会通过安全的方式存储您的信息，包括位于服务器上的数据库和服务器日志。\n2.2 一般情况下，我们只会在为实现服务目的所必需的时间内或法律法规规定的条件下存储您的个人信息。\n2.3 一般情况下，对于超期信息的处理我们采用服务器自动覆盖方式。\n3. 我们使用行业通用的安全技术、匿名化处理，以防信息的丢失、不当使用、未经授权阅览或披露。例如，在某些服务中，我们将利用加密技术（如SSL）来保护您提供的个人信息。 4. 尽管已经采取了合理有效措施，并已经遵守了相关法律规定要求的标准，但请您理解，由于技术的限制以及可能存在的各种恶意手段，在互联网行业，即便竭尽所能加强安全措施，也不可能始终保证信息百分之百的安全。您需要了解，您接入我们的服务所用的系统和通讯网络，有可能因我们可控范围外的因素而出现问题。 四、我们如何共享、转让、公开披露个人信息 1. 我们不会与我们以外的任何公司、组织和个人共享您的个人信息，但以下情况除外： （1）事先获得您明确的同意或授权；\n（2）根据适用的法律法规、法律程序的要求、强制性的行政或司法要求所必须的情况下进行提供；\n（3）在法律法规允许的范围内，为遵守适用的法律法规、维护社会公共利益、或保护我们或我们的集团公司、我们的客户、其他用户或雇员的人身和财产安全或合法权益或安全免遭损害而所合理必需的；\n（4）只有共享您的信息，才能实现我们的产品与/或服务的核心功能或提供您需要的服务；\n（5）应您需求为您处理您与他人的纠纷或争议；\n（6）符合与您签署的相关协议（包括在线签署的电子协议以及相应的平台规则）或其他的法律文件约定所提供；\n（7）基于学术研究而使用；\n（8）基于符合法律法规的社会公共利益而使用。\n2. 第三方服务、应用 为实现本政策中声明的目的及更好的为您提供服务，我们可能会接入第三方服务商提供的SDK或其他类似的应用程序，并将我们依照本政策收集的您的某些信息共享给该等第三方服务商，以便提供更好的客户服务和用户体验。各单项服务接入第三方SDK的情况可能有不同，如需了解具体单项服务接入第三方SDK的详细情况，请您联系我们。目前，我们为了实现如下功能或服务接入了第三方服务商：\n2.1 产品使用情况分析：为分析我们服务的使用情况，提升用户使用体验，我们会与第三方服务商Google共享产品的使用情况（设备类型、使用时长等）的去标识化或匿名化数据，这些数据难以与其他信息结合识别您的个人身份；\n2.3 内容分享：在您点击“分享”键将某些Jacob’s Thoughts 站点内容分享到第三方社交媒体时，我们将通过对应的第三方服务商完成分享功能。该功能的实现需要收集您的信息（设备信息、应用列表信息、地理位置等）。\n2.4 通过网页唤起APP：在您通过网页等唤起Jacob’s Thoughts 站点APP的服务时，我们将通过对应的第三方服务商完成此功能。该功能的实现需要收集您的信息（设备信息等）。\n2.5 实现广告相关的共享信息：a广告推送：我们可能与委托我们进行推广和广告投放的合作伙伴共享信息，但我们不会共享用于识别您个人身份的信息（姓名、身份证号）， 仅会向这些合作伙伴提供不能识别您个人身份的间接画像标签及去标识化或匿名化后的信息，以帮助其在不识别您个人身份的前提下提升广告有效触达率。b广告统计：我们可能与业务的服务商、供应商和其他合作伙伴共享分析去标识化的统计信息，这些信息难以与您的身份信息相关联，这些信息将帮助我们分析、衡量广告和相关服务的有效性。\n我们仅会出于正当、必要、特定的目的共享您的信息。仅将去标识化或匿名化处理后的信息共享给第三方。对我们与之共享信息的第三方服务商，我们会要求他们履行相关保密义务并采取相应的安全措施及提供相关安全等级认证。如果您有需要了解的，您也可以选择通过本政策“如何联系我们”章节所列的反馈渠道联系我们，我们会尽快为您作出解答。\n本政策仅适用于我们所收集的个人信息，并不适用于任何第三方站点或第三方的信息使用规则。该等第三方服务由相关的第三方负责运营。您使用该等第三方服务（包括您向该等第三方提供的任何信息），须受第三方自己的服务条款及信息保护声明（而非本政策）约束，您需要仔细阅读其条款。如您发现这些第三方服务存在风险时，建议您终止相关操作以保护您的合法权益。\n3. 转让 我们不会将您的个人信息转让给任何公司、组织和个人，但以下情况除外：\n（1）事先获得您的明确同意；\n（2）根据法律法规或强制性的行政或司法要求；\n（3）在涉及到个人信息转让，我们会向您告知有关情况，并要求新的持有您个人信息的公司、组织继续受本政策的约束。如变更个人信息使用目的时，我们将要求该公司、组织重新取得您的明确同意。\n4. 公开披露 除对违规账号、欺诈行为进行处罚公告时，我们会披露相关账号的信息外，原则上我们不会将您的信息进行公开披露。如确需公开披露时，我们会向您告知公开披露的目的、披露信息的类型及可能涉及的敏感信息，并征得您的明确同意\n5. 依法豁免征得同意共享、转让、公开披露的个人信息 请您理解，在下列情形中，根据法律法规及国家标准，我们共享、转让、公开披露您的个人信息无需征得您的授权同意：\n（1）与国家安全、国防安全直接相关的；\n（2）与公共安全、公共卫生、重大公共利益直接相关的；\n（3）与犯罪侦查、起诉、审判和判决执行等直接相关的；\n（4）出于维护您或其他个人的生命、财产等重大合法权益但又很难得到本人同意的；\n（5）您自行向社会公众公开的个人信息；\n（6）从合法公开披露的信息中收集个人信息的，如合法的新闻报道、政府信息公开等渠道。\n五、如何管理您的个人信息 为了让您更便捷地查询访问、更正您的个人信息，同时保障您退出登录和注销账户和设置隐私功能的权利，按照中国相关法律、法规、标准，我们在产品设计中为您提供了相应的操作设置，您可参考下面的指引进行操作。\n1. 访问您的个人信息 已登录状态下，在网站中选择右上角的【我的】tab，此时页面上方会显示您的头像，昵称等个人信息。\n2. 更正您的个人信息 已登录状态下，在网站中选择右上角的【我的】tab，点击页面上方会显示您的头像，昵称等个人信息区域，进入个人主页。再次点击右上角的【编辑资料】按钮 ，即可更正您的个人信息。\n3. 退出登录 已登录状态下，在网站中选择右上角的【我的】tab，进入【更多设置】。拉到最底部，会看到【退出登录】按钮，点击即可。\n4. 注销 请发送邮件至jacob.ruan#outlook.com；\n5. 新闻内容定向推送开关设置 在浏览器设置中进入进入【更多设置】-【隐私设置】，可开启或关闭【允许网站追踪】开关。关闭后，您看到的信息将不依赖于您的个性化行为。\n6. 敏感权限设置 在浏览器设置中进入【更多设置】-【隐私设置】，可开启或关闭位置、照片（存储空间）、相机、麦克风、获取手机信息和拨打电话的权限。关闭后我们将不再收集与这些权限相关的信息。\n六、未成年人信息保护条款 若你是未满 18 周岁的未成年人，在使用Jacob’s Thoughts 站点相关服务前，应在你的父母或其他监护人监护、指导下共同阅读并同意本隐私政策。\n我们根据国家相关法律法规的规定保护未成年人的个人信息，只会在法律允许、父母或其他监护人明确同意或保护未成年人所必要的情况下收集、使用、储存、共享、转让或披露未成年人的个人信息。\n七、《隐私政策》的修订和通知 为了给您提供更好的服务，Jacob’s Thoughts 站点及相关服务将不时更新与变化，我们会适时修订本隐私政策的条款，该等修订构成本隐私政策的一部分。\n当本隐私政策更新后，我们会在Jacob’s Thoughts 站点发出更新版本，并在更新后的条款生效前通过官方网站（jacobruan.com）公告，并将以站内信等适当的方式提醒您相关内容的更新，以便您及时了解本隐私政策的最新版本。\n八、联系我们 当您有其他的投诉、建议、未成年人个人信息相关问题或需要删除所有访问记录时，您可以将您的问题发送至 jacob.ruan#outlook.com 。\n我们将尽快审核所涉问题，并在验证您的用户身份后的十五个工作日内予以回复。\n","permalink":"https://weixiang.github.io/privacy/","summary":"隐私政策 Privacy \u0026amp; Data","title":"隐私政策"},{"content":"本版发布日期：2021年7月2日\n生效日期：2021年7月2日\nJacob’s Thoughts（联系方式：jacob.ruan#outlook.com）运营的Jacob’s Thoughts 站点（以下或称“我们”）注重保护用户个人信息及个人隐私，您在使用我们的服务时，我们可能会收集和使用您的相关信息。\n我们希望通过本《隐私政策》向您说明，在使用Jacob’s Thoughts 站点的所有相关服务（包括但不限于网络资讯、网络社交等，以下称“Jacob’s Thoughts 站点”或“服务”）时，我们如何收集、使用、存储、分享这些信息，以及我们为您提供的访问、更新、控制和保护这些信息的方式。其中，有关您个人信息权益的条款等重要内容我们已用加粗形式提示，请特别关注。\n如果您不同意本隐私政策的任何内容，您可以选择停止使用Jacob’s Thoughts 站点。当您使用或继续使用我们的服务，即意味着同意我们按照本《隐私政策》收集、使用、储存和分享您的相关信息。\n如对本《隐私政策》或相关事宜有任何问题，请通过jacob.ruan#outlook.com 与我们联系。\n目录\n一、我们如何收集和使用个人信息\n二、我们如何使用cookie或同类技术\n三、我们如何储存和保护个人信息\n四、我们如何共享、转让、公开披露个人信息\n五、如何管理您的个人信息\n六、未成年人信息保护条款\n七、《隐私政策》的修订和通知\n八、联系我们\n一、我们如何收集和使用个人信息\n（一）有关个人敏感信息的提示\n根据《信息安全技术个人信息安全规范》（GB/T 35273—2017），个人信息是指以电子或者其他方式记录的能够单独或者与其他信息结合识别特定自然人身份或者反映特定自然人活动情况的各种信息。本隐私政策中涉及的个人信息包括：基本信息（包括性别、地址、地区、个人电话号码、电子邮箱）；个人身份信息（包括身份证、护照、相关身份证明等）；网络身份标识信息（包括系统账号、IP地址、口令）；个人上网记录（包括登录记录、浏览记录）；个人常用设备信息（包括硬件型号、操作系统类型、设备MAC地址、软件列表唯一设备识别码如IMEI/Android ID/IDFA等在内的描述个人常用设备基本情况的信息）；个人位置信息（包括精准定位信息、经纬度等）。\n个人敏感信息是指一旦泄露、非法提供或滥用可能危害人身和财产安全，极易导致个人名誉、身心健康受到损害或歧视性待遇等的个人信息。本隐私政策中涉及的个人敏感信息包括：个人身份信息（包括身份证、护照、相关身份证明等）；网络身份识别信息（包括账户名、账户昵称、用户头像、与前述有关的密码）；其他信息（包括个人电话号码、浏览记录、精准定位信息）。对于个人敏感信息，我们将在本政策中进行显著标识，请您仔细阅读。\n（二）我们收集个人信息的目的、方式和范围\n我们将通过以下途径来收集和获得您的个人信息\n1．帮助您完成注册、认证、登录\n1.1 当您注册、登录Jacob’s Thoughts 站点及相关服务时，您可以通过邮件地址创建账号，并且您可以完善相关的网络身份识别信息（头像、昵称、密码），您还可以根据自身需求选择填写性别、地址、地区及个人介绍/签名/简介、职业等信息来完善您的信息。\n如您需要使用涉及身份认证功能等相关服务时，根据相关法律法规，您可能需要提供您的真实身份信息（真实姓名、身份证号码、电话号码）以完成实名验证。 收集这些信息是为了帮助您完成注册及认证，这些信息属于个人敏感信息，您可以拒绝提供，但您将可能无法获得相关服务，但不影响其他功能与服务的正常使用。\n针对部分涉及公共信息传播的账号，例如实名官方账号，我们将强制收集主要责任人的身份证信息，以确保公共传播秩序的维护。除该类情形，Jacob’s Thoughts 站点一般不强制收集用户身份证信息。\n1.2 您也可以使用第三方账号登录并使用，您将授权我们获取您在第三方平台注册的公开信息（头像、昵称以及您授权的其他信息），用于与Jacob’s Thoughts 站点账号绑定，使您可以直接登录并使用本产品和相关服务。\n2.向您推荐更感兴趣的信息\n2.1Jacob’s Thoughts 站点使用的第三方技术（如广告）可能会向您推荐更感兴趣的信息，为实现这一功能，我们可能会收集必要的日志信息。如您无需上述个性推荐服务，您可在浏览器隐私设置中进行关闭，具体操作办法详见下方第五条第五款内容。\n2.2用于信息展示的日志信息包括：\n您操作、使用的行为信息：点击、关注、收藏、搜索、浏览、分享\n您主动提供的信息：反馈、发布、点赞、评论\n地理位置信息： WLAN接入点、蓝牙和基站等传感器信息\n2.3GPS地理位置是敏感个人信息，若您拒绝提供，我们将不会根据GPS信息向您推荐信息，且不会影响Jacob’s Thoughts 站点其他功能的正常使用。\n2.4我们站点使用的第三方技术可能会基于IP地址对应的地区向您展示、推荐您所在地区的本地相关信息。\n2.5我们收集、使用的上述信息进行了去标识化处理，数据分析仅对应特定的、无法直接关联您身份的编码，不会与您的真实身份相关联。\n3.为您提供发布与互动服务\n3.1 信息发布\na.您发布内容、评论、提问或回答时，我们将收集您发布的信息，并展示您的昵称、头像、发布内容。您发布信息并选择显示位置时，我们会请求您授权地理位置权限，并收集与本服务相关的位置信息。您如果拒绝授权提供精确地理位置信息，将无法使用此功能，但不影响Jacob’s Thoughts 站点其他功能的正常使用。\nb.您使用上传图片、音视频功能时，我们会请求您授权相机、照片、麦克风权限。您如果拒绝授权提供，将无法使用此功能，但不影响您正常使用Jacob’s Thoughts 站点的其他功能。\nc.您在使用【订阅文章】功能时，我们可能会要求您提供邮件地址码和/或其他联系方式用于向您发送文章推送。你如果拒绝提供此信息，将无法使用此功能，但不影响您正常使用Jacob’s Thoughts 站点的其他功能。\nd.用户因使用我们的产品或者服务而被我们收集的信息，例如其他用户发布的信息中可能含有您的部分信息（如：在评论、留言、发布图文、音视频中涉及到与您相关的信息）。\n3.2 互动交流\na.您主动关注您感兴趣的作者、话题并与之进行互动，进行浏览、评论、收藏、点赞或分享内容时，我们会收集您关注的账号，并向您展示您关注账号发布内容。\n4.为您提供搜索服务\n您使用Jacob’s Thoughts 站点的搜索服务时，我们会收集您的搜索关键字信息、日志记录。为了提供高效的搜索服务，部分前述信息会暂时存储在您的本地存储设备之中，并可向您展示搜索结果内容、搜索历史记录。\n5.为您提供安全保障\n5.1 安全保障功能\n我们致力于为您提供安全、可信的产品与使用环境，提供优质而可靠的服务是我们的核心目标。为实现安全保障功能所收集的信息是必要信息。\n5.2 设备信息与日志信息\n为了保障软件与服务的安全运行，我们会收集您的硬件型号、操作系统版本号、IP 地址、软件版本号、网络接入方式、类型、网络质量数据、操作、使用、服务日志。\n（三）您理解并同意，部分单项服务可能需要您在您的设备中开启特定的访问权限，以实现这些权限所涉及信息的收集和使用。例如：\n1.我们可能会申请位置权限，用于为您提供本地化信息；\n2.我们可能会申请存储空间权限，用于您保存图片、上传图片或视频等；\n3.我们可能会申请相机权限，用于您发表信息时拍摄图片或视频等；\n4.我们可能会申请麦克风权限，用于您拍摄视频时录制声音等；\n上述权限均不会默认或强制开启，我们会在相关的应用场景中向您申请。当您需要关闭这些功能权限时，您可在浏览器的隐私设置中进行关闭，具体操作办法详见下方第五条第六款内容。请您注意，您开启任一权限即代表您授权我们可以收集和使用相关信息来为您提供对应服务，您一旦关闭任一权限即代表您取消了授权，我们将不再基于对应权限继续收集和使用相关信息，也无法为您提供该权限所对应的服务。但是，您关闭权限的决定不会影响此前基于您的授权所进行的信息收集及使用。\n二、我们如何使用cookie或同类技术\n我们可能通过cookies和同类技术收集和使用您的信息，并将该等信息储存为日志信息，并用于以下用途：\n记住您的身份。例如：cookies有助于我们辨认您作为我们的注册用户的身份，或保存您向我们提供的有关您的喜好或其他信息；\n分析您使用我们服务的情况。例如，我们可利用cookies来了解您使用我们的服务进行什么活动，或哪些网页或服务最受您的欢迎。\n三、我们如何储存和保护个人信息\n1．信息存储的地域\n1.1我们会按照法律法规规定，将境内收集的用户个人信息存储于中国境内。1.2目前我们不会跨境传输或存储您的个人信息。将来如需跨境传输或存储的，我们会向您告知信息出境的目的、接收方、安全保证措施和安全风险，并征得您的同意。\n2．信息存储的方式和期限\n2.1我们会通过安全的方式存储您的信息，包括位于服务器上的数据库和服务器日志。\n2.2一般情况下，我们只会在为实现服务目的所必需的时间内或法律法规规定的条件下存储您的个人信息。\n2.3一般情况下，对于超期信息的处理我们采用服务器自动覆盖方式。\n我们使用行业通用的安全技术、匿名化处理，以防信息的丢失、不当使用、未经授权阅览或披露。例如，在某些服务中，我们将利用加密技术（如SSL）来保护您提供的个人信息。\n尽管已经采取了合理有效措施，并已经遵守了相关法律规定要求的标准，但请您理解，由于技术的限制以及可能存在的各种恶意手段，在互联网行业，即便竭尽所能加强安全措施，也不可能始终保证信息百分之百的安全。您需要了解，您接入我们的服务所用的系统和通讯网络，有可能因我们可控范围外的因素而出现问题。\n四、我们如何共享、转让、公开披露个人信息\n1．我们不会与我们以外的任何公司、组织和个人共享您的个人信息，但以下情况除外：\n（1）事先获得您明确的同意或授权；\n（2）根据适用的法律法规、法律程序的要求、强制性的行政或司法要求所必须的情况下进行提供；\n（3）在法律法规允许的范围内，为遵守适用的法律法规、维护社会公共利益、或保护我们或我们的集团公司、我们的客户、其他用户或雇员的人身和财产安全或合法权益或安全免遭损害而所合理必需的；\n（4） 只有共享您的信息，才能实现我们的产品与/或服务的核心功能或提供您需要的服务；\n（5）应您需求为您处理您与他人的纠纷或争议；\n（6）符合与您签署的相关协议（包括在线签署的电子协议以及相应的平台规则）或其他的法律文件约定所提供；\n（7）基于学术研究而使用；\n（8）基于符合法律法规的社会公共利益而使用。\n2．第三方服务、应用\n为实现本政策中声明的目的及更好的为您提供服务，我们可能会接入第三方服务商提供的SDK或其他类似的应用程序，并将我们依照本政策收集的您的某些信息共享给该等第三方服务商，以便提供更好的客户服务和用户体验。各单项服务接入第三方SDK的情况可能有不同，如需了解具体单项服务接入第三方SDK的详细情况，请您联系我们。目前，我们为了实现如下功能或服务接入了第三方服务商：\n2.1产品使用情况分析：为分析我们服务的使用情况，提升用户使用体验，我们会与第三方服务商Google共享产品的使用情况（设备类型、使用时长等）的去标识化或匿名化数据，这些数据难以与其他信息结合识别您的个人身份；\n2.3内容分享：在您点击“分享”键将某些Jacob’s Thoughts 站点内容分享到第三方社交媒体时，我们将通过对应的第三方服务商完成分享功能。该功能的实现需要收集您的信息（设备信息、应用列表信息、地理位置等）。\n2.4 通过网页唤起APP：在您通过网页等唤起Jacob’s Thoughts 站点APP的服务时，我们将通过对应的第三方服务商完成此功能。该功能的实现需要收集您的信息（设备信息等）。\n2.5实现广告相关的共享信息：a广告推送：我们可能与委托我们进行推广和广告投放的合作伙伴共享信息，但我们不会共享用于识别您个人身份的信息（姓名、身份证号）， 仅会向这些合作伙伴提供不能识别您个人身份的间接画像标签及去标识化或匿名化后的信息，以帮助其在不识别您个人身份的前提下提升广告有效触达率。b广告统计：我们可能与业务的服务商、供应商和其他合作伙伴共享分析去标识化的统计信息，这些信息难以与您的身份信息相关联，这些信息将帮助我们分析、衡量广告和相关服务的有效性。\n我们仅会出于正当、必要、特定的目的共享您的信息。仅将去标识化或匿名化处理后的信息共享给第三方。对我们与之共享信息的第三方服务商，我们会要求他们履行相关保密义务并采取相应的安全措施及提供相关安全等级认证。如果您有需要了解的，您也可以选择通过本政策“如何联系我们”章节所列的反馈渠道联系我们，我们会尽快为您作出解答。\n本政策仅适用于我们所收集的个人信息，并不适用于任何第三方站点或第三方的信息使用规则。该等第三方服务由相关的第三方负责运营。您使用该等第三方服务（包括您向该等第三方提供的任何信息），须受第三方自己的服务条款及信息保护声明（而非本政策）约束，您需要仔细阅读其条款。如您发现这些第三方服务存在风险时，建议您终止相关操作以保护您的合法权益。\n3．转让\n我们不会将您的个人信息转让给任何公司、组织和个人，但以下情况除外：\n（1）事先获得您的明确同意；\n（2）根据法律法规或强制性的行政或司法要求；\n（3）在涉及到个人信息转让，我们会向您告知有关情况，并要求新的持有您个人信息的公司、组织继续受本政策的约束。如变更个人信息使用目的时，我们将要求该公司、组织重新取得您的明确同意。\n4．公开披露\n除对违规账号、欺诈行为进行处罚公告时，我们会披露相关账号的信息外，原则上我们不会将您的信息进行公开披露。如确需公开披露时，我们会向您告知公开披露的目的、披露信息的类型及可能涉及的敏感信息，并征得您的明确同意\n5．依法豁免征得同意共享、转让、公开披露的个人信息\n请您理解，在下列情形中，根据法律法规及国家标准，我们共享、转让、公开披露您的个人信息无需征得您的授权同意：\n（1）与国家安全、国防安全直接相关的；\n（2）与公共安全、公共卫生、重大公共利益直接相关的；\n（3）与犯罪侦查、起诉、审判和判决执行等直接相关的；\n（4）出于维护您或其他个人的生命、财产等重大合法权益但又很难得到本人同意的；\n（5）您自行向社会公众公开的个人信息；\n（6）从合法公开披露的信息中收集个人信息的，如合法的新闻报道、政府信息公开等渠道。\n五、如何管理您的个人信息\n为了让您更便捷地查询访问、更正您的个人信息，同时保障您退出登录和注销账户和设置隐私功能的权利，按照中国相关法律、法规、标准，我们在产品设计中为您提供了相应的操作设置，您可参考下面的指引进行操作。\n1．访问您的个人信息\n已登录状态下，在网站中选择右上角的【我的】tab，此时页面上方会显示您的头像，昵称等个人信息。\n2．更正您的个人信息\n已登录状态下，在网站中选择右上角的【我的】tab，点击页面上方会显示您的头像，昵称等个人信息区域，进入个人主页。再次点击右上角的【编辑资料】按钮 ，即可更正您的个人信息。\n3．退出登录\n已登录状态下，在网站中选择右上角的【我的】tab，进入【更多设置】。拉到最底部，会看到【退出登录】按钮，点击即可。\n4．注销\n请发送邮件至jacob.ruan#outlook.com；\n5．新闻内容定向推送开关设置\n在浏览器设置中进入进入【更多设置】-【隐私设置】，可开启或关闭【允许网站追踪】开关。关闭后，您看到的信息将不依赖于您的个性化行为。\n6．敏感权限设置\n在浏览器设置中进入【更多设置】-【隐私设置】，可开启或关闭位置、照片（存储空间）、相机、麦克风、获取手机信息和拨打电话的权限。关闭后我们将不再收集与这些权限相关的信息。\n六、未成年人信息保护条款\n若你是未满 18 周岁的未成年人，在使用Jacob’s Thoughts 站点相关服务前，应在你的父母或其他监护人监护、指导下共同阅读并同意本隐私政策。\n我们根据国家相关法律法规的规定保护未成年人的个人信息，只会在法律允许、父母或其他监护人明确同意或保护未成年人所必要的情况下收集、使用、储存、共享、转让或披露未成年人的个人信息。\n七、《隐私政策》的修订和通知\n为了给您提供更好的服务，Jacob’s Thoughts 站点及相关服务将不时更新与变化，我们会适时修订本隐私政策的条款，该等修订构成本隐私政策的一部分。\n当本隐私政策更新后，我们会在Jacob’s Thoughts 站点发出更新版本，并在更新后的条款生效前通过官方网站（weixiang.github.io）公告，并将以站内信等适当的方式提醒您相关内容的更新，以便您及时了解本隐私政策的最新版本。\n八、联系我们\n当您有其他的投诉、建议、未成年人个人信息相关问题或需要删除所有访问记录时，您可以将您的问题发送至 jacob.ruan#outlook.com 。\n我们将尽快审核所涉问题，并在验证您的用户身份后的十五个工作日内予以回复。\n","permalink":"https://weixiang.github.io/posts/privacy/","summary":"本版发布日期：2021年7月2日 生效日期：2021年7月2日 Jacob’s Thoughts（联系方式：jacob.ruan#outlook.","title":"Privacy 隐私政策"},{"content":"通过您自己的 Linux 硬件进行广告拦截\nPi- hole®是一个DNS 沉洞服务器，无需安装任何客户端软件即可保护您的设备免受有害内容的侵害。\n易于安装：安装程序将引导您完成整个过程，并且只需不到十分钟的时间 强大：不仅是网页去广告，还能去除 APP 内置广告和智能电视广告 响应式：通过缓存 DNS 查询来无缝地加快日常网络加载的速度 轻巧：运行平稳，对硬件的性能要求很小 全能：拥有一个命令行界面，有稳定操作性的保证 优雅的UI：一个漂亮的响应式 Web 界面仪表板，可查看和控制您的 Pi-hole 多功能：可以选择用作DHCP 服务器，自动保护局域网内的所有设备 可扩展性：安装在服务器级硬件上时能够处理数亿个查询 现代：能够阻止 IPv4 和 IPv6 上的广告 免费：开源软件，你的隐私只在你的手里 需要准备的材料 一个树莓派（以 3B+ 为例） USB 电源适配器（5V，不小于 2A） USB 电缆 8G 以上的高速 TF 卡 电脑（以 Windows 为例） 网线 互联网连接（推荐使用 真 · 互联网） 开始安装 首先我们需要将树莓派接入路由器，有线或无线均可，然后 SSH 远程登录到树莓派上：\n不会的同学请先去看上一篇文章，本文不再赘述如何初始化、连接到树莓派。\n使用官方的一键安装脚本即可快速安装（我额外加了以 root 运行）：\ncurl -sSL https://install.pi-hole.net | sudo bash 等待一会，然后一路回车即可，个人认为默认的设置就很不错了。如果你想搞特殊，也可以停下来用 Google 翻译看看，根据自己想需要调整设置。\n因为众所周知的原因，安装过程可能需要魔法！\n如果你和我一样在这里卡了很久或者直接 error 了，说明你需要使用魔法。\n至于具体操作请自己 Google 一下吧，我这里也不太好直接向麻瓜们直接展示对吧。（搜索关键词：树莓派+魔法名称）\n![]https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2021/07/ce442dcfb36d6358.png)\n安装完毕，记下访问地址和密码。\n![]https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2021/07/31a7b37aea789e4a.png)\n调整 Pi-hole 的设置 用浏览器访问刚刚的地址就能看到主页了，或者也可以访问 http://pi.hole/admin\n主页展示的是 Pi-hole 的实时运行状态，点击 Login 输入记下的密码即可登录到控制台。\n![]https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2021/07/4d988d18bf797756.png)\n控制台就是这样的，现在可以开始调整 Pi-hole 的设置来获得更好的体验了：\n![]https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2021/07/bd03f70004631eaa.png)\n添加 hosts 源 实际上，Pi-hole 使用的是 hosts 方式对广告进行过滤（类似 AdAway），所以 hosts 源的好坏直接决定了用户体验。自带的 host 对于我国网络环境来说可能会水土不服，下面推荐几个知名 hosts 源，可以到 Settings - Blocklists 里面添加自定义源，添加一个之后按 Save 保存，全部添加完成后按 Save and Update 来更新 host 并保存设置。\n![]https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2021/07/1d8f1ef3b816cab6.png)\nyhosts：可以说是国内比较老牌的知名 hosts，定期有更新，但作者主观屏蔽了一些非广告网站，可以用下面的命令手动添加白名单来解决不够客观的问题： pihole -w `curl -sSL https://raw.githubusercontent.com/vokins/yhosts/master/data/moot/cps.txt https://raw.githubusercontent.com/vokins/yhosts/master/data/moot/error.txt https://raw.githubusercontent.com/vokins/yhosts/master/data/moot/hate.txt | sed \u0026#39;/^@/d; /^#/d; s/127.0.0.1 //\u0026#39; | tr \u0026#34;\\n\u0026#34; \u0026#34; \u0026#34;` neoHosts：比较小众的 hosts，但也口碑不错，看介绍貌似是不满于上面那位而弄出来的。 AdAway、Yoyos、MVPS： 知名去广告软件 AdAway 的默认源，有些水土不服。 大圣净化：Android 平台知名去广告软件大圣净化的规则，针对视频网站优化。 GoogleHosts： 一个能帮助你访问 404 网站的 hosts。 更多 hosts 可以去 GitHub 上搜索，或者到 AdAway 的 Wiki 看看： https://github.com/AdAway/AdAway/wiki/HostsSources\n相较于通常的过滤方式（如 Adblock Plus、KoolProxy 等），利用 hosts 过滤有自己的优缺点。优点是不会拖累网速（甚至可能有一定提升），缺点是过滤效果不尽如人意。\n添加国内 DNS 服务器 Pi-hole 在安装时已经设置过一次 DNS 服务器了，但因为是国外的 DNS 服务，速度可能会比较慢，通过添加国内的 DNS 服务可以提高速度。\n进入 Settings - DNS - Upstream DNS Servers 就可以添加 DNS 服务器了。\n![]https://jacob-1256058189.cos.ap-guangzhou.myqcloud.com/ghost/content/images/2021/07/602215aea76932ad.png)\n国内常见公共 DNS 服务 腾讯 DNSPod https://www.dnspod.cn/Products/Public.DNS\nAnycast：上海、天津、广州、香港\nIPv4：119.29.29.29 / 119.28.28.28 这是 DNSPod 建立的公共 DNS，之后 DNSPod 被腾讯收购以后由腾讯云负责运营。腾讯 DNSPod 公共 DNS 配置了 Anycast，节点囊括了腾讯云所有可用区的节点（包括海外），所以速度还是不错的，并且除了支持 ECS 以外还有一些关于 DNS 出口选择优化的加成，所以 CDN 解析结果相对准确很多。但是 SLA 却并不优秀 —— 曾经 经常遭遇 DDoS 攻击导致无法解析。除此以外，由于相对出名、使用人数较多，是运营商重点劫持的对象。\n值得一提的是，DNSPod 的公共 DNS 是免费提供 HTTPDNS 的，Demo 可以看 这里\n阿里云公共 DNS http://www.alidns.com\nAnycast：成都、深圳、杭州\nIPv4：223.5.5.5 / 223.6.6.6 IPv6：2400:3200::1 / 2400:3200:baba::1 阿里建立的公共 DNS。和腾讯一样，阿里公共 DNS 也是搭建在自家的云服务 —— 阿里云上。虽然也配置了 Anycast，不过不包括海外节点，国内也就浙江阿里云和深圳阿里云两个节点， 而且华北地区都是隧道穿透回深圳，响应速度略逊于 DNSPod 提供的公共 DNS；阿里公共 DNS 不支持 ECS ，有 DNS 出口的优化 （一般都是广东出口），。关于阿里的公共 DNS 没有听说太多宕机、无法使用相关的报告。，但是倒是听说阿里公共 DNS 时常有返回 NXDOMAIN 影响使用体验。 NSDOMAIN 问题已得到一定缓解。阿里云 DNS 是国内首个支持 IPv6 的 DNS 服务。\n南京信风公共 DNS https://www.114dns.com/\nAnycast：南京、济南、芝加哥\nIPv4：114.114.114.114 / 114.114.115.115 无疑是国内最著名的公共 DNS，但是显然不是最好的。有 Anycast，国内有南京和青岛济南两个节点、海外有芝加哥节点，响应速度不敢恭维。国内最著名的公共 DNS、使用的人很多，SLA 非常可靠，因此也是运营商重点劫持的对象。但是考虑到南京信风为运营商旁路广告劫持提供技术和硬件支持，对他们提供的公共 DNS 服务还是戴着有色眼镜来看吧。\nCNNIC 公共 DNS http://www.sdns.cn/ 北京、杭州、香港\nIPv4：1.2.4.8 / 210.2.4.8 CNNIC 名声并不好（CNNIC Root CA 的故事），因此有些许人相对都有些对 CNNIC 的抵触心理。CNNIC 的公共 DNS（SDNS）国内仅双点部署、Anycast 配得一塌糊涂、速度堪忧，解析结果没有 CDN 优化。至于撇开 CNNIC 来谈 SDNS 推不推荐使用？SLA 比 DNSPod 的公共 DNS 还惨，解析请求时不时超时，嗯。\n百度公共 DNS 北京、南京、深圳 https://dudns.baidu.com/\nIPv4：180.76.76.76 IPv6：2400:da00::6666 百度的名声现在怕是比 CNNIC 还要臭得多，他们的公共 DNS 于 2017 年上线，现在也不被太多人知道，不过还是简单提两笔：百度也为公共 DNS 也配置了 Anycast，国内是单点百度北京数据中心北京、南京、深圳三点，海外是单点百度香港数据中心。用的人少，也许不容易被运营商劫持，有兴趣的可以试一试看。\nEnjoy it! 到这里，你已经完成了树莓派的安装与初始化设置，你可以开始使用你的树莓派，做出令人惊叹的作品了！\n希望你喜欢这篇文章，如果对你有帮助的话，别忘了点赞、收藏、分享和点击订阅，并留意更新动态。\nStay creative, and I will see you next time!\n本作品采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可。\n参考文献：\n","permalink":"https://weixiang.github.io/posts/use-pi-hole-to-build-a-raspberry-pi-black-hole/","summary":"通过您自己的 Linux 硬件进行广告拦截 Pi- hole®是一个DNS 沉洞服务器，无需安装任何客户端软件即可保护您的设备免受有害内容的侵害。 易于安装：安装程","title":"用 Pi-hole 搭建一个树莓派黑洞"},{"content":"请注意：由于V2Ray项目变动，本文的操作方法已经失效，但仍具一定参考价值。 本文将向你介绍如何使用树莓派配置和安装 V2Ray 和 privoxy ，让树莓派顺畅访问国际互联网，并为局域网内的其他的设备提供 socks5代理和 http代理服务。\n先来给大家解释一下基本原理：\n啊不好意思放错了，应该是这张：\n我们这篇文章要实现的目标是：\ngraph LR A(你的设备/树莓派) --\u0026gt; B(树莓派 Privoxy) B --\u0026gt; |普通域名| E(目标网站) B --\u0026gt; |魔法域名| C(树莓派 V2Ray 客户端) --\u0026gt; D(V2Ray服务端) --\u0026gt; E(目标网站) B --\u0026gt; |广告域名| F(拦截) 需要准备的材料 树莓派（以 3B+ 为例） 电源（5V，不小于 2A） 8G 以上的高速 TF 卡 电脑（以 Windows 为例） 网线 互联网连接（推荐使用 真 · 互联网） 安装和配置 V2Ray 什么是 V2Ray？ V2Ray 是 Project V 下的一个工具。Project V 是一个包含一系列构建特定网络环境工具的项目，而 V2Ray 属于最核心的一个。 官方中介绍 Project V 提供了单一的内核和多种界面操作方式。内核（V2Ray）用于实际的网络交互、路由等针对网络数据的处理，而外围的用户界面程序提供了方便直接的操作流程。不过从时间上来说，先有 V2Ray 才有 Project V。 如果还是不理解，那么简单地说，V2Ray 是一个与 Shadowsocks 类似的代理软件，可以用来科学上网（施展魔法）学习国外先进科学技术。\n安装 V2Ray 安装 V2Ray。可以使用 V2Ray 提供的 go.sh 脚本安装，由于 GFW 会恶化对 GitHub 的访问，直接运行脚本几乎无法安装，建议先从 v2ray-core/releases 将安装包v2ray-linux-arm.zip下载到树莓派, 使用--local参数从本地安装\nwget -O v2ray_install.sh https://install.direct/go.sh chmod +x v2ray_install.sh sudo ./v2ray_install.sh --local v2ray-linux-arm.zip 配置 V2Ray 通过 v2rayN 可以导出节点配置为客户端配置，以下为 WS+TLS 的配置文件示例（请勿直接使用以下配置）：\n{ \u0026#34;policy\u0026#34;: { \u0026#34;system\u0026#34;: { \u0026#34;statsInboundUplink\u0026#34;: true, \u0026#34;statsInboundDownlink\u0026#34;: true } }, \u0026#34;log\u0026#34;: { \u0026#34;access\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;error\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;loglevel\u0026#34;: \u0026#34;warning\u0026#34; }, \u0026#34;inbounds\u0026#34;: [ { \u0026#34;tag\u0026#34;: \u0026#34;proxy\u0026#34;, \u0026#34;port\u0026#34;: 1080, \u0026#34;listen\u0026#34;: \u0026#34;0.0.0.0\u0026#34;, \u0026#34;protocol\u0026#34;: \u0026#34;socks\u0026#34;, \u0026#34;sniffing\u0026#34;: { \u0026#34;enabled\u0026#34;: true, \u0026#34;destOverride\u0026#34;: [ \u0026#34;http\u0026#34;, \u0026#34;tls\u0026#34; ] }, \u0026#34;settings\u0026#34;: { \u0026#34;auth\u0026#34;: \u0026#34;noauth\u0026#34;, \u0026#34;udp\u0026#34;: true, \u0026#34;ip\u0026#34;: null, \u0026#34;address\u0026#34;: null, \u0026#34;clients\u0026#34;: null }, \u0026#34;streamSettings\u0026#34;: null }, { \u0026#34;tag\u0026#34;: \u0026#34;api\u0026#34;, \u0026#34;port\u0026#34;: 8224, \u0026#34;listen\u0026#34;: \u0026#34;127.0.0.1\u0026#34;, \u0026#34;protocol\u0026#34;: \u0026#34;dokodemo-door\u0026#34;, \u0026#34;sniffing\u0026#34;: null, \u0026#34;settings\u0026#34;: { \u0026#34;auth\u0026#34;: null, \u0026#34;udp\u0026#34;: false, \u0026#34;ip\u0026#34;: null, \u0026#34;address\u0026#34;: \u0026#34;127.0.0.1\u0026#34;, \u0026#34;clients\u0026#34;: null }, \u0026#34;streamSettings\u0026#34;: null } ], \u0026#34;outbounds\u0026#34;: [ { \u0026#34;tag\u0026#34;: \u0026#34;proxy\u0026#34;, \u0026#34;protocol\u0026#34;: \u0026#34;vmess\u0026#34;, \u0026#34;settings\u0026#34;: { \u0026#34;vnext\u0026#34;: [ { \u0026#34;address\u0026#34;: \u0026#34;192.19.108.30\u0026#34;, \u0026#34;port\u0026#34;: 443, \u0026#34;users\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;96603728-5243-4b0a-94c1-0b4c22a69eeb\u0026#34;, \u0026#34;alterId\u0026#34;: 2, \u0026#34;email\u0026#34;: \u0026#34;t@t.tt\u0026#34;, \u0026#34;security\u0026#34;: \u0026#34;auto\u0026#34; } ] } ], \u0026#34;servers\u0026#34;: null, \u0026#34;response\u0026#34;: null }, \u0026#34;streamSettings\u0026#34;: { \u0026#34;network\u0026#34;: \u0026#34;ws\u0026#34;, \u0026#34;security\u0026#34;: \u0026#34;tls\u0026#34;, \u0026#34;tlsSettings\u0026#34;: { \u0026#34;allowInsecure\u0026#34;: true, \u0026#34;serverName\u0026#34;: \u0026#34;outsite.xyz\u0026#34; }, \u0026#34;tcpSettings\u0026#34;: null, \u0026#34;kcpSettings\u0026#34;: null, \u0026#34;wsSettings\u0026#34;: { \u0026#34;connectionReuse\u0026#34;: true, \u0026#34;path\u0026#34;: \u0026#34;/os\u0026#34;, \u0026#34;headers\u0026#34;: { \u0026#34;Host\u0026#34;: \u0026#34;outsite.xyz\u0026#34; } }, \u0026#34;httpSettings\u0026#34;: null, \u0026#34;quicSettings\u0026#34;: null }, \u0026#34;mux\u0026#34;: { \u0026#34;enabled\u0026#34;: true, \u0026#34;concurrency\u0026#34;: 8 } }, { \u0026#34;tag\u0026#34;: \u0026#34;direct\u0026#34;, \u0026#34;protocol\u0026#34;: \u0026#34;freedom\u0026#34;, \u0026#34;settings\u0026#34;: { \u0026#34;vnext\u0026#34;: null, \u0026#34;servers\u0026#34;: null, \u0026#34;response\u0026#34;: null }, \u0026#34;streamSettings\u0026#34;: null, \u0026#34;mux\u0026#34;: null }, { \u0026#34;tag\u0026#34;: \u0026#34;block\u0026#34;, \u0026#34;protocol\u0026#34;: \u0026#34;blackhole\u0026#34;, \u0026#34;settings\u0026#34;: { \u0026#34;vnext\u0026#34;: null, \u0026#34;servers\u0026#34;: null, \u0026#34;response\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;http\u0026#34; } }, \u0026#34;streamSettings\u0026#34;: null, \u0026#34;mux\u0026#34;: null } ], \u0026#34;stats\u0026#34;: {}, \u0026#34;api\u0026#34;: { \u0026#34;tag\u0026#34;: \u0026#34;api\u0026#34;, \u0026#34;services\u0026#34;: [ \u0026#34;StatsService\u0026#34; ] }, \u0026#34;dns\u0026#34;: null, \u0026#34;routing\u0026#34;: { \u0026#34;domainStrategy\u0026#34;: \u0026#34;IPIfNonMatch\u0026#34;, \u0026#34;rules\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;field\u0026#34;, \u0026#34;port\u0026#34;: null, \u0026#34;inboundTag\u0026#34;: [ \u0026#34;api\u0026#34; ], \u0026#34;outboundTag\u0026#34;: \u0026#34;api\u0026#34;, \u0026#34;ip\u0026#34;: null, \u0026#34;domain\u0026#34;: null } ] } } 将配置文件上传到树莓派，使用下面的命令替换默认配置：\nsudo mv config.json /etc/v2ray/ 检查配置文件并添加到系统启动项\n/usr/bin/v2ray/v2ray -test -config /etc/v2ray/config.json # 查看配置文件是否出错 sudo systemctl start v2ray # 启动v2ray服务 sudo systemctl status v2ray # 查看v2ray运行状态 sudo systemctl enable v2ray # 将v2ray加入开机自启动 执行 curl -so /dev/null -w \u0026quot;%{http_code}\u0026quot; google.com -x socks5://127.0.0.1:1080 确认 V2Ray 已经可以使用魔法 (命令中 Socks5 指 inbound 协议为 socks，1080 指该 inbound 端口是 1080)。如果执行这个命令出现了 301 或 200 这类数字的话代表可以使用魔法，如果长时间没反应或者是 000 的话说明不可以使用魔法。[^1]\nPrivoxy 使用指南 Privoxy 是一个免费的开源非缓存 Web 代理，可以过滤和处理传入的数据。\n使用 Privoxy，我们可以让树莓派变成你的局域网代理服务器。\nPrivoxy 的好处是，可以在网页数据到达浏览器之前对其进行过滤和操作。\n这也意味着可以使用 Privoxy 充当浏览器的广告拦截器。\n简介精简版 Privoxy 是个很朴素但很强大的工具，基本功能和 switchyomega 类似：根据规则来处理请求流向 —— 但不仅限于影响浏览器，我理解它介于 iptables 和 Switchyomega 之间。可以把接收到的请求，根据规则转发到下一次代理：比如 1080 常用来使用魔法，那么 Google 就走 1080，百度不需要使用魔法就直连。还可以根据规则屏蔽广告和垃圾站点。\n简介故事版 电脑联网了，就像在大山里的村庄有了一条通往市里的路，我们发起的所有请求，都会通过这条路走出去。有一天你发现这条路走下去，到另一个方向的城市会南辕北辙走不通，但是这条路附近呢又有另一个村子，到那边就能通了，所以你在路上开了一条小路去那个村子借道：第一个城市就是我们平常的请求比如百度淘宝知乎，第二条路走下去可能是谷歌脸书推特油管，也有可能是公司的内网环境，另一个村子就是 VPN，它或许是墙外的节点，或许是公司里那个看门的。\n这些路怎么走通往哪里，你知道了，但其他村民可能不知道，他们走到岔路口不知道它是通往哪里的，所以你就立了个路牌了做指向。Privoxy 是这个路牌，Switchyomega 也是这个路牌，proxifier 也是路牌之一 (mac 和 Windows 可用，有 GUI 和请求的详细日志，要花钱的)。这样理解的话，所有类型的 VPN 该怎么用就都好配置了。\n不建议盲目开全局，虽然它可能经常是管用的，但实际上所有流量都走了 \u0026ldquo;另一个村子\u0026rdquo; 再绕回来，天寒地冻路远不说，而且像网易这样的 \u0026ldquo;店面\u0026rdquo;，绕一下它可能就不接待你了 (他只认你哪里来的)。\n在 树莓派上安装 Privoxy 各个 Linux 发行版源里都有，直接包管理器装即可。\nsudo apt-get -y install privoxy # 安装privoxy mac 可以 brew install privoxy ，然后用 brew sevices 子命令管理。( 官方也有提供安装包 )\nWindows, 官方同样给了包和安装文档，但是等有空再写吧（其实基本就不想弄了…\n配置 在开始本节之前，强烈建议确保树莓派有静态的局域网 IP 地址。\n可以通过以下命令来查看树莓派的 IP\nhostname-I debian 装 privoxy ，它的配置文件里注释写的跟论文一样长，最开始的时候就被吓退了。\n~ λ k -h /etc/privoxy config # 主配置文件 default.action default.filter gfwlist.action # 自己生成的，用了 gfwlist 清单 match-all.action regression-tests.action templates trust user.action user.filter config 文件处理 :\nsudo cp /etc/privoxy/config /etc/privoxy/config.bak # 做个备份 sudo nano /etc/privoxy/config # 编辑配置文件 # 修改监听范围和端口（任选一句） listen-address 127.0.0.1:8118 # 监听本机的8118端口（仅树莓派魔法） listen-address 0.0.0.0:8118 # 监听本机+局域网的8118端口（树莓派+局域网魔法） # 添加代理规则（任选一句） actionsfile gfwlist.action # 让 privoxy 加载 gfwlist.action 实现智能分流 forward-socks5t / 127.0.0.1:1080 . # 全局代理无分流，注意后面还有一个点 完成后，按 CTRL+ X ，然后按 Y ，最后按 ENTER 保存文件。\n生成 gfwlist.action 文件： 这个项目可以很方便的帮忙生成这个配置: https://github.com/zfl9/gfwlist2privoxy\ncurl -4sSkLO https://raw.github.com/zfl9/gfwlist2privoxy/master/gfwlist2privoxy sudo mv gfwlist2privoxy /usr/local/bin \u0026amp;\u0026amp; sudo chmod a+x /usr/local/bin/gfwlist2privoxy # 放到 \u0026#34;PATH\u0026#34; 里保留，常用的 bash gfwlist2privoxy 127.0.0.1:1080 # 注意将 127.0.0.1:1080 替换为你的 socks5 地址 sudo mv -f gfwlist.action /etc/privoxy/ # gfwlist.action 移动到 privoxy 配置文件目录 sudo systemctl restart privoxy # 重启一下确保配置生效 sudo service privoxy status # 查看privoxy运行状态 tips: Privoxy 启动后，你设备配置好 HTTP 代理后，浏览器里输入 http://p.p ，你可以看到 Privoxy 成功启动的界面。\n自定义配置： 如果你有公司的 VPN，Git 仓库或者其他办公站点也需要走代理，可以很方便的加一个配置。\nsudo touch /etc/proxy/autovpn.action sudo echo \u0026#39;actionsfile autovpn.action\u0026#39; \u0026gt;\u0026gt;/etc/privoxy/config # 以下注释可以删除 sudo cat \u0026gt; /etc/proxy/autovpn.action \u0026lt;\u0026lt;EOF {{alias}} alauda = +forward-override{forward-socks5 127.0.0.1:5087 .} # alias 是定义别名的意思，可以在此处定义转发规则 {alauda} .alauda.io .alaudatech.com # 引用别名，在其后紧跟需要适配这个规则的域名 # 支持泛域名，比如 .baidu.com 可以匹配 www.baidu.com，tieba.baidu.com EOF sudo systemctl restart privoxy # 重启一下确保配置生效 开始施展魔法 树莓派 浏览器 在Chrome 中：\n打开 “ Settings” 菜单，或在地址栏中输入chrome://settings 向下滚动到底部 点击“ 高级 ” 打开高级设置 向下滚动，直到看到 “ 系统 ” 选项 点击 打开您计算机的代理设置 IP 地址填入树莓派的 IP，端口默认情况下应设置为8118（Privoxy 监听的端口）\n或者：Chrome、Firefox 有 Switchyomega 这个插件可以处理转发规则，配置也简单，但需要各自配置，使用 Privoxy 可以集中在一个地方处理。修改浏览器的代理，使用 http://localhost:8118 即可。\n终端 方法1 在终端中直接运行命令\n# 示例：本地 HTTP 代理 export http_proxy=http://localhost:8118 export https_proxy=http://localhost:8118 # 示例：本地 Socks5 代理 export http_proxy=socks5://127.0.0.1:1080 export https_proxy=socks5://127.0.0.1:1080 # 也可以用 ALL_PROXY export ALL_PROXY=socks5://localhost:1080 # 如果代理服务器需要登陆，这时可以直接把用户名和密码写进去 http_proxy=http://userName:password@proxyAddress:port 设置完毕后 wget curl 这类网络命令都会经过设置的代理。\nlocalhost 就是一个域名，域名默认指向 127.0.0.1，两者是一样的。\n这个办法的好处是简单直接，并且影响面很小，只对当前终端有效，退出就不行了。\n方法2 把代理服务器地址写入 shell 配置文件.bashrc 或者.zshrc\n直接在.bashrc 或者.zshrc 添加下面内容\n# 示例：本地 HTTP 代理 export http_proxy=\u0026#34;http://localhost:port\u0026#34; export https_proxy=\u0026#34;http://localhost:port\u0026#34; # 示例：本地 Socks5 代理 export http_proxy=\u0026#34;socks5://127.0.0.1:1080\u0026#34; export https_proxy=\u0026#34;socks5://127.0.0.1:1080\u0026#34; # 也可以用 ALL_PROXY export ALL_PROXY=socks5://127.0.0.1:1080 # 如果代理服务器需要登陆，这时可以直接把用户名和密码写进去 http_proxy=http://userName:password@proxyAddress:port 然后 Ctrl + X 保存文件，接着在终端中执行 source ~/.bashrc\n或者退出当前终端再起一个终端。 这个办法的好处是把代理服务器永久保存了，下次就可以直接用了。\n或者通过设置 Alias 简写来简化操作，每次要用的时候输入 setproxy，不用了就 unsetproxy。\nalias setproxy=\u0026#34;export ALL_PROXY=socks5://127.0.0.1:1080\u0026#34; alias unsetproxy=\u0026#34;unset ALL_PROXY\u0026#34; alias ip=\u0026#34;curl -i http://ip.cn\u0026#34; 方法3 改相应工具的配置\n比如 apt 的配置：\nsudo nano /etc/apt/apt.conf 在文件末尾加入下面这行\nAcquire::http::Proxy \u0026#34;http://proxyAddress:port\u0026#34; 保存 apt.conf 文件即可。\n更多关于 apt 的代理设置可以参考 ASK UBUNTU 里的这个问题\nGit 的设置：\ngit config --global http.proxy \u0026#39;socks5://127.0.0.1:1080\u0026#39; git config --global https.proxy \u0026#39;socks5://127.0.0.1:1080\u0026#39; Git 仓库有的在国内有的在国外，国内的有 GitCafe、Coding.net、开源中国 Git，所以用国内的就没必要设置了，反而会慢。\n局域网内其他设备使用 浏览器 每种浏览器的设置不同，下面是一份快速指南：\n在Chrome 中： 打开 “ Settings” 菜单，或在地址栏中输入chrome://settings 向下滚动到底部 点击“ 高级 ” 打开高级设置 向下滚动，直到看到 “ 系统 ” 选项 点击打开您计算机的代理设置 在 Firefox 中： 打开Options菜单，或在地址栏中输入about:preferences 向下滚动到底部 点击Settings... 标题下的 Network Settings 按钮 在 Internet Explorer 中： 转到设置。 点击 Connections标签。 点击 LAN settings按钮。 勾选 Use a proxy server for your LAN IP 地址填入树莓派的 IP，端口默认情况下应设置为8118（Privoxy 监听的端口）\n也可以用 Switchyomega 这个插件处理转发规则，使用 http://树莓派IP:8118 即可。\n设置系统网络代理服务器 一般在电脑、手机等设备的网络连接设置的高级选项里，都有设置代理服务器的地方，服务器填入树莓派 IP，端口填入8118，认证选择无，保存即可生效，开始感受宛如置身海外的上网冲浪体验吧。\n验证树莓派代理服务器 将代理设置配置为指向树莓派后，在浏览器中打开下面的地址\nhttp://config.privoxy.org/ 如果一切运行正常，可以看到 Privoxy 的欢迎界面：\n如果显示的是 Privoxy is not being used ，就要检查一下检查代理设置是否正确了。\nEnjoy it! 到这里，你已经完成了树莓派魔法的安装与配置，你可以开始使用你的树莓派访问真正的互联网，并为局域网内的其他设备提供魔法代理服务。\n希望你喜欢这篇文章，如果对你有帮助的话，别忘了点赞、收藏、分享和点击订阅，并留意更新动态。\nStay creative, and I will see you next time!\n本作品采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可。\n参考文献：\n[Ask Ubuntu]: https://askubuntu.com/questions/349702/apt-conf-acquirehttpproxy-proxyserverport-seems-not-to-be-used-ubuntu-13\t\u0026ldquo;apt.conf “Acquire::http:Proxy ”proxyserver:port\u0026rdquo; seems not to be used (Ubuntu 13.04 under Virtual Box on Win7)\u0026quot;\n","permalink":"https://weixiang.github.io/posts/raspberry-pi-uses-v2ray-magic-to-surf-the-internet/","summary":"请注意：由于V2Ray项目变动，本文的操作方法已经失效，但仍具一定参考价值。 本文将向你介绍如何使用树莓派配置和安装 V2Ray 和 privoxy ，让树莓派顺畅访问国","title":"树莓派使用 V2Ray 魔法上网"},{"content":"树莓派（英语： Raspberry Pi）是基于 Linux 的 单片机电脑，由英国树莓派基金会开发，目的是以低价硬件及自由软件促进学校的基本计算机科学教育。\nRaspbian 是专门用于 ARM 卡片式计算机 Raspberry Pi® “树莓派” 的操作系统。\nRaspberry Pi® “树莓派” 是 2012 年问世的 ARM 计算机，旨在为儿童和所有的计算机爱好者提供一套廉价的编程学习与硬件 DIY 平台。树莓派基于 ARM11，具有 1080P 高清视频解析能力，附带用于硬件开发的 GPIO 接口，使用 Linux 操作系统。售价仅 $25~$35。\nRaspbian 系统是 Debian 7.0/wheezy 的定制版本。得益于 Debian 从 7.0/wheezy 开始引入的 “带硬件浮点加速的 ARM 架构”(armhf)，Debian 7.0 在树莓派上的运行性能有了很大提升。Raspbian 默认使用 LXDE 桌面，内置 C 和 Python 编译器。\nRaspbian 是树莓派的开发与维护机构 The Raspbeery Pi Foundation “树莓派基金会”，推荐用于树莓派的首选系统。\n本文展示的是在没有外接显示屏的情况下的树莓派的初始化安装，以及如何连接到树莓派。\n需要准备的材料 树莓派（以 3B+ 为例） USB 电源适配器（5V，不小于 2A） USB 电缆 8G 以上的高速 TF 卡 USB 3.0 高速读卡器 电脑（以 Windows 为例） 网线 互联网连接（推荐使用 真 · 互联网） 安装 Raspbain 系统到 SD 卡 对于新手用户，树莓派官方建议使用 Raspberry Pi Imager，将系统镜像写入 SD 卡。也可以使用 balenaEtcher，Win32DiskImager 或 imgFlasher 等工具进行烧录，接有屏幕、键鼠的同学也可以使用 NOOBS 来部署系统。\n下面以 Raspberry Pi Imager 为例\n下载安装 Raspberry Pi Imager Raspberry Pi Imager 下载地址：\nhttps://www.raspberrypi.org/downloads/ 因为众所周知的原因，可能需要一些魔法才能下载成功。\n安装后打开的软件界面是这样的，是不是超级简单：\n格式化 SD 卡 首先要格式化 SD 卡，在第一项 Choose OS 里选择 Erase，然后选好要格式化的 SD 卡，最后点 Write 即可。\n烧录镜像 在 Choose OS 里选择第一项 Raspbain 即可，软件会自动下载并烧录进去，如果要使用本地的镜像文件，要注意文件路径中不要有中文。\n因为众所周知的原因，可能需要一些魔法才能下载成功。\n等进度条跑满，系统镜像就烧写完成啦。\n开启 SSH 功能 在树莓派将来的使用中，我们要用 SSH 的方式连接树莓派并对其进行操作，但为了安全起见，这个功能默认是关闭的，所以我们需要在 SD 卡的根目录创建一个叫“SSH”的文件，才能开启树莓派的 SSH 功能。\n在“此电脑”中找到一个叫“boot”的盘，新建一个TXT，命名为 SSH 即可，注意不要有后缀！ 如果找不到“boot”这个盘，重新拔插一下读卡器即可。\n启动树莓派并找到它 启动树莓派 插入烧写好系统的 SD 卡，用网线把树莓派和路由器连接起来，如果有键鼠显示器也要先连接上，最后插上电源，等待树莓派启动即可。\n查找树莓派的地址 使用浏览器登录路由器的管理页面，一般为 192.168.1.1，输入管理密码（路由器背面可以找到），进入“终端管理”界面，查看树莓派的IP地址。最好给树莓派设置一个固定 IP 地址方便后续使用。此步骤不同品牌的路由器操作方法略有不同，不过都大同小异。\n使用 SSH 连接到树莓派 以 Xshell 为例\nXshell 下载地址：\nhttps://www.netsarang.com/zh/xshell/ 打开 Xshell ，在左上角点击新建图标，填入名称，树莓派的 IP 地址，点击连接即可。\n树莓派默认的账户是 pi ，默认密码是 raspberry 。\n如下图时即连接成功：\n给树莓派换上国内源 因为众所周知的原因，树莓派的默认源速度感人，换上国内的源可以显著提高使用体验。\n以清华大学源为例\n编辑 /etc/apt/sources.list 文件，\nsudo nano /etc/apt/sources.list # 删除原文件所有内容，用以下内容取代： deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contrib deb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contrib 编辑 /etc/apt/sources.list.d/raspi.list 文件，删除原文件所有内容，用以下内容取代：\nsudo nano /etc/apt/sources.list.d/raspi.list # 删除原文件所有内容，用以下内容取代： deb http://mirrors.tuna.tsinghua.edu.cn/raspberrypi/ buster main ui 编辑完毕后用 Ctrl + X 退出，按下 Y 然后回车键确认保存即可。\n编辑镜像站后，请使用 sudo apt-get update 命令，更新软件源列表，同时检查您的编辑是否正确。\n使用 VNC 连接到树莓派 虽然 SSH 已经可以满足大部分的操作需求，但图形界面对于新手来说显然更容易上手。\n启用 VNC 功能 在 SSH 终端中输入\nsudo raspi-config 即可进入下面的配置模式，罗列了扩展系统分区，修改密码，启动设置等等，然后按着图片找到 VNC 选项打开即可。\n连接到树莓派 下载 VNC 客户端\nhttps://www.realvnc.com/en/connect/download/viewer/ 打开 VNC 软件，输入树莓派的 IP 地址、账户名密码（上一节有），即可连接。\n完成剩余的设置 连接成功后即可看到树莓派的桌面和欢迎界面。\n在欢迎界面中完成剩余的设置，修改地区、语言、时区、密码等，连接上 WiFi。\nEnjoy it! 到这里，你已经完成了树莓派的安装与初始化设置，你可以开始使用你的树莓派，做出令人惊叹的作品了！\n希望你喜欢这篇文章，如果对你有帮助的话，别忘了点赞、收藏、分享和点击订阅，并留意更新动态。\nStay creative, and I will see you next time!\n本作品采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可。\n参考文献：\n","permalink":"https://weixiang.github.io/posts/installation-and-initialization-of-raspberry-pi/","summary":"树莓派（英语： Raspberry Pi）是基于 Linux 的 单片机电脑，由英国树莓派基金会开发，目的是以低价硬件及自由软件促进学校的基本计算机科学教育。 Raspbian 是专门用于 ARM 卡","title":"树莓派的安装与初始化"},{"content":"Windows 美化可算是一个经久不衰的话题，虽然巨硬（微软）已经在努力在最新的 Windows 上不断努力打造属于自己的统一设计风格（Microsoft Fluent Design System），但为了兼容性还是不得不做出了许多妥协，在 UI 设计上还是被 Apple 的 macOS 甩出几条街……\n不久我刚刚入坑 Windows 美化，在自己的 Windows 10 上实践后也取得了很不错的效果，虽然不如一些大佬的作品厉害，但自己觉得好看、好用就够了，这也是我美化 Windows 的目的，因为电脑配置垃圾，所以都尽可能用少的系统资源实现美化目的。\n系统美化的意义就在于让自己获得更好的浏览体验 ，像是清理桌面、文件夹图标等美化还能 提高浏览效率。—— 少数派\n真正的美化应该是集效率与美观一体，保持个性化且自己使用起来得心应手才是理想的美化。—— Fordes\n这篇文章记录了我的一些方法，留作记录，也能帮助一些同学简单复刻这些操作，能加以创新当然会更加好啦。\n** 本文实践于 Windows 10 1903，其余版本未作测试，Windows 10 系统上应该都没问题，用 Windows 7 的同学该升级啦，0202年了还在用一个14年前的系统……（截至发文还能白嫖升级）\n最终效果 快捷方式箭头 按照惯例呢，我们先从最基础的开始，强迫症必做。\ntaskkill /f /im explorer.exe reg add \u0026#34;HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Icons\u0026#34; /v 29 /d \u0026#34;C:\\Windows\\system32\\imageres.dll,154\u0026#34; /t reg_sz /f reg add \u0026#34;HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Icons\u0026#34; /v 29 /d \u0026#34;C:\\Windows\\system32\\imageres.dll,154\u0026#34; /t reg_sz /f reg add \u0026#34;HKEY_CLASSES_ROOT\\lnkfile\u0026#34; /v IsShortcut /t reg_sz /f reg add \u0026#34;HEKY_CLASSES_ROOT\\piffile\u0026#34; /v IsShortcut /t reg_sz /f start explorer 复制上面的代码 \u0026ndash;\u0026gt; 新建文本文件 \u0026ndash;\u0026gt; 粘贴保存 \u0026ndash;\u0026gt; 更改文件后缀为 bat ，以管理员身份运行即可。\n像添加快捷方式箭头？\nreg delete \u0026#34;HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Icons\u0026#34; /v 29 /f taskkill /f /im explorer.exe attrib -s -r -h \u0026#34;%userprofile%\\AppData\\Local\\iconcache.db\u0026#34; del \u0026#34;%userprofile%\\AppData\\Local\\iconcache.db\u0026#34; /f /q start explorer pause 用同样的方法运行这段代码即可。\n不会这种操作的可以自行搜索 去快捷方式箭头 即可找到一大堆工具。\n任务栏透明 TranslucentTB 可以完美解决，绿色开源，小巧强大。\n轻量级（占用几 MB 内存且几乎不占用 CPU）的实用程序，可使 Windows 任务栏在 Windows 10 上半透明/透明。\n半机翻介绍 先进的颜色选择器，支持Alpha和实时预览，可更改任务栏的颜色。 任务栏状态（选择一种-可以在除“正常”以外的每种状态下自定义颜色）： Blur：将使任务栏稍微模糊。 Clear：透明的任务栏。 Normal：常规Windows样式。（好像TranslucentTB没有运行） Opaque：没有透明度。 Fluent：仅Windows 10 April 2018更新及更新。将使任务栏的外观类似于Microsoft的Fluent Design准则。 Dynamic模式（可以一起使用，并且它们各自提供您可以自定义的任务栏状态和颜色）： Dynamic Windows：如果当前窗口最大化，则将任务栏更改为其他外观。 Dynamic Start Menu：打开开始菜单时将更改任务栏外观。 Dynamic Cortana：打开Cortana（或禁用Cortana的搜索菜单）时，将更改任务栏的外观。 Dynamic Timeline/Task View：打开时间轴（或旧版本的任务视图）时，将更改任务栏外观。 下载地址 GayHub 项目地址\nGayHub 发布地址\n微软商店（推荐）\n用法 下载安装完毕之后默认就会透明，在托盘图标上右键即可对效果进行设置，记得勾选 Open at boot ，这样就能开机启动了。\n对照上面的介绍，并运用初中英语知识，最多再加 Google Translate 我们就可以完成这款软件的设置，透明任务栏√GET。\n桌面图标修改 如上图所示，我对所有应用的快捷方式图标都进行了修改，这一步就是考验耐心……\n获取图标 图标用的是 Pure 轻雨 图标包，下载 APK 文件后使用解压文件解压即可获取图标。\n推荐使用 Everything 搜索 来找图标。\n复制解压后文件的目录，粘贴到搜索框，最后加 空格 + 关键词 就能快速搜索到图标。可以在 Everything 的 搜索 菜单中选择仅搜索图像，在 视图 菜单中选择查看 中图标 ，可以获得较好的搜索体验\n将需要的图标复制到一个新文件夹里，等待转换格式。\n转换格式 从图标包提取出来的图标一般为 PNG 格式，但 Windows 系统的快捷方式图标需要 ico 格式，所有要进行转换。\n使用 CONVERTICO 即可完成在线转换。\n设置图标 右键图标 \u0026ndash;\u0026gt; 更改图标 \u0026ndash;\u0026gt; 选择图标 \u0026ndash;\u0026gt; 确认保存即可\nWindows 磁贴 这一部分我没有做，以下内容来自少数派。\n在 Windows 8 中，传统 Win 32 应用在开始屏幕菜单中的磁贴背景颜色和图标是可以自行定义的，但在 Windows 10 中，微软却取消了这个颇受好评的设计，使得所有 Win 32 应用的磁贴颜色都跟随主题颜色，非常单调且难以辨识。\n在本节，我将以微信为例，教大家通过创建磁贴配置文件的方式更改 Win 32 应用的磁贴背景颜色及图标。\n首先右键点击开始屏幕中的「微信」磁贴，选择「打开文件所在的位置」，然后再次右键点击出现的快捷方式，跳转到微信的实际安装目录。\n","permalink":"https://weixiang.github.io/posts/getting-started-notes-for-windows-beautification/","summary":"Windows 美化可算是一个经久不衰的话题，虽然巨硬（微软）已经在努力在最新的 Windows 上不断努力打造属于自己的统一设计风格（Microsoft Fluent Design System","title":"Windows 美化入门笔记"},{"content":"你试过在 Android 10 上安装 ViPER4Android 吗？如果是，那么你可能已经失败了。确实，不过这很正常。可能是因为 Android 10 更改了某些接口，ViPER4Android 还没有适配…\n那么，如何在 Android 10 上安装 ViPER4Android 呢？按照以下的方法即可正常安装使用 ViPER4Android\nPixel，Pixel 3 XL，Pixel 2 XL，OnePlus 6 / 6T，OnePlus 7/7 Pro 经过测试均可运行成功，理论上适用于大部分 Android 10 手机。\n在开始之前，请确保：1、手机已 root 并且已安装 Magisk2、将已安装的音频修改类软件、模块停用或卸载\n正式开始：1、下载安装 ViPER4Android v2.7.1.0 APK 。比如说这里：查看链接或者这里：【VIPERFX\u0026ndash;XDA代理开发版-不欢迎安智网的“一个人的冬季”】2、安装完毕后打开 ViPER4Android，但不要安装驱动。\n安装 ViPER4Android\n3、打开 Magisk Manager，在“下载”中搜索 Audio Modification Library，点安装，完毕后不要点重启。\n搜索 Audio Modification Library\n安装 Audio Modification Library\n4、回到 ViPER4Android，选择安装驱动，安装完毕后手机会自动重启。\n安装 ViPER4Android 驱动\n5、重启后，打开 Magisk Manager，在“模块”中将 Audio Modification Library 禁用。\n禁用 Audio Modification Library\n6、再次打开 ViPER4Android，选择安装驱动。7、重启后，打开 ViPER4Android，看看驱动是否正常。如果正常就是安装成功了，若不正常请继续下面的步骤。8、打开 Magisk Manager，在“模块”中将 Audio Modification Library 启用，选择重启，重启后打开 ViPER4Android 看看驱动状态，理论上应该已经安装成功了。\n将 Audio Modification Library 启用\n安装成功\n似乎是要按照上面的顺序安装 ViPER4Android 和 Audio Modification Library 才能成功如果还是失败的同学可以在评论区发出来看看有没有大佬…或者…等 ViPER4Android 的开发团队适配 Android 10 …\n感谢 XDA 上的 1dopewrx05，他在 Pixel 2 XL 主题站上分享了本方法，当然还有 The Customdroid 提供的图片和整理。\n","permalink":"https://weixiang.github.io/posts/the-correct-way-to-install-v4a-on-android-q/","summary":"ViPER4Android 是一款用于Android系统的全局音效驱动，主要用于给音频渲染各种各样的音频效果，包括回放增益、均衡器、脉冲反馈处理、场环绕、数字混响、动态系统和限幅器。","title":"在 Android Q 上安装 V4A 的正确姿势"},{"content":"2022年1月28日 更新： 本文章部分已经过时，现在大部分情况下可以用 Clash 解决，iOS 除外。\nv2rayN（Windows） Github: https://github.com/2dust/v2rayN/releases v2rayX（Mac） Github: https://github.com/Cenmrev/V2RayX/releases v2rayNG（Android） Github: https://github.com/2dust/v2rayNG/releases Play Store: https://play.google.com/store/apps/details?id=com.v2ray.ang Kitsunebi（Android） Github: https://github.com/eycorsican/kitsunebi-android/releases Play Store: https://play.google.com/store/apps/details?id=fun.kitsunebi.kitsunebi4android BifrostV（Android） Play Store: https://play.google.com/store/apps/details?id=com.github.dawndiy.bifrostv Kitsunebi（iOS） iTunes: https://itunes.apple.com/us/app/kitsunebi-proxy-utility/id1446584073?mt=8 i2Ray（iOS） iTunes: https://itunes.apple.com/us/app/i2ray/id1445270056?mt=8 Shadowrocket（iOS） iTunes: https://itunes.apple.com/us/app/shadowrocket/id932747118?mt=8 Pepi（iOS） iTunes: https://itunes.apple.com/us/app/pepi/id1283082051?mt=8 Quantumult（iOS） iTunes: https://itunes.apple.com/us/app/quantumult/id1252015438?mt=8 更新记录 2022年1月28日 迁移文章，修正排版，删除过时信息 ","permalink":"https://weixiang.github.io/posts/project-v-connection-tools/","summary":"魔法企划 Project V 的连接工具的收集与记录。","title":"Project V 连接工具"},{"content":"⚠️ 本准则主要用于应对政治类新闻报道及评论\n宗旨 没有绝对中立的媒体，不能完全信任任何一个媒体。看到新闻事件，冷静分析，独立思考，不跟风，不沸腾，不公开评论。\n目前已知的不信任站点 人民日报 共青团中央 观察者网 环球时报 BBC中文网 德国之声中文网 纽约时报中文网 华尔街日报中文网 中国数字时代 大纪元 亚洲自由电台 苹果日报 维基百科中文站（涉及政治类词条） 符合以下条件的均以不信任处理 涉及宗教信仰的网站 国外媒体的“中文网” 名称带有“自由”、“民主”、“独立”的网站 名称关键字包含“禁”字的网站 “独立政府”网站 可以采信的站点 仅作为较可信的消息来源，不完全信任其评论立场\n通讯社 国内外政府部门的官方账号 股份无政治成分的媒体的本国语种主站 更新记录 2022年1月25日 表述修正 ","permalink":"https://weixiang.github.io/posts/my-international-internet-surfing-guidelines/","summary":"面对繁杂的新闻媒体来源，我们需要有着自己的判断力，本文记录我自己的一些互联网冲浪经验。","title":"个人国际互联网冲浪准则"},{"content":"1. 逆温概念： 1)正常温度：\n对流层大气的热量主要直接来自地面的长波辐射。一般情况下，气温随海拔的升高而降低，称为气温垂直递减率R，R为0.60℃／100米。\n逆温现象： ① 海拔上升，气温升高；\n② 海拔上升1000米，气温下降幅度小于6°C。\n2. 逆温形成的条件： 设——理论温度（按温度的直减率变化）为T，实际温度为TS。\n1) 当某一高度TS＞T\n开始出现逆温现象，空气无垂直对流，大气层稳定。\n2) 当某一高度 TS≤T\n逆温现象消失，温差越大，对流越旺盛\n3. 逆温形成的原因及分类： 1） 原因——自然原因、人为原因。\n2） 分类（成因）\n① **辐射逆温（中高纬度）：**经常发生在晴朗无云的夜间，由于地面有效辐射很强，近地面层气温迅速下降，而高处气层降温较少，从而出现上暖下冷的逆温现象。这种逆温黎明前最强，日出后自下而上消失。辐射逆温的形成过程，如下图：\n② 地形逆温：\n常发生在山地、盆地和谷地中。由于山坡散热快，山坡上的冷空气沿山坡下沉到谷底，谷底原来较暖的空气被冷空气抬挤上升，从而出现温度的倒置现象。这样的逆温主要是在一定的地形条件下形成的，所以称为地形逆温。如美国的洛杉矶因周围三面环山，每年有两百多天出现逆温现象。\n③ 平流逆温\n由于暖空气水平移动到冷却的地面、水面或气层之上时，底层空气因受下垫面的影响迅速降温，上层空气因距离较远，降温较少，于是产生逆温。\n逆温的强弱，主要由暖空气和冷地表的温差决定，温差大，逆温越强。\n冬半年，在中纬度沿海地区，因为那里海陆温差显著，当海上暖空气流到大陆上时，形成逆温。\n④ 锋面逆温\n对流层中，暖空气移到冷空气之上,形成冷暖相交的锋面. 暖气团位于锋面之上，冷气团在下。在冷暖气团之间的过渡带上，若锋面上下暖冷空气的温差较大,便形成逆温。\n图中垂直线上的气温分布情况可见由下面的冷空气到上面的暖空气，等温线通过锋面区域时必有曲折，曲折程度视两种气团间的温度对比而决定，曲折段（如图中BC段）就出现了逆温层。由于锋是从地面向冷空气上方倾斜的，逆温层也随锋面的倾斜而呈倾斜状态（出现逆温的高度，与锋线位置距离地面高度有关）。因此逆温只能在冷空气所控制的地区内观察到,在冬半年有时会形成冻雨一些恶劣性天气。\n4. 逆温的利与弊 1) 逆温有利：逆温的出现会阻碍空气垂直对流\n① 抑制沙尘暴的发生\n沙尘暴发生条件——大风、沙尘、强对流运动。\n② 对飞机的飞行极为有利\n出现逆温类似平流层：空气平稳，万里晴空提高了能见度——飞行更加安全。\n③ 逆温是一种气候资源\n主要是在一些山坡或河谷地区。逆温带有效地提高了谷地在冬季的温度水平，多年生果树越冬可不必埋土，冻害得以避免或减轻，而且果实硬度高，品质好；在这里发展蔬菜，可减少热能投入，提高经济效益（如我国新疆伊梨谷地，逆温从10月至翌年3月，长达半年之久。1月份的坡地逆温层厚达400米，逆温强度达5℃。） ；逆温层坡地还是当地牲畜避寒、越冬的理想场所(如天山牧场冬季过冬就不是在山脚下还是在山的一定高度上)\n不利影响：逆温阻断空气对流运动，不利于地面污染物扩散，加剧地面污染从而影响空气质量 ① 对环境影响：沙尘暴发生条件——大风、沙尘、强对流运动，加重大气污染\n② 对天气影响：易产生大雾天气，阴雨天气（锋面逆温）、冻雨天气（锋面逆温）\n③ 对交通影响：能见度降低，地面湿滑\n大气受热过程与逆温现象 一、大气的受热过程 辐射波长：物体的温度与波长是负相关，温度越高，波长越短。温度越低，波长越长。\n太阳辐射是短波，地面和大气辐射是长波\n太阳辐射在传播过程中，部分被大气吸收（19％）、反射和散射（34％），大部分到达地面（47％）。\n大气的对太阳辐射的削弱作用 1、 大气对太阳辐射的吸收作用：\n特点：有选择性。\n例：对流层的水汽和二氧化碳吸收红外线、平流层的臭氧吸收紫外线，可见光吸收很少。\n影响因素：太阳辐射经过的大气路径、尘埃、云雾的多少\n2、大气对太阳辐射的反射作用：\n参与的大气成分：云层、尘埃\n特点：无选择性\n云层越厚，云量越多，反射就越强\n3、大气对太阳辐射的散射作用：\n参与的大气成分：空气分子和微小尘埃\n特点：具有选择性（蓝光)\n","permalink":"https://weixiang.github.io/posts/temperature-inversion/","summary":"在对流层，气温垂直分布的一般情况是随高度增加而降低， 大约每升高100米，气温降低0.6°C，但在一定条件下，对流层中也会出现气温随高度增加而上升的现象，或者地面上随高度的增加，降温变化率小于0.6°C/100 m，这种现象称为逆温。","title":"逆温现象"},{"content":"最近做的一些 Ghost 小优化（Ghost博客调教）\n新增评论区 大家终于可以愉快地畅所欲言啦！\n而且因为我们服务器在新加坡，不受中国大陆法律限制，也没有敏感词蛤蛤蛤\n采用的是Valine作为我们的评论系统，快速、简洁且高效、无后端。 获取\n在Code Injection的Footer部分填入\n\u0026lt;script src=\u0026#34;//cdn1.lncld.net/static/js/3.0.4/av-min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#39;//unpkg.com/valine/dist/Valine.min.js\u0026#39;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; new Valine({ el: \u0026#39;#vcomments\u0026#39;, appId: \u0026#39;\u0026lt;APP ID\u0026gt;\u0026#39;, appKey: \u0026#39;\u0026lt;APP Key\u0026gt;\u0026#39; }) \u0026lt;/script\u0026gt; 然后再在post.hbs里被注释掉的Comment部分添加这个就好了\n\u0026lt;div class=\u0026#34;col-md-12\u0026#34;\u0026gt; \u0026lt;div id=\u0026#34;vcomments\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; 参考：Ghost 博客添加 Valine 评论系统\n新增邮件订阅 大家可以在首页和每篇文章的下面找到这个订阅按钮 将你的邮箱输进去，以后有文章更新就会通过邮件通知你啦~ 参考：eddiesigner/liebling\n接入了Google广告 为什么要接广告？\n你当我们服务器是大风吹来的吗！\n能补贴一下服务器的运营费用，顺便还能给文章作者一些报酬。\n广告是Google根据你的兴趣个性化推荐的哦！所以每个人看到的都不太一样\n下面是某位不愿意透露姓名的同学看到的情形\nGoogle广告接入还是很方便的\n在Google Adsense申请就好，然后Google就会给一段神秘代码\n像这样\n\u0026lt;script async src=\u0026#34;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; (adsbygoogle = window.adsbygoogle || []).push({ google_ad_client: \u0026#34;ca-pub-这里应该是你的个人编号\u0026#34;, enable_page_level_ads: true }); \u0026lt;/script\u0026gt; 然后就把这段代码扔进Code Injection的Head部分就好了\n然后Google广告就会自动霸占你的网站了\n记得在Google Adsense的设置里调整一下广告出现的频率，以免广告太多影响阅读体验。\n参考：Google AdSense + Ghost\n接入了统计系统 我们站点一共接入了三个统计系统，分别是Google Analytics，百度统计 和 不蒜子统计。\n上面是百度统计的效果图，就是能分析一下站点的访问量什么的。\n又没有多少人来统计个屁\n百度和Google的接入都很方便，直接注册然后按提示获取代码就好了。\n然后把获取到的代码扔进Code Injection的Head部分。\nHead部分都快成垃圾场了\n不蒜子统计和前两个有点区别，这个是拿来展示的。\n比如页面底部的访问量统计，每篇文章的“热度”都是用它做的。\n方法也还算简单\n先把这个填入Code Injection的Head部分\n\u0026lt;script async src=\u0026#34;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; 把这段代码扔进footer.hbs合适的地方就可以了\n\u0026lt;span id=\u0026#34;busuanzi_container_site_pv\u0026#34;\u0026gt;本站总访问量\u0026lt;span id=\u0026#34;busuanzi_value_site_pv\u0026#34;\u0026gt;\u0026lt;/span\u0026gt;次\u0026lt;/span\u0026gt; 文章阅读量“热度”的方法也类似，改post.hbs就好了。\n参考：不如\n新增了作者页面 效果（已失效）：Authors 参考：eddiesigner/liebling\n在底部加了一个QQ群按钮 完成了本站的邮件系统 等我有空再写（要写国庆作业了……\n更新记录 2022年1月25日 文章迁移及表述调整 ","permalink":"https://weixiang.github.io/posts/a-record-of-optimizing-the-ghost-blog-for-waitech/","summary":"优化社团网站的一些记录，适用于 Ghost 博客系统。","title":"社团 Ghost 博客调较记录"},{"content":"就在昨天，我又双叒叕更换了一个船新的博客平台——也就是你现在看到的Ghost。\n从我开始接触博客起，从最初的Hexo，到后来的WordPress，再到现在你看到的Ghost，博客平台换的多，实际生产的内容却寥寥无几，在每一次博客的迁移过程中又丢失过一些文章，最后收获的不是知识的贮藏，而是各种博客平台的安装迁移方法。\n在我为WordPress臃肿的系统、找不到我钟意主题时，我在互联网的角落中发现了这个名为Ghost的博客系统。简洁的设计风格使我第一眼就看中了它，而它精简的系统也使我的辣鸡服务器不必再为WordPress而气喘吁吁。\n花费了我整整半天的时间，总算是把Ghost搭建起来了，这次搭建Ghost花费了我不少力气，并不是说Ghost不易用，而是我选择了一个我没有用过的船新操作——使用Docker，还有一个原因是Ghost相关的中文资料还不够完善，很多教程都已经过时。虽然过程有点坎坷，不过好处是学会了一点点Docker的概念和基本用法。 嗯，可以在Ghost养老了吧。\n接下来的三百多天，可能是对我极为重要的日子。逝者如斯夫，不舍昼夜。不知不觉中，我也迈入了高三的行列，准备着应对人生中最为重要的考试之一——高考。这个博客在这三百多天中，可能是不会更新了。这是这个新的博客的第一篇文章，短时间内也不会有第二篇了吧。\n午后，听着 Detroit: Become Human 中的开场钢琴曲 Opening Theme，写下最后这一段。\n希望三百多天后的我还能愉快地打开这个编辑页面，写下另一篇新的文章吧。\n","permalink":"https://weixiang.github.io/posts/hello-ghost/","summary":"第一次使用Ghost博客，有什么感觉呢？","title":"你好，Ghost"},{"content":"一、模块化设计 所有模块均可通过Wi-Fi接入一个或多个物联平台，支持AirKiss、SmartConfig等多种快速配网协议，支持休眠模式，低功耗长续航，可根据实际需求增加相应的功能模块或传感器模块。以下是部分模块及其特性：\n户外主机：Mini百叶箱设计，内置温湿度、光照、PM2.5、气压、有害气体等多种高精度传感器，并支持拓展传感器，多路可编程继电器，太阳能辅助供电，大容量锂电池，LCD显示实时数据，支持ZigBee协议，可使用SD卡记录数据，高精度ADC转换，冬季自动恒温等。\n户外主机及太阳能模块\n太阳能模块：为户外主机或其他模块提供辅助供电，整合雨水、温度、电压传感器，冬季自动融雪恒温等。\n室内网关：LCD显示户外主机或其他模块的实时数据，支持ZigBee协议，内置温湿度、光照传感器。\n土壤模块：内置高精度的土壤温度、湿度以及光照传感器、高精度ADC转换，可实现自动浇花。\n温湿度模块：内置高精度的数字温湿度传感器及数字光照传感器，可用于室内环境监测。\n气体模块：内置MQ-2、MQ-135、VOC等多种气体传感器，可用于空气质量监测。\n风速/风向模块：使用专业级的高精度风速/风向传感器，高精度ADC转换，可用于户外环境监测。\n智能插座：内置多路光耦隔离继电器，可用APP控制，也可与其他模块进行联动，实现自动化响应数据变化，如户外光照适宜时自动拉开窗帘等。\n智能灯：内置全彩LED灯，可用APP控制，也可与其他模块进行联动，实现自动化响应数据变化，如室内光线较暗时自动打开灯光。\n风速传感器及主机内部\n二、应用范围及特点 本作品采用模块化设计，成本可控，用户可根据自己的需求选用不同功能、不同类型，不同精度的传感器或功能模块，以满足不同需求，减少不必要的开支。\n所有模块均可接入一个或多个物联平台，实现数据自动上传、设备联动、警报、大数据分析、远程升级、远程控制等功能，可用于对接智能家居、智慧农业、智慧城市等物联网应用。软硬件均采用了开源协议，修改代码或硬件设计即可实现不同的功能，接入不同的平台，和不同的设备联动等。\n采用16位ADC芯片进行数据采集，宽电压供电，芯片内部有精密参考电压和可编程增益调节(PGA)，因此无论对微弱信号还是变化幅度较大的信号，都可进行精确的采集与转换。\n使用了ESP8266作为主控，将主控与网络模块整合到了一起，节约了成本以及内部空间，更易于向微型化发展。\n部分代码展示\n支持微信AirKiss、SmartConfig等多种快速配网方式，更加简单易用，接通电源，打开APP即可快速配置完毕投入使用。\n采用企业级物联平台，数据收发均采用加密协议并可同时备份在外置SD卡，数据更安全。\n可广泛应用于教育领域，如地理、生物、通用、信息等学科的教学，例如可用于分析当地气候的探究课题活动，亦可作为创客教育的套件。也可应用于农业、环境监测等领域。\n手机应用 三、改进之处 增强防水性能，使用防水黑胶密封精密部件，增加防水胶条。\n增加固定支架，固定孔等，使其更易于在户外安装使用。\n外观设计图\n优化代码逻辑，兼容更多类型的传感器。\n增加GPRS，4G、NB-IoT等通信模块，以应对户外无Wi-Fi信号和超出ZigBee通信距离的情况。\n增加摄像头，用户可通过手机查看实时画面，以辅助用户进行现场实况的判断。\n","permalink":"https://weixiang.github.io/posts/iot-micro-weather-station-based-on-esp8266/","summary":"一、模块化设计 所有模块均可通过Wi-Fi接入一个或多个物联平台，支持AirKiss、SmartConfig等多种快速配网协议，支持休眠模式，","title":"基于ESP8266的物联网微型气象站"},{"content":"第一章 人口与环境 1、人口增长\n①人口自然增长率的概念（a）\n在一定时期内出生人数减去死亡人数的净增人数与同期平均人数之比，多用百分比或千分比表示。一般情况下也可以用人口出生率减去人口死亡率得出人口自然增长率。\n②影响人口自然增长率的因素(b)\n影响人口自然增长率的因素有很多，如经济发达程度、文化教育水平、医疗卫生条件、妇女受业状况、婚姻生育观、宗教信仰、风俗习惯、战争、自然灾害、人口政策等。但归根到底取决于生产力发展水平。在影响人口自然增长的影响因素中需要特别强调区域社会经济发展水平对出生率的影响,可以为后面的人口增长模式做好铺垫,也为分析具体区域的人口变化提供理论依据。\n2、人口增长模式\n不同历史时期人口增长模式的特点及地区分布(b)\n“高-高-低“模式：工业革命前的人口增长模式，可分为：（1）原始人口增长模式：表现为高出生率、高死亡率、极低的自然增长率；（2）传统人口增长模式：表现为高出生率、高死亡率、较低的自然增长率。\n“高-低-高“模式：表现高出生率、低死亡率、高自然增长率。发达国家在18世纪中期到19世纪末20世纪初的人口增长模式。从20世纪50年代起，普遍存在于大多数发展中国家，导致大多数发展中国家出现严重的人口问题。\n“低-低-低“模式：表现为低出生率、低死亡率、低自然增长率，是一种现代人口增长模式。世界主要发达国家已基本步入现代人口增长模式，我国人口增长模式正逐步由“高-低-高”型向“三低”型过渡。\n本知识点上主要掌握两点：1、当前世界各地人口的增长特点与影响因素2、能对关于人口增长的相关图表作出正确分析，相对来说要求考察的是学生的知识运用能力。\n中国人口在很早以前就居世界各国之首。在1760年为2亿，1900年为4亿，1954年为6亿，1969年为8亿，1981年已达到10亿，人口增长呈快速增长态势。实行了计划生育国策后，人口增长放缓。2000年第5次人口普查表明中国人口达到12。9亿。估计到21世纪中叶达15-16亿。中国人口状况对世界人口有着至关重要的影响。\n读图要求（P2图1—1、P10图1—5）：读出历史时期地球人口的增长情况，可分为公元开始以前、中世纪、现代三个阶段；通过近现代人口增长可看出人口的倍增速度的大小。\n3、环境的限制性\n环境对人口发展的限制性（b）\n自然资源是人口发展的物质基础，人口的快速增长，资源的需求量和消耗量也快速增加。虽然人类社会在发展，科技水平在进步，自然资源的种类和数量也在不断增加，但自然资源终究是有限的，非再生资源的数量不断减少甚至枯竭，可再生资源在一定时间、空间内数量也是有限的。因此环境条件的限制性决定了地球人口不能无限增长。\n4、人口的合理容量\n①环境承载力和人口合理容量的区别（b）\n环境承载力：指一定时期内，在维持相对稳定的前提下，环境、资源所能容纳的人口规模和经济规模的大小。这个人口规模指的是特定的地区的资源与环境，在维持最低生存标准的情况下，所以承受的最大人口数量。\n人口合理容量：指在环境承载力（社会、经济和环境可持续发展）范围内，并且人口、资源、、环境处于可持续发展下的一个地区所能容纳的人口数量，即最适宜人口数量。\n人口合理容量与环境承载力的根本区别在于“最适宜人口数量”和“最大人口数量”，显然环境承载力中的人口规模要大于人口合理容量。\n②人口容量的特点及影响人口合理容量的因素（b）\n人口容量的特点：一为临界性； 二为相对性；三为警戒性。\n影响人口合理容量的因素：资源（首要因素）、科技发展水平、地区的对外开放程度、人口的文化和消费水平。注意其中人口的文化和消费水平与人口合理容量呈反比，其余成正比。\n5、人口迁移的概念与分类(a)\n人口迁移：一般指的是人口在两个地区之间的空间移动（县级及以上），这种移动通常涉及人口居住地到迁入地永**久性或长期（一年及以上）**地改变。\n人口迁移类型：按地理范围可分为国际迁移和国内迁移；按迁移方向可分为农村到城市、城市到农村、城市到城市、农村到农村4种。由农村到城市的人口迁移是发达国家历史上和发展中国家当前人口迁移的主要类型。\n[拓展提示]要注意人口迁移所包含的三大要素：空间移位、定居地改变、一定的时间性。\n6、引起人口迁移的因素\n①引起人口迁移的因素（b）\n引起人口迁移的因素：\n（1）自然生态环境因素\u0026mdash;气候、土壤、水和矿产资源、自然灾害等（如爱尔兰历史上人口外迁、楼兰古城的消亡）\n（2）经济因素\u0026mdash;经济发展水平、城市化水平、大型建设项目的布局、区域开发、交通条件等（如我国涌向东部沿海地区的民工潮）。\n（3）政治因素\u0026mdash;**-**国家政策（如深圳的崛起）、战争（难民潮、战俘遣返）等。\n（4）社会文化因素\u0026mdash;-文化教育、家庭婚姻、宗教信仰、种族家庭、个人动机和需求等。\n原因：不同地区的生存环境存在差异，这种地区间生存环境的差异是由自然生态环境、经济因素、政治因素、社会文化因素等综合作用形成的，在某一特定的情景下，起到主导作用的因素又可能是其中的一个或几个因素。但是目前世界上最主要和普遍的人口迁移的因素是，经济因素。\n②世界和我国人口迁移的现状（a）\n世界人口迁移的现状：由发展中国家迁移到发达国家、从贫穷落后国家迁移到富裕国家；从人口稠密国家迁移到人口稀少国家。具体可有永久性移民、外籍工人流动、国际难民定居三种。由农村到城市是发展中国家当前人口迁移的主要类型。\n我国人口迁移的现状：主要人口流出省区是中西部省区；主要流入省区是东部沿海省区等。总体表现为从农村到城市、从内地到沿海地区和工矿区、从经济欠发达地区流向发达地区。原因：以自发性迁移为主，以务工和经商为主。\n7、外国文化与人口\n①地域文化的概念(a)\n地域文化是指在一定地域长时期形成的特定文化现象，即在一定的地域内，人类在长时期历史发展过程中所创造的物质财富和精神财富的总和。\n②外国文化对人口发展的影响（b）\n文化的差异对人口发展的影响是多方面的，其中婚俗（如初婚年龄、婚姻的稳定程度）和宗教（为扩大势力，世界上主要宗教不反对人口增殖，如天主教影响下的拉丁美洲和宗教众多的南亚地区）对人口发展的影响是巨大的。\n8、中国文化与人口\n①中国文化对人口的影响(a)\n中国文化对人口的影响主要表现为三个方面：生育\u0026mdash;从早婚早育到晚婚晚育，从多育多子到只生一个；职业选择\u0026mdash;-从“学而优则仕”到“全民皆商”；人口流动\u0026mdash;-从安土重迁到“四海为家”。\n第二章 城市与环境 1、城市土地利用\n①城市土地利用的主要类型（a）\n按土地利用方式，城市用地可分为商业用地、工业用地、住宅用地、政府机关用地、交通用地、农业用地、休憩和绿化用地等。\n2、城市功能分区和空间结构\n①城市功能区的分类(a)\n城市的三种基本功能区：商业区、住宅区、工业区。其他还可以有市政与公共服务区、交通与仓储区、风景游览区、城市绿化区、特殊功能区等。各种功能分区相对集中，但是没有绝对界线。\n②影响城市功能分区的主要因素（c）\n影响城市功能分区的主要因素：自然地理条件、历史文化因素（天安门、故宫位于北京市中心）、经济发展水平（当前最主要因素）、交通运输状况。一般而言，从市中心向郊区的功能区依次为：商业区、住宅区、工业区。\n3、中心地理论的含义及运用（c）\n含义：中心地理论是研究城市空间组织和功能布局的一种城市区位理论。\n运用：根据中心地理论，城镇是周围乡村的中心地；最便于提供货物和服务的地点，应位于圆形商业区域的中心，在理想的平原上，中心地的服务范围表现为以中心地核心的正六边形；高级中心地服务范围大，彼此相距远，六边形数目少；低级中心地服务范围小，彼此相距近，六边形数目多；高级中心地包容低级中心地，高级服务范围覆盖低级服务范围，从而构成层次分明的空间网络系统。\n4、城市化含义（b）\n**** 城市化是指人口和产业活动在空间上集聚、乡村地区转变为城市地区的过程。城市化是社会生产力发展到一定阶段，农村人口转化为非农村人口，人口向城镇集聚，农村地区转化为城镇地区，城镇数量增加的过程。\n城市化的三大标志：劳动力从第一产业向第二、三产业转移，城市人口在总人口中的比重上升（最主要标志），城市用地规模扩大。\n5、城市化的动力机制\n城市化的主要动力（b）\n社会经济的发展是城市化的主要动力。其中农业生产力的发展是城市兴起和成长的前提，工业化是城市化的主导力量，第三产业的形成和发展又促进了城市化。\n6、城市化的特点\n①发达国家和发展中国家城市化的不同特点及原因（b）\n**** 发达国家城市化起步早，城市化水平高，20世纪70年代，城市人口比重达到70%，英国已达到90%。但现在城市化速度较慢，许多国家已出现了逆城市化的现象。\n**** 逆城市化的原因：（1）市中心环境污染严重；（2）乡村地区基础设施改善。\n发展中国家的城市化起步晚，发展快；城市化水平比较低；由于城市化与经济发展水平不相适应，城市发展不合理，如拉美的“虚假城市化”，亚洲的“滞后城市化”。\n差异的原因：城市化是社会经济发展水平的综合体现。发达国家由于工业化起步早，因此城市化起步早，发展水平高，城市化水平比较高；发展中国家长期政治上不独立，经济发展不快，城市化水平不高，20世纪中期以来， 发展中国家获得民族独立解放运动的胜利，经济迅速发展，逐渐成为世界城市化发展的主流。\n②现阶段中国城市化的特点（b）\n改革开放以来，我国社会经济发展迅猛，显著拉动了城市化进程。城市人口快速增长，城市数量保持较高的增长速度；城市化水平和密度东部沿海地区高于中西部地区；城市群、城市带逐步形成和扩大，城市化水平不断提高。城市化主要靠工业化带动，具体特点与发展中国家的城市化特点相符。\n7、城市化与我们的生活\n城市化对自然地理环境和人文地理环境的影响（b）\n城市化过程对自然地理环境的影响：\n要素\n对自然地理环境的影响\n评价\n地形\n对原来的地形进行改造，使之趋向平坦或起伏更大（如摩天大楼）\n容易造成水土流失、滑坡、泥石等地质灾害\n气候\n强烈改变了下垫面的原有性质，使气温、降水等要素发生变化，使城市产生热岛效应，也影响了日照、风速和风向\n形成城市热岛效应，将城市大气污染带到郊区，也将郊区大气污染带到城区，扩大了污染物的污染范围，加快了净化速度\n水文\n市政建设破坏了原有的河网系统，使城区水系出现紊乱，也使降水、蒸发、径流出现再分配\n易使城市在暴雨时排水不畅，造成地面积水，也使水质、水量和地下水运动出现变化；过量抽取地下水导致地面沉降\n生态\n城市的生产生活污染、交通工具、尤其是工业“三废”，破坏了所在地区的环境生态，也影响了生物的多样性\n城市生态系统成为一个脆弱的系统。城市是人类对自然地理环境影响和改变最大的地方\n城市化过程对人文地理环境的影响：\n要素\n对人文地理环境的影响\n农村\n转\n变\n为\n城市\n土地利用方式\n农业用地\n城市建设用地\n居民就业方式\n第一产业\n第二产业、第三产业\n景观特征\n乡村景观\n城市景观\n人口\n分散、农业人口\n密集、非农业人口\n经济开放程度\n低\n高\n信息、交通\n欠发达\n发达\n文化、观念\n受教育程度低，整体文化素质较低\n受教育程度高，整体文化素质较高\n8、城市环境问题(可对比必修3 P69页工业化、城市化问题)\n城市化过程中出现的问题及解决措施（c）\n城市规模的无限制扩大，城市人口的迅猛增长，城市化过程中出现了严重的问题。具体表现在六个方面：（1）环境污染严重，原有生态环境改变，环境质量下降，趋于恶化；（2）中心区人口密集；（3）交通拥挤；4、地价房租昂贵，居住条件差；5、失业人口增多；（6）社会秩序混乱。\n保护和改善城市环境的主要措施：建立卫星城，开发新区；改善城市交通和居住条件；保护和治理城市环境、扩大绿化面积。\n9、我国城市发展的趋势（b）\n进入21世纪，我国城市化表现为加速趋势，这与我国社会经济的发展是密切关联的。现阶段中国特色的城市化道路，要更加注重协调发展。具体表现在六个方面：\n（1）城市经济逐渐成为区域经济增长的主导力量；2、大型中心城市加速发展，辐射带动功能显著增强；3、强调以人为本，注重构造和谐的人居环境；4、控制环境污染和生态破坏，治理各种“城市病”；5、有更多的农业人口进入城市或当地的小城镇；6、运用信息化手段进一步提高城市现代化水平。\n","permalink":"https://weixiang.github.io/posts/population-and-cities/","summary":"指城市的城区（不包括市辖县）的农业人口和非农业人口的总数，包括有常住户口和未落常住户口的人，以及被注销户口的在押犯、劳改、劳教人员。总人口中不包括现役军人、人民武装警察。","title":"人口与城市"},{"content":"这不是2018大年初一吗为了迎合各大网站\\APP的传统习俗，我也把网页的主题色改了改成了喜庆的红色（你确定不是骚粉吗！(ㅍ_ㅍ)）\n实现方法 打开文件：themes/next/source/css/_variables/custom.styl\n添加以下内容：\n// 背景颜色 $body-bg-color = #FFE4E1; $header-bg-color = #FFE4E1; $footer-bg-color = #FFE4E1; 保存以后刷新一下页面就可以看到效果啦！\n","permalink":"https://weixiang.github.io/posts/change-the-background-color-of-hexo/","summary":"这不是2018大年初一吗为了迎合各大网站\\APP的传统习俗，我也把网页的主题色改了改成了喜庆的红色（你确定不是骚粉吗！(ㅍ_ㅍ)） 实现方法 打","title":"更改 Hexo 的背景颜色"},{"content":" 非常抱歉，由于这篇文章过于古早，图片已经遗失在了互联网的长河中\nWindows10以其良好的性能、外观和与移动端的兼容性正逐渐被大众所接受，市场份额也逐渐上涨。但 升级\\重装\\用了一段时间 之后，发现键盘突然就 识别不出来\\失灵 了，这就非常不方便了。但结果我一上午的摸索，终于找到了解决方法！\n电脑用久了就会有越来越多乱七八糟的 软件\\文件\\缓存 堆积在C盘的各个角落，拖严重影响使用体验。应对这种情况呢，如果没有什么重要的文件的话，直接重装就是最好的解决方案啦！嗯，于是我从微软官网上下载了一个“Windows10 创意者”给电脑装上了……\n但是当系统安装完之后，我才发现\n但本着极（wu）客（聊）精神，尝试了不少办法，终于找到了最佳解决方案！\n检查设备连线 检查一下你的电脑与键盘的连接线有没有插好，如果没有的话记得要插紧♂一点。把你的键盘插到其他电脑看看是不是键盘坏掉了或者打开主机看看是不是哪里有问题。\n检查驱动程序有没有正确安装 右键左下角Windows标志，选择设备管理器→键盘→更新驱动程序，然后Windows10 就会自己在线更新驱动啦！（也可以用驱动精灵、驱动大师之类的软件更新驱动）\n找不到键盘设备怎么破？！ 这也是我所遇到的问题，键盘设备都没有识别出来啊啊啊啊啊！ 此时，这可能就是BIOS那里的问题了！你可以关机并拔电源后拆开电脑来看看，把BIOS的电池抠下来，等一会再装回去。当然你也可以开机的时候进入BIOS（不同品牌的电脑进BIOS的方法会不同，可以在网上搜索“你的电脑品牌+BIOS”找到你的电脑进入BIOS的方法），根据提示或说明书回复BIOS的出厂设置。\n还是不行啊啊啊啊啊！！！怎么办？！ 如果上面的方法都无效，而且键盘确实是好的，重点是在BIOS设置中键盘是可以正常使用的！！！那么就是系统的问题了！\n如果设备管理器里面没有键盘设备，你可以参考这篇文章，设置完毕之后重启一下电脑，看看键盘能不能用，如果还不行，请继续往下看。\n选择小娜的搜索框（或是快捷键Windows + R），输入regedit，回车，打开注册表管理器。然后定位到HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Class\\{4D36E96B-E325-11CE-BFC1-08002BE10318} 删除UpperFilters项，然后再去设备管理器把键盘的驱动卸载。接着重启电脑。\n开机之后如果你在进去设备管理器看的话，键盘的状态可能\\应该是该设备无法启动。 (代码 10)酱紫的。\n然后再定位到那个目录定位到HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Class\\{4D36E96B-E325-11CE-BFC1-08002BE10318}\n新建一个名称为UpperFilters多字符串值项，内容填上kbdclass 然后再去设备管理器卸载键盘设备，重启电脑即可。\n到这一步我的键盘终于恢复工作了！\n还不行，怎么办？ 要不，你试试重装一遍系统？\n再不行的话，这可能是因为内部硬件损坏导致的了，建议你把电脑交给专业的维修人员进行检查维修。\n完。\n","permalink":"https://weixiang.github.io/posts/the-solution-to-the-system-not-recognizing-the-keyboard-after-windows-10-update/","summary":"Windows10以其良好的性能、外观和与移动端的兼容性正逐渐被大众所接受，市场份额也逐渐上涨。但 升级\\重装\\用了一段时间 之后，发现键盘突然就 识别不出来\\失灵 了，这就非常不方便了。但结果我一上午的摸索，终于找到了解决方法！","title":"Windows 10 更新后系统无法识别键盘的解决方案"},{"content":" 2022年1月25日 更新\n如你所见，这是我开始写博客以来的第一篇文章，时过境迁，很多东西都不一样了，看个乐就好。还有一件事，现在我用的博客是基于 Ghost 的。\n断断续续地花了一个星期时间，终于把这个博客网站重新搭建了起来。其实这个网站在2017年的8月份就已经上线，但由于学业等原因，网站一直处于挂着的状态，现在趁着假期又将网站重新构建，优化添加了不少东西，也准备开始定期发布文章了。\n我想的是可以在这个站点写下自己所想的，记一些笔记，并不期盼会有多少人看到，其实最终大部分都是写给自己看的吧！重点是我的文笔也不算好……\n开始享受纯粹的Hexo写作吧！\n这个网站使用了 HEXO 作为博客系统，这是一个非常好用的博客系统，还有很多优秀的主题和插件可以选，还有Markdown的写作方式。网站同时托管于 Github Page 和 Coding Page 上，也使用了腾讯云的存储服务。 感兴趣的同学可以来与我交流哦~\nTips：这个站点有两个服务器，由于众所周知的原因，国内站（Coding）可能会速度比较快一些，你可以根据自己的网络情况在网页底部进行切换~\n嗯就是这样，没了。最后放上一张我最近拍的风景照~\n江西南昌\n","permalink":"https://weixiang.github.io/posts/hello-hexo/","summary":"你好世界 是所有编程语言给予世界的第一句问候，代表我博客时光的开始。","title":"您好，世界"},{"content":"时间线 2018-2-3 站点建立，由 Hexo 驱动，托管于GitHub Pages，发布第一篇文章 2018-02-17 启用域名 ████.tech 和 ████████.club [数据删除] 2018-9 迁移至 Coding Pages 进行托管 2018-12-30 更换由 Ghost 驱动，服务器迁移至美国西海岸 2019-06-26 迁移至腾讯云服务器CVM 2019-11-12 迁移服务器至美国西海岸 2020-03-11 更换域名为 jacobr.xyz，暂时关闭博客，仅保留关于页面，更换为静态页面。 2020-03-23 迁移至阿里云服务器ECS 2021-06-21 启用新域名 jacobruan.com 2021-10-08 服务器迁移至新西伯利亚 2022-07-04 服务器故障，博客暂时下线 2022-08-07 重新安装服务器，恢复访问 2022-12-07 更新到 Ghost 5.0 2023-10-14 迁移服务器至阿里云新加坡 2024-08-06 更换为 Hugo 驱动，页面托管至 GitHub 感谢世界著名慈善企业Cloudflare，感谢Microsoft，提供了GitHub Page托管、GitHub Action自动部署，以及宇宙第一编辑器VS Code，感谢所有开源作者。\n","permalink":"https://weixiang.github.io/posts/blog-update-log/","summary":"本站点自创立以来的更新记录","title":"站点更新记录"},{"content":"Power\u0026rsquo;s Wiki https://wiki-power.com/\nPower Lin 的知识库\n雪山深处 https://www.talaxy.site/\nTalaxy 的博客。一个个人博客，记录所思所想。\nWAI 科技社 https://www.waitech.cn\nWAI 科技社 (Who Am I Science \u0026amp; Technology Club) 是由博罗中学学生自发、由信息科组提供指导与支持的STEM学生社团，是青少年创客和STEAM教育的学习和分享交流平台，在这里共享知识、交流技术，一起分享创造的喜悦。是广东省教育“双融双创”智慧共享社区项目的成员社团之一。\n欢迎在下面的评论区交换友链 : )\n","permalink":"https://weixiang.github.io/links/","summary":"我的朋友们，当然，也欢迎你来加入。","title":"友情链接"}]